{"version":3,"sources":["src/themes/light/index.ts","src/themes/light/App.ts","src/themes/light/Form.ts","src/themes/light/Game.ts","src/themes/light/Header.ts","src/themes/light/Notification.ts","src/themes/light/Rules.ts","assets/splash.gif","src/themes/index.ts","src/reducers/AuthReducer.ts","src/reducers/GameReducer.ts","src/navigation/app-routes.ts","src/reducers/index.ts","src/actions/game.ts","src/actions/auth.ts","src/scenes/auth/platformSpecific/LogoutWithGoogle.tsx","src/components/form-button.component.tsx","src/scenes/auth/sign-out.component.tsx","src/assets/icons.tsx","src/components/form-input.component.tsx","src/scenes/auth/platformSpecific/LoginWithGoogle.tsx","src/scenes/auth/platformSpecific/LoginWithApple.ios.tsx","src/data/sign-in.model.ts","src/components/modal-header.component.tsx","src/scenes/auth/sign-in.component.tsx","src/data/sign-up.model.ts","src/scenes/auth/register.component.tsx","src/scenes/auth/index.ts","src/scenes/game/host.component.tsx","src/data/join-lobby.model.ts","src/components/loading.component.tsx","src/scenes/game/join.component.tsx","src/components/modal-header-lobby.component.tsx","src/components/notification-bar.component.tsx","src/components/player-single.component.tsx","src/components/player-list.component.tsx","src/components/question-list.component.tsx","src/scenes/game/game-tabs.component.tsx","src/scenes/game/lobby.component.tsx","src/components/answers.component.tsx","src/components/picked-players.component.tsx","src/data/question-input.model.ts","src/helpers/shuffle-question.helper.ts","src/components/question-input.component.tsx","src/scenes/game/game.component.tsx","src/data/edit-user.model.ts","src/components/payment.component.tsx","src/scenes/game/edit.component.tsx","src/scenes/game/index.ts","src/navigation/auth.navigator.tsx","src/scenes/main/home.component.tsx","src/scenes/main/devinfo.component.tsx","src/scenes/main/rules.component.tsx","src/scenes/main/index.ts","src/navigation/main.navigator.tsx","src/navigation/game.navigator.tsx","src/navigation/app.navigator.tsx","App.tsx","web-build/register-service-worker.js","src/themes sync /^/.//.*$","assets/Extra.png","assets/Hosting.png","assets/Joining1.png","assets/Hosting1.png","assets/ChosenorNotChosen.png"],"names":["App","Form","Game","Header","Notification","Rules","StyleSheet","create","tab","flex","justifyContent","backgroundColor","rulesContainer","textAlign","container","paddingVertical","paddingHorizontal","alignItems","position","title","color","fontSize","fontWeight","titleRed","paddingBottom","subTitle","itemContainer","display","formButton","marginVertical","borderWidth","shadowColor","shadowOpacity","shadowRadius","shadowOffset","width","height","borderRadius","formButtonAlternate","signOutAndCogContainer","top","margin","flexDirection","signOutBtn","formContainer","formContainerReg","homeBtn","resetPasswordContainer","formControl","borderColor","formControlReg","submitButton","noAccountButton","haveAccountButton","thirdPartyButtonContainer","customHrTag","marginTop","marginBottom","customHrTagReg","paddingTop","gameLoadingSpinner","loadingSpinner","listContainer","listItem","playerAvatar","alignSelf","borderTopStartRadius","borderTopEndRadius","submitButtonJoined","bottom","borderBottomStartRadius","titleChosenYellow","titleChosenRed","answerLeft","left","padding","borderBottomEndRadius","answerRight","right","pleadTheFifth","pleadAlignLeft","pleadAlignRight","question","questInAnsPhase","pickedPlayerContainer","pickedPlayer","pickedPlayerCard","cardPink","cardPinkAnswer","cardPurpleAnswer","cardPurple","belowCardText","alignLeft","alignRight","titleNotChosen","inputTitle","inputContainer","borderTopLeftRadius","borderTopRightRadius","questionInputContainer","questionInput","overflow","questionInputButton","marginHorizontal","codeTitle","leaderboardTitle","button","notification","rulesImage","ruleHeading","ruleDescription","rulesBtn","module","exports","styles","require","default","fileName","initialState","name","email","password","confirm_password","isLoading","canSubmit","token","actionSuccess","error","authedWithGoogle","accessToken","AppRoute","colours","lobbyName","user","id","score","inHotseat","inLobby","inGame","isHost","players","messages","pickedPlayers","questions","roundOver","round","phase","timer","hotseatOptions","undefined","currentQuestionId","roundOptions","numOfRounds","init","canAnswer","displayAnswer","editUser","userToEditIndex","combineReducers","auth","state","action","type","payload","prop","value","toRegister","_id","game","message","result","hide","push","includes","allMessages","i","findIndex","dat","newPlayers","map","player","colour","length","playerI","hotseatPlayers","some","newQuestionId","console","getPlayers","log","newQuestions","answers","questionIndex","setGameLoading","setMessages","dispatch","setTimeout","initGameSock","GameSockClient","Constants","manifest","extra","SERVER_URL","newGameOptions","rounds","startGame","newRoundOptions","roundNum","setPhase","startRound","allQuestions","startHotseat","endGame","newPlayer","playerUpdate","playerListUpdate","onHotseatAnswer","secondsLeft","timerUpdate","msg","hostGameAction","body","Math","random","toString","substr","toUpperCase","username","then","Array","isArray","hostGame","joinGame","AsyncStorage","setItem","JSON","stringify","expiry","Date","now","lobby","catch","e","autoRejoinLobby","getItem","store","parsedStore","parse","data","find","inputQuestion","time","onNextQuestion","updateSinglePlayer","toggleRedirect","leaveGame","answerQuestion","playerIndex","baseUrl","setLoading","formUpdate","fetch","method","headers","response","json","err","getUser","login","loginWithThirdParty","provider","success","logout","credentials","signOutUrl","removeItem","WEB_GOOGLE_CLIENT_ID","LogoutWithGoogle","responseGoogle","res","setState","props","View","clientId","onSuccess","this","onFailure","buttonText","Text","Component","connect","ButtonInput","text","loading","icon","ButtonProps","accessoryRight","size","status","disabled","SafeAreaView","style","onPress","AlertTriangleIcon","EyeIcon","EyeOffIcon","FormInput","inputProps","formContext","useFormikContext","errors","fieldProps","captionIcon","caption","onChangeText","handleChange","LoginWithGoogle","tokenId","cookiePolicy","LoginWithApple","signInWithAppleMobile","a","async","AppleAuthentication","requestedScopes","FULL_NAME","EMAIL","fullName","givenName","familyName","identityToken","authorizationCode","Platform","OS","buttonType","SIGN_IN","buttonStyle","BLACK","cornerRadius","SignInSchema","SignInData","Yup","shape","min","required","ModalHeader","category","actions","React","useState","passwordVisible","setPasswordVisible","onPasswordIconPress","renderPasswordIcon","IconComponent","navigation","navigate","HOME","initialValues","validationSchema","onSubmit","values","submit","isSubmitting","setSubmitting","Fragment","placeholder","keyboardType","autoCapitalize","onKeyPress","nativeEvent","key","handleSubmit","secureTextEntry","appearance","isValid","isValidating","SIGN_UP","SignUpSchema","password_confirm","SignUpData","when","is","val","oneOf","autoCorrect","SignoutScreen","SignInScreen","RegisterScreen","HostScreen","SIGN_OUT","JoinLobbySchema","JoinLobbyData","max","LoadingComponent","gameActions","ModalHeaderLobby","lobbyCode","isLeaderboard","loadingText","filter","messageToDisplay","replace","item","editPage","renderItemIcon","getPlayerInitials","renderEditIcon","renderEditModal","accessoryLeft","initials","match","shift","pop","fill","sort","b","renderItem","selectedIndex","setSelectedIndex","renderIcon","onSelect","index","playerId","pointsToPlayers","hotseatPlayer","answer","questionAnswer","tabContainer","GameTabs","topState","useTabBarState","showTabs","gameIsFinished","readyToPlay","showEditPage","GAME","PickedPlayers","canSelectAnswer","onSelectPlayer","renderTextTitle","isPlayer","QuestionSchema","QuestionInputData","matches","objects","verbs","shuffleQuestion","randFromAr","array","floor","renderShuffleIcon","KeyboardAvoidingView","behavior","Keyboard","dismiss","numQuestions","setValues","useEffect","onSubmitEditing","setServerHasQuestions","notEnoughQuestions","setNotEnoughQuestions","useKeepAwake","onRequestQuestions","oldBool","userIsInHotseat","gamePhaseController","EditUserSchema","EditUserData","PaymentComponent","JoinScreen","LobbyScreen","GameScreen","EditUserScreen","hasPaid","Stack","createStackNavigator","AuthNavigator","Navigator","headerMode","screenOptions","animationEnabled","Screen","HOST","component","bindActionCreators","canRejoin","setCanRejoin","rejoinInfo","setRejoinInfo","unparsedID","parsedOldID","Accept","ok","active","bool","RULES","settingsIcon","questionIcon","settingsCog","DEVINFO","AUTH","field","version","DevInfoScreen","contentArr","imgSrc","description","Home","RulesScreen","page","level","Image","resizeMode","source","MainNavigator","mode","main","GameNavigator","INGAME","LOBBY","EDIT_USER","JOIN","AppNavigator","createStore","reducers","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","f","showApp","_cacheResourcesAsync","SplashScreen","gif","Asset","fromModule","downloadAsync","rg4js","ignore3rdPartyErrors","icons","EvaIconsPack","eva","theme","NavigationContainer","maxHeight","maxWidth","onLoad","navigator","addEventListener","serviceWorker","register","scope","info","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","keys","Object","resolve"],"mappings":"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8BtG,OAAaC,MAAM,CAC7ClP,cAAeiP,OAAauG,QAAQ,wBAAyB,CAAEnR,QAAS,mDAAsD+K,SAAS,2B,mBCArIqG,GAAU,CACd,qBACA,iBACA,sBACA,UACA,SACA,kBACA,cACA,kBACA,MACA,OACA,YACA,gBACA,kBACA,SACA,aACA,iBACA,kBACA,wBACA,gBACA,kBACA,kBACA,iBACA,sBACA,kBACA,qBACA,OACA,MACA,qBACA,eACA,iBACA,iBACA,QACA,WACA,QACA,eACA,SACA,eACA,eACA,cACA,uBACA,SACA,cACA,MACA,OACA,sBACA,MACA,QACA,UACA,kBACA,YACA,iBACA,QACA,aACA,WACA,uBACA,aACA,aACA,MACA,aACA,aACA,cACA,OACA,UACA,SACA,aACA,MACA,aACA,OACA,SACA,cACA,UACA,gBACA,OACA,eACA,OACA,aACA,aACA,WACA,OACA,SACA,aACA,eACA,UACA,QACA,aACA,eACA,aACA,YACA,SACA,UACA,WACA,oBACA,SACA,YACA,SACA,QACA,OACA,eACA,aACA,uBACA,iBACA,gBACA,MACA,WACA,WACA,gBACA,QACA,aACA,gBACA,QACA,gBACA,aACA,UACA,OACA,OACA,WACA,SACA,SACA,gBACA,aACA,OACA,SACA,eACA,YACA,QACA,MACA,YACA,gBACA,UACA,SACA,WACA,UACA,QACA,gBACA,uCACA,iBACA,kBACA,aACA,qBACA,eACA,mBACA,kBACA,oBACA,2BACA,wBACA,yBACA,mBACA,gBACA,qBACA,wBACA,QACA,QACA,QACA,iBACA,iBACA,MACA,gBACA,gBACA,UACA,QACA,cACA,gBACA,eACA,SACA,WACA,eACA,gBACA,cACA,cACA,aACA,gBACA,QACA,YACA,iBACA,SACA,QACA,MACA,SACA,QACA,OACA,oBACA,uBACA,mBACA,uBACA,cACA,OACA,cACA,cACA,aACA,aACA,WACA,cACA,SACA,YACA,QACA,cACA,QACA,cACA,YACA,QACA,UACA,QACA,iBACA,QACA,eACA,YACA,QACA,eACA,SACA,WACA,aACA,UACA,cACA,YACA,cACA,QACA,UACA,eACA,SACA,QACA,WACA,aACA,cACA,mBACA,eACA,cACA,YACA,YACA,QACA,cACA,QACA,UACA,UACA,aACA,cACA,gBACA,cACA,UACA,SACA,QACA,aACA,aACA,WACA,SACA,oBACA,SACA,aACA,aACA,aACA,YACA,QACA,UACA,YACA,cACA,UACA,YACA,OACA,SACA,mBACA,mBACA,SACA,KACA,OACA,SACA,YACA,kBACA,QACA,eACA,eACA,QACA,UACA,SACA,aACA,mBACA,eACA,cACA,SACA,aACA,QACA,UAMIC,GAAQ,CACZ,SACA,MACA,SACA,QACA,SACA,SACA,QACA,QACA,QACA,MACA,SACA,SACA,UACA,SACA,UACA,QACA,OACA,OACA,UACA,MACA,OACA,OACA,MACA,QACA,SACA,OACA,MACA,SACA,SACA,SACA,QACA,QACA,QACA,OACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,SACA,SACA,QACA,QACA,QACA,QACA,OACA,QACA,OACA,QACA,OACA,QACA,OACA,UACA,SACA,OACA,UACA,cACA,UACA,UACA,WACA,WACA,cACA,UACA,UACA,UACA,UACA,QACA,UACA,SACA,WACA,QACA,UACA,UACA,SACA,WACA,SACA,OACA,OACA,QACA,QACA,OACA,OACA,OACA,OACA,MACA,MACA,OACA,QACA,QACA,QACA,OACA,SACA,OACA,SACA,OACA,OACA,OACA,QACA,SACA,SACA,OACA,OACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,OACA,QACA,MACA,MACA,OACA,QACA,WACA,SACA,UACA,UACA,UACA,UACA,WACA,WACA,YACA,YACA,YACA,SACA,SACA,WACA,QACA,QACA,UACA,OACA,MACA,UACA,OACA,OACA,SACA,QACA,OACA,QACA,QACA,OACA,SACA,UACA,SACA,OACA,WACA,OACA,UACA,OACA,OACA,OACA,MACA,MACA,WACA,SACA,OACA,OACA,OACA,OACA,MACA,OACA,SACA,SACA,OACA,SACA,OACA,QACA,OACA,OACA,UACA,SACA,QACA,OACA,QACA,OACA,QACA,OACA,QACA,OACA,SACA,OACA,WACA,OACA,SACA,UACA,SACA,UACA,UACA,WACA,QACA,UACA,UACA,QACA,QACA,UACA,UACA,UACA,UACA,UACA,OACA,OACA,QACA,OACA,UACA,OACA,UACA,OACA,SACA,WACA,SACA,SACA,SACA,SACA,UACA,QACA,SACA,YACA,UACA,SACA,SACA,SACA,QACA,QACA,OACA,MACA,OACA,OACA,MACA,MACA,UACA,OACA,MACA,QACA,UACA,QACA,SACA,SACA,UACA,SACA,QACA,WACA,QACA,OACA,QACA,QACA,QACA,SACA,SACA,QACA,QACA,OACA,OACA,SACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,OACA,QACA,SACA,SACA,SACA,SACA,UACA,QACA,QACA,QACA,QACA,UACA,UACA,WACA,WACA,UACA,UACA,SACA,OACA,OACA,MACA,QACA,QACA,YACA,OACA,SACA,QACA,UACA,QACA,OACA,OACA,UACA,QACA,MACA,MACA,UACA,SACA,OACA,OACA,OACA,SACA,SACA,OACA,QACA,OACA,QACA,UACA,UACA,QACA,QAkBaC,GAZS,WACtB,IAAMC,EAAa,SAACC,GAAD,OACjBA,EAAMnO,KAAKoO,MAAMpO,KAAKC,SAAWkO,EAAM3Q,UAOzC,MALQ,wBAAyB0Q,EAAWF,IAA1C,MAAsDE,EACpDH,IADF,KCllBE3U,GAASC,EAAQ,GAARA,CAAqB,QAoJrB+K,gBAlBS,SAAClI,GAAkC,IAAD,EAOpDA,EAAMQ,KAEV,MAAO,CACL7C,UAVsD,EAEtDA,UASAvB,cAXsD,EAGtDA,cASA2C,UAZsD,EAItDA,UASAV,KAbsD,EAKtDA,KASAkB,aAdsD,EAMtDA,gBAcFoP,EAFazG,EA7HM,SAACT,GAIpB,IAYM0K,EAAoB,SAAC1K,GAAD,OACxB,kBAAC,QAAD,OAAUA,EAAV,CAAiBlK,KAAK,wBAGhBI,EAAsD8J,EAAtD9J,U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","file":"static/js/app.75bdd869.chunk.js","sourcesContent":["/*\n * File: index.ts\n * Project: frontend\n * Version: 1.0.0\n * File Created: Monday, 11th May 2020 11:36:00 am\n * Author: Eoan O'Dea - eoan@wspace.ie\n * ---------------\n * File Description: Theme controller for the light theme\n * Last Modified: Saturday, 16th May 2020 8:58:07 pm\n * Modified By: Eoan O'Dea - eoan@wspace.ie\n * ---------------\n * Copyright 2020 - WebSpace\n */\n\n/**\n * Import theme modules that are allowed to be accessed\n */\nimport App from './App';\nimport Form from './Form'\nimport Game from './Game'\nimport Header from './Header'\nimport Notification from './Notification'\nimport Rules from './Rules'\n\n/**\n * Export these modules to the rest of the application\n */\nexport default {\n  App,\n  Form,\n  Game,\n  Header,\n  Notification,\n  Rules\n};\n","import {StyleSheet} from 'react-native';\n\n/**\n * App Stylesheet for the light theme\n */\nexport default StyleSheet.create({\n  tab: {\n    // height: 192,\n    flex: 1,\n    // alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#D14688'\n  },\n  rulesContainer: {\n    flex: 1,\n    // alignItems: \"center\",\n    justifyContent: \"center\",\n    textAlign: 'center',\n    backgroundColor: '#D14688'\n  },\n  container: {\n    flex: 1,\n    paddingVertical: 16,\n    paddingHorizontal: 16,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: '#161F26',\n    position: 'relative'\n  },\n\n  title: {\n    // paddingHorizontal: 16,\n    // paddingTop: '37%',\n    // paddingBottom: 82,\n    color: '#D7D98B',\n    fontSize: 45,\n    fontWeight: '400',\n    textAlign: 'center',\n  },\n\n  titleRed: {\n    // paddingHorizontal: 16,\n    paddingBottom: 8,\n    color: '#AD0D4B',\n    fontSize: 45,\n    fontWeight: '900',\n    textAlign: 'center',\n  },\n\n  subTitle: {\n    textAlign: 'center',\n  },\n\n  itemContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n\n  formButton:{\n    marginVertical: 10,\n    paddingHorizontal: 120,\n    paddingVertical: 50,\n    backgroundColor: '#AD0D4B',\n    borderWidth: 0,\n    shadowColor: 'black',\n    shadowOpacity: 0.5,\n    shadowRadius: 5,\n    shadowOffset: { width: 2, height: 2},\n    borderRadius: 5,\n    // width: '80%',\n    // marginHorizontal: 'auto'\n  },\n\n  formButtonAlternate:{\n    marginVertical: 10,\n    paddingHorizontal: 120,\n    paddingVertical: 50,\n    borderWidth: 0,\n    shadowColor: 'black',\n    shadowOpacity: 0.5,\n    shadowRadius: 5,\n    shadowOffset: { width: 2, height: 2},\n    borderRadius: 5,\n    backgroundColor:'#00B0FF'\n  },\n\n\n  signOutAndCogContainer: {\n    position: 'absolute',\n    top: 50,\n    width: '95%',\n    margin: 'auto',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n\n  signOutBtn: {\n    backgroundColor: '#AD0D4B',\n    borderWidth: 0,\n  }\n});\n","import { StyleSheet } from \"react-native\";\n\n/**\n * Form Stylesheet for the light theme\n */\nexport default StyleSheet.create({\n  formContainer: {\n    flex: 1,\n    paddingVertical: 16,\n    paddingHorizontal: 16,\n    backgroundColor: '#AD0D4B',\n    position: 'relative',\n    justifyContent: \"center\",\n  },\n\n  formContainerReg: {\n    flex: 1,\n    paddingVertical: 16,\n    paddingHorizontal: 16,\n    backgroundColor: '#D14688',\n    position: 'relative',\n    justifyContent: \"center\",\n  },\n\n  homeBtn: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n\n  resetPasswordContainer: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n\n  formControl: {\n    marginVertical: 4,\n    backgroundColor: '#7B0D37',\n    borderColor: '#ffffff00',\n    fontSize: 16\n  },\n\n  formControlReg: {\n    marginVertical: 4,\n    backgroundColor: '#AB2364',\n    borderColor: '#ffffff00',\n    fontSize: 16,\n  },\n\n  submitButton: {\n    marginVertical: 24,\n    paddingVertical: 20,\n    backgroundColor: '#00B0FF',\n    borderWidth: 0,\n    shadowColor: 'black',\n    shadowOpacity: 0.5,\n    shadowRadius: 5,\n    shadowOffset: { width: 2, height: 2},\n    borderRadius: 5,\n  },\n\n  noAccountButton: {\n    // alignSelf: 'center',\n    marginVertical: 10,\n    paddingVertical: 20,\n    backgroundColor: '#D14688',\n    borderWidth: 0,\n    shadowColor: 'black',\n    shadowOpacity: 0.5,\n    shadowRadius: 5,\n    shadowOffset: { width: 2, height: 2},\n    borderRadius: 5,\n  },\n\n  haveAccountButton: {\n    // alignSelf: 'center',\n    marginVertical: 10,\n    paddingVertical: 20,\n    backgroundColor: '#AD0D4B',\n    borderWidth: 0,\n    shadowColor: 'black',\n    shadowOpacity: 0.5,\n    shadowRadius: 5,\n    shadowOffset: { width: 2, height: 2},\n    borderRadius: 5,\n  },\n\n  thirdPartyButtonContainer: {\n    alignItems: \"center\",\n    paddingVertical: 20,\n    borderWidth: 0,\n    shadowColor: 'black',\n    shadowOpacity: 0.5,\n    shadowRadius: 5,\n    shadowOffset: { width: 2, height: 2},\n    borderRadius: 5,\n  },\n\n  formButton:{\n    marginVertical: 12\n  },\n\n  \n  customHrTag: {\n    borderWidth: 0.5,\n    borderColor: '#D14688',\n    marginTop: 25,\n    marginBottom: 50,\n  },\n\n  customHrTagReg: {\n    borderWidth: 0.5,\n    borderColor: '#AD0D4B',\n    marginTop: 25,\n    marginBottom: 35,\n  }\n});\n","import { StyleSheet } from \"react-native\";\n\n/**\n * App Stylesheet for the light theme\n */\nexport default StyleSheet.create({\n  /**\n   * ------GLOBAL STYLING FOR GAME PAGES------ \n   */\n  container: {\n    flex: 1,\n    paddingTop: 32,\n    // paddingVertical: 16,\n    // paddingHorizontal: 16,\n    backgroundColor: \"#161F26\",\n  },\n\n  gameLoadingSpinner: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n\n  loadingSpinner: {\n    marginVertical: 20,\n  },\n\n  /**\n   * ------LOBBY (GLOBAL)------\n   */\n  listContainer: {\n    paddingHorizontal: 16,\n    backgroundColor: \"#161F26\",\n  },\n\n  listItem: {\n    paddingVertical: 20,\n    fontSize: 30,\n    backgroundColor: \"#161F26\",\n  },\n\n  playerAvatar: {\n    paddingVertical: 8,\n    borderRadius: 1000,\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 50,\n    height: 50,\n    textAlign: 'center',\n    color: '#fff'\n  },\n\n  /**\n   * ------LOBBY (HOST)------\n   */\n  submitButton: {\n    height: 150,\n    alignSelf: \"stretch\",\n    borderTopStartRadius: 25,\n    borderTopEndRadius: 25,\n    borderRadius: 0.01,\n    borderColor: \"#ffffff00\",\n  },\n\n  /**\n   * ------LOBBY (JOIN)------\n   */\n  submitButtonJoined: {\n    alignSelf: \"flex-end\",\n    position: \"absolute\",\n    bottom: \"10%\",\n    borderTopStartRadius: 0.001,\n    borderBottomStartRadius: 0.001,\n    borderRadius: 0.001,\n    borderColor: \"#ffffff00\",\n  },\n\n  /**\n   * ------IN-GAME (GLOBAL)------\n   */\n  title: {\n    paddingHorizontal: 16,\n    fontSize: 28,\n    fontWeight: \"300\",\n    textAlign: \"center\",\n    marginBottom: 20,\n  },\n\n  titleChosenYellow: {\n    fontSize: 36,\n    fontWeight: \"300\",\n    textAlign: \"center\",\n    marginBottom: 20,\n    color: \"#D7D98B\",\n  },\n\n  titleChosenRed: {\n    fontSize: 36,\n    fontWeight: \"300\",\n    textAlign: \"center\",\n    marginBottom: 20,\n    color: \"#AD0D4B\",\n  },\n\n  // answers: {\n  //   fontSize: 24,\n  //   fontWeight: \"300\",\n  //   position: \"relative\",\n  //   marginVertical: 30,\n  // },\n\n  // '@keyframes slideInLeft': {\n  //   from: {width: '0%'},\n  //   to: {width: '100%'}\n  // },\n\n  answerLeft: {\n    // transition: '.2s ease',\n\n    position: 'absolute',\n    left: 0,\n    top: '20%',\n\n    alignItems: \"flex-start\",\n    justifyContent: \"flex-start\",\n\n    // fontSize: 24,\n    fontSize: 18,\n    fontWeight: \"300\",\n    textAlign: \"left\",\n    marginVertical: 30,\n\n    alignSelf: \"flex-start\",\n    padding: 10,\n    borderTopEndRadius: 0.001,\n    borderBottomEndRadius: 0.001,\n    borderRadius: 0.001,\n    backgroundColor: \"#AD0D4B\",\n    borderColor: \"#ffffff00\",\n  },\n\n  answerRight: {\n    // transition: '.2s ease',\n\n    position: 'absolute',\n    right: 0,\n    bottom: '20%',\n    \n    alignItems: \"flex-end\",\n    justifyContent: \"flex-end\",\n\n    // fontSize: 24,\n    fontSize: 18,\n    fontWeight: \"300\",\n    textAlign: \"right\",\n    marginVertical: 30,\n    \n    alignSelf: \"flex-end\",\n    padding: 10,\n    borderTopStartRadius: 0.001,\n    borderBottomStartRadius: 0.001,\n    borderRadius: 0.001,\n    backgroundColor: \"#9F37DE\",\n    borderColor: \"#ffffff00\",\n  },\n\n  pleadTheFifth: {\n    fontSize: 24,\n    fontWeight: \"300\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    position: \"relative\",\n    marginVertical: 30,\n  },\n\n  pleadAlignLeft: {\n    // transition: '.2s ease',\n\n    position: 'absolute',\n    left: 0,\n    top: '0%',\n\n    alignSelf: \"flex-start\",\n    // position: \"absolute\",\n    // bottom: \"10%\",\n    padding: 10,\n    borderTopEndRadius: 0.001,\n    borderBottomEndRadius: 0.001,\n    borderRadius: 0.001,\n    backgroundColor: \"#AD0D4B\",\n    borderColor: \"#ffffff00\",\n  },\n\n  pleadAlignRight: {\n    // transition: '.2s ease',\n    \n    position: 'absolute',\n    right: 0,\n    bottom: '10%',\n\n    alignSelf: \"flex-end\",\n    // position: \"absolute\",\n    // bottom: \"10%\",\n    padding: 10,\n    textAlign: \"right\",\n    borderTopStartRadius: 0.001,\n    borderBottomStartRadius: 0.001,\n    borderRadius: 0.001,\n    backgroundColor: \"#9F37DE\",\n    borderColor: \"#ffffff00\",\n  },\n\n  question: {\n    fontSize: 28,\n    fontWeight: \"300\",\n    textAlign: \"center\",\n    marginBottom: 30,\n  },\n\n  questInAnsPhase: {\n    paddingHorizontal: 16,\n    paddingTop: 110,\n    fontSize: 28,\n    fontWeight: \"300\",\n    textAlign: \"center\",\n    marginBottom: 30,\n  },\n\n  /**\n   * ------IN-GAME (CHOSEN)------\n   */\n  pickedPlayerContainer: {\n    position: 'relative',\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    borderRadius: 0.01,\n  },\n\n  pickedPlayer: {\n    width: \"48%\",\n  },\n\n  pickedPlayerCard: {\n    height: 250,\n    display: \"flex\",\n    justifyContent: \"center\",\n    // transition: '.4s ease'\n  },\n\n  cardPink: {\n    backgroundColor: \"#AD0D4B\",\n  },\n\n  cardPinkAnswer: {\n    backgroundColor: '#ad0d4b80'\n  },\n\n  cardPurpleAnswer: {\n    backgroundColor: '#9f37de80'\n  },\n\n  cardPurple: {\n    backgroundColor: \"#9F37DE\",\n  },\n\n  belowCardText: {\n    marginVertical: 10,\n    paddingHorizontal: 16,\n  },\n\n  alignLeft: {\n    color: \"#AD0D4B\",\n  },\n\n  alignRight: {\n    color: \"#9F37DE\",\n    textAlign: \"right\",\n  },\n\n  /**\n   * ------IN-GAME (NOT CHOSEN)------\n   */\n  titleNotChosen: {\n    fontSize: 18,\n    textAlign: \"center\",\n    fontWeight: \"300\",\n    marginVertical: 30,\n    color: \"#D7D98B\"\n  },\n\n  inputTitle: {\n    marginVertical: 10,\n  },\n\n  inputContainer: {\n    padding: 10,\n    textAlign: 'center',\n    backgroundColor: '#161f26',\n    borderTopLeftRadius: 5,\n    borderTopRightRadius: 5,\n    bottom: 0,\n    left: 0,\n    width: '100%'\n  },\n\n  questionInputContainer: {\n    // flex: 1,\n    // height:48,\n    padding: 10,\n    flexDirection: 'row',\n    // backgroundColor: '#161F26',\n    backgroundColor: '#ffffff00',\n\n  },\n\n  questionInput: {\n    flex: 2,\n    height: '100%',\n    overflow: 'hidden',\n    backgroundColor: '#7B0D37',\n    borderColor: '#ffffff00',\n  },\n\n  questionInputButton: {\n    // maxHeight: '100%',\n    borderRadius: 50,\n    marginHorizontal: 10,\n    height: 50,\n    width: 50\n  },\n});\n","import {StyleSheet} from 'react-native';\n\n/**\n * App Stylesheet for the light theme\n */\nexport default StyleSheet.create({\n  container: {\n    paddingVertical: 32,\n    paddingBottom: 16,\n    // paddingHorizontal: 16,\n    flexDirection: \"column\",\n    justifyContent: 'space-between'\n  },\n\n  title: {\n    // paddingVertical: 32,\n    paddingTop: 32,\n    color: 'white',\n    fontWeight: '200',\n    textAlign: 'center',\n    fontSize: 18,\n  },\n\n  codeTitle: {\n    fontWeight: '400',\n    textAlign: 'center',\n    fontSize: 45,\n    color: '#D7D98B',\n  },\n\n  leaderboardTitle: {\n    fontSize: 36,\n    fontWeight: '200',\n    color: '#FFF',\n  },\n\n  button: {\n    paddingHorizontal: 12,\n    paddingVertical: 10,\n    // alignItems: \"flex-end\",\n    // marginLeft: 'auto'\n    // maxWidth: '30%',\n    alignSelf: 'flex-start',\n    justifyContent: 'flex-start',\n    // border: 0,\n    // marginLeft: 50,\n  }\n});\n","import { StyleSheet } from \"react-native\";\n\n/**\n * App Stylesheet for the light theme\n */\nexport default StyleSheet.create({\n  /**\n   * ------LOBBY & IN GAME NOTIFICATION BAR------ \n   */\n  container: {\n    alignSelf: \"flex-end\",\n    position: \"absolute\",\n    bottom: \"20%\",\n  },\n\n  notification: {\n    borderTopStartRadius: 0.001,\n    borderBottomStartRadius: 0.001,\n    borderRadius: 0.001,\n    marginVertical: 8,\n    borderColor: \"#ffffff00\",\n  },\n});\n","import {StyleSheet} from 'react-native';\n\n/**\n * Rules Stylesheet for the light theme\n */\nexport default StyleSheet.create({\n  tab: {\n    flex: 1,\n    alignItems: 'center',\n    textAlign: 'center',\n    justifyContent: 'space-evenly',\n    backgroundColor: '#D14688',\n    padding: 40,\n    position: 'relative'\n  },\n  rulesImage: {\n    width: '80%',\n    height: '20%'\n  },\n  rulesContainer: {\n    flex: 1,\n    // alignItems: \"center\",\n    justifyContent: \"center\",\n    textAlign: 'center',\n    backgroundColor: '#D14688'\n  },\n  ruleHeading: {\n    textAlign: 'center'\n  },\n  ruleDescription: {\n    fontSize: 20,\n    textAlign: 'center'\n  },\n  rulesBtn: {\n    width: '80%',\n    position: 'absolute',\n    bottom: 25\n  }\n});\n","module.exports = __webpack_public_path__ + \"static/media/splash.69ca51ff.gif\";","/*\n * File: index.ts\n * Project: frontend\n * Version: 1.0.0\n * File Created: Monday, 11th May 2020 11:36:00 am\n * Author: Eoan O'Dea - eoan@wspace.ie\n * ---------------\n * File Description: Primary theme controller for the application\n * Last Modified: Saturday, 16th May 2020 8:59:09 pm\n * Modified By: Eoan O'Dea - eoan@wspace.ie\n * ---------------\n * Copyright 2020 - WebSpace\n */\n\n/**\n * The name of the theme (folder)\n */\nconst theme = \"light\"\n\n/**\n * Aquire the styles from that theme\n */\nconst styles = require(`./${theme}`).default;\n\n/**\n * Export the theme to the rest of the application\n */\nmodule.exports = (fileName: string | number) => styles[fileName] || {};\n","/*\n * File: AuthReducer.ts\n * Project: frontend\n * Version: 1.0.0\n * File Created: Thursday, 14th May 2020 3:12:41 pm\n * Author: Eoan O'Dea - eoan@wspace.ie\n * ---------------\n * File Description: Reducer for all authentication related requests and actions\n * Last Modified: Saturday, 16th May 2020 8:56:51 pm\n * Modified By: Eoan O'Dea - eoan@wspace.ie\n * ---------------\n * Copyright 2020 - WebSpace\n */\n\nimport { IAction, IAuthState } from \"./interfaces\";\n\n/**\n * Initial state for redux\n * Stores info about the\n * registering / logged in user\n */\nconst initialState: IAuthState = {\n  name: \"\",\n  email: \"test@test.ie\",\n  password: \"testtest\",\n  confirm_password: \"\",\n  isLoading: false,\n  canSubmit: false,\n  token: \"\",\n  actionSuccess: false,\n  error: \"\",\n  authedWithGoogle: false,\n  accessToken: \"\"\n};\n\n/**\n * Reducers for authentication\n *\n * @param {InitialState, IAction} initialState, action\n */\nexport default (state = initialState, action: IAction) => {\n  switch (action.type) {\n    /**\n     * Toggles the toRegister boolean\n     * Determinds whether to display the\n     * login or register component\n     */\n    case \"IS_LOADING\":\n      return {\n        ...state,\n        isLoading: !state.isLoading,\n      };\n\n    /**\n     * Handles form on change events for\n     * login & register forms\n     */\n    case \"FORM_UPDATE\":\n      return {\n        ...state,\n        [action.payload.prop]: action.payload.value,\n      };\n\n    /**\n     * When a user has\n     * successfully registered\n     */\n    case \"USER_REGISTERED\":\n      return {\n        ...state,\n        toRegister: false,\n        email: action.payload.user.email,\n        name: \"\",\n        password: \"\",\n        confirm_password: \"\",\n        actionSuccess: true,\n        error: \"\",\n        isLoading: false\n      };\n\n    /**\n     * When a API request responds with\n     * an error, store it in the state\n     */\n    case \"REQUEST_ERROR\":\n      return {\n        ...state,\n        error: action.payload.error,\n        isLoading: false\n      };\n\n    /**\n     * When a user has successfully\n     * logged in\n     */\n    case \"USER_LOGGED_IN\":\n      return {\n        ...state,\n        token: action.payload.token,\n        name: action.payload.user!.name,\n        email: action.payload.user!.email,\n        _id: action.payload.user!._id,\n        password: \"\",\n        error: \"\",\n        isLoading: false\n      };\n\n    /**\n     * When a user has successfully\n     * logged in with Google\n     */\n    case \"USER_LOGGED_IN_GOOGLE\":\n      return {\n        ...state,\n        token: action.payload.token,\n        name: action.payload.user!.name,\n        email: action.payload.user!.email,\n        _id: action.payload.user!._id,\n        password: \"\",\n        error: \"\",\n        authedWithGoogle: true,\n        isLoading: false\n      };\n\n    /**\n     * When a user has successfully\n     * logged in with Google on either iOS\n     * or android\n     */\n    case \"USER_LOGGED_IN_GOOGLE_MOBILE\":\n      return {\n        ...state,\n        token: action.payload.token,\n        name: action.payload.user!.name,\n        email: action.payload.user!.email,\n        _id: action.payload.user!._id,\n        accessToken: action.payload.user!.accessToken,\n        password: \"\",\n        error: \"\",\n        authedWithGoogle: true,\n        isLoading: false\n      };\n\n    /**\n     * When a user has logged out\n     */\n    case \"USER_LOGGED_OUT\":\n      return {\n        ...state,\n        token: \"\",\n        _id: \"\",\n        name: \"\",\n        email: \"\",\n        accessToken: \"\",\n        isLoading: false\n      };\n\n    /**\n     * The default state reducer\n     */\n    default:\n      return state;\n  }\n};\n","/*\n * File: GameReducer.ts\n * Project: frontend\n * Version: 1.0.0\n * File Created: Thursday, 4th June 2020 3:56:51 pm\n * Author: Eoan O'Dea - eoan@wspace.ie\n * ---------------\n * File Description:\n * Last Modified: Thursday, 4th June 2020 3:57:44 pm\n * Modified By: Eoan O'Dea - eoan@wspace.ie\n * ---------------\n * Copyright 2020 - WebSpace\n */\n\nimport { IGameState, IPlayer, IMessage } from \"./interfaces\";\nimport { RoundOptions, Question } from \"@rossmacd/gamesock-client\";\nimport { getPlayers } from '@rossmacd/gamesock-client';\n\ninterface IGameAction {\n  type: string;\n  payload: any;\n}\n\nconst colours = [\n  \"#972852\", \"#96251C\", \"#497BB6\", \"#AF39B2\", \"#A45EDC\", \"#D49D6D\"\n]\n\n/**\n * Initial state for redux\n * Stores info about the\n * lobby name and current user\n */\nconst initialState: IGameState = {\n  lobbyName: \"\",\n  user: {\n    id: \"\",\n    name: \"\",\n    score: 0,\n    inHotseat: false,\n  },\n  inLobby: false,\n  inGame: false,\n  isHost: false,\n  players: [],\n  isLoading: false,\n  error: \"\",\n  messages: [],\n  pickedPlayers: [],\n  questionInput: \"Who's more likely to\",\n  questions: [],\n  roundOver: false,\n  round: 0,\n  phase: \"\",\n  timer: 0,\n  hotseatOptions: undefined,\n  currentQuestionId: 0,\n  roundOptions: undefined,\n  numOfRounds: 3,\n  init: false,\n  canAnswer: false,\n  displayAnswer: false,\n  editUser: false,\n  userToEditIndex: 0\n};\n\n/**\n * Reducers for authentication\n *\n * @param {InitialState, IAction} initialState, action\n */\nexport default (state = initialState, action: IGameAction) => {\n  switch (action.type) {\n    case \"INITIALISE_GAMESOCK\":\n      return {\n        ...state,\n        init: true,\n      };\n    /**\n     * Toggles the toRegister boolean\n     * Determinds whether to display the\n     * login or register component\n     */\n    case \"IS_LOADING_GAME\":\n      return {\n        ...state,\n        isLoading: !state.isLoading,\n      };\n\n    /**\n     * Update the messages array\n     * with messages from the gamesock\n     * server\n     */\n    case \"SET_MESSAGES\":\n      const messages = state.messages;\n      const message = action.payload as string\n\n      let result: IMessage = {\n        hide: false,\n        message: message\n      }\n\n      /**\n       * Push the new message to the array\n       */\n      messages.push(result);\n      \n      /**\n       * Grab loading and error from the state\n       */\n      let isLoading = state.isLoading\n      let error = state.error\n      \n      /**\n       * If the message is a lobby does not exist error\n       * add the error too\n       */\n      if(isLoading && action.payload.includes('does not exist')) {\n        isLoading = false\n        error = action.payload\n      } else error = ''\n\n      return {\n        ...state,\n        messages: [...messages],\n        isLoading: isLoading,\n        error: error\n      };\n\n    case \"HIDE_MESSAGE\":\n      let allMessages = state.messages;\n      const i = allMessages.findIndex((dat => dat.message === action.payload))\n      allMessages[i].hide = true\n\n      return {\n        ...state,\n        messages: [...allMessages],\n      };\n\n    /**\n     * Update the list of players\n     */\n    case \"PLAYER_LIST_UPDATE\":\n      const newPlayers = action.payload as IPlayer[]\n      newPlayers.map((player, i) => {\n        if(i > colours.length - 1) {\n          return player.colour = colours[i - colours.length]  \n        }\n        return player.colour = colours[i]\n      })\n      return {\n        ...state,\n        players: [...newPlayers],\n      };\n    /**\n     * Update a single player\n     */\n    case \"PLAYER_SINGLE_UPDATE\":\n      let players = state.players;\n      const playerI = state.players.findIndex(\n        (player: IPlayer) => player.id === action.payload.id\n      );\n      \n      players[playerI] = {score: players[playerI].score, colour: players[playerI].colour, ...action.payload}\n\n      return {\n        ...state,\n        players: [...players],\n        isLoading: false,\n        editUser: false\n      };\n\n    /**\n     * Prepare to redirect the player back to the lobby\n     * on update\n     */\n    case \"SINGLE_PLAYER_EDIT\":\n      const editUser = state.editUser\n      if(action.payload !== \"\") {\n\n        const playerI = state.players.findIndex(\n          (player: IPlayer) => player.id === action.payload\n        );\n        \n        return {\n          ...state,\n          editUser: !editUser,\n          userToEditIndex:  playerI\n        }\n      }\n      return {\n        ...state,\n        editUser: !editUser\n      }\n\n    /**\n     * When a API request responds with\n     * an error, store it in the state\n     */\n    // case \"REQUEST_ERROR\":\n    //   return {\n    //     ...state,\n    //     error: action.payload.error,\n    //     isLoading: false\n    //   };\n\n    case \"HOST_GAME\":\n      return {\n        ...state,\n        lobbyName: action.payload.lobbyName,\n        user: action.payload.user,\n        inLobby: true,\n        isHost: true,\n        isLoading: false,\n        error: ''\n      };\n\n    case \"JOIN_GAME\":\n      return {\n        ...state,\n        lobbyName: action.payload.lobbyName,\n        user: action.payload.user,\n        players: [...(action.payload.players||state.players)],\n        inLobby: true,\n        isLoading: false,\n        roundOver: false,\n        error: ''\n      };\n\n    case \"LEAVE_GAME\":\n      return {\n        ...state,\n        lobbyName: \"\",\n        inGame: false,\n        inLobby: false,\n        isHost: false,\n        isLoading: false,\n        error: ''\n      };\n    case \"START_GAME\":\n      return {\n        ...state,\n        numOfRounds: action.payload,\n      };\n\n    case \"START_ROUND\":\n      const roundOptions = action.payload as RoundOptions;\n      let user = state.user;\n      if (\n        roundOptions.hotseatPlayers.some(\n          (player: IPlayer) => player.id === user.id\n        )\n      ) {\n        user.inHotseat = true;\n      } else user.inHotseat = false;\n\n      return {\n        ...state,\n        inGame: true,\n        isLoading: false,\n        questions: [],\n        currentQuestionId: 0,\n        user: user,\n        roundOptions: roundOptions,\n      };\n\n    case \"INPUT_QUESTION\":\n      const questions = state.questions;\n\n      questions.push(action.payload as Question);\n\n      return {\n        ...state,\n        questionInput: \"Who's more likely to\",\n        questions: questions,\n        isLoading: false,\n      };\n\n    case \"TIMER_UPDATE\":\n      /* \n        ❗ WARNING ❗🧾 READ ME 🧾 \n        This case is confusing and important to get right to stay in sync - hence this massive detailed comment.\n\n        When the timer gets an update 3 things can happen-\n          1. The new timer (action.payload) can increase - meaning a new timer has started (usually will be from 0 to a new value)\n\n          2. The timer can hit 0 - the timer is done\n\n          3. The timer can decrease by one - In this case the timer is running (nothing needs to be done, the state is just updated)\n        \n        Currently only the 1st is important - the timer is purely for display for any **other** purpose\n        When the timer is in \"hotseat ready\" or \"display answer\" phase and a new timer starts we know that we should ask the next question\n\n        Below is the cycle of the frontend when the hotseat has been started\n\n        00--> [START_HOTSEAT]\n        ----> PHASE: \"Hotseat Ready\"\n\n        02--> [TIMER_UPDATE]-> (timer > oldTimerValue) -> We know a new timer has started\n        ---->  PHASE: \"Hotseat\"\n\n        03--> ♻[TIMER_UPDATE]♻-> timer-- -> update display timer\n\n        04--> [ON_HOTSEAT_ANSWER] -> if phase !==\"Hotseat\" we are out of sync!\n        ----> PHASE: \"DisplayAnswer\" \n        ----> if all questions have been proccessed end round\n        ---> else [TIMER_UPDATE] loop to step 02\n        \n\n      */\n     if(action.payload>state.timer){\n      // If the phase is display answer we need to increase the question ID, hotseat ready only happens for the first question of the round\n      if( state.phase===\"Display Answer\"){\n        const newQuestionId = state.currentQuestionId+=1 \n        return {\n          ...state,\n          timer: action.payload,\n          currentQuestionId: newQuestionId,\n          phase: 'Hotseat',\n          canAnswer: true,\n          displayAnswer: false,\n        }\n      }else if(state.phase===\"Hotseat ready\") {\n        return {\n          ...state,\n          timer: action.payload,\n          currentQuestionId: 0,\n          phase: 'Hotseat',\n          canAnswer: true,\n          displayAnswer: false,\n        }\n      }else if(state.phase===\"Hotseat\"){\n        console.error(\"Hotseat probably out of sync\")\n      }\n    } \n    // else if (action.payload===0){\n    //   // Timer is done - new phase\n    // }else {\n    //     // If the value decreases by one should be safe to return\n    //     return {\n    //       ...state,\n    //       timer: action.payload,\n    //     }\n    //   }\n\n    //   if (\n    //     action.payload === 0 &&\n    //     state.phase === \"Hotseat\" &&\n    //     state.timer !== 0\n    //   ) {\n    //     // console.log(\"shifting questions\", state.questions);\n    //     // const shiftedQuestions = state.questions.shift()\n    //     // console.log('done', shiftedQuestions)\n    //     // state.questions.shift();\n    //     const newQuestionId = state.currentQuestionId+=1 \n    //     console.log(\"affetare questions\", state.questions);\n    //     return {\n    //       ...state,\n    //       timer: action.payload,\n    //       // questions: [...state.questions],\n    //       currentQuestionId: newQuestionId,\n    //       phase: 'Display answer',\n    //       canAnswer: true,\n    //       displayAnswer: false,\n    //     };\n    //   }\n      return {\n        ...state,\n        timer: action.payload,\n      };\n    case \"SET_PHASE\":\n      if (action.payload === \"Round Ended\") {\n        \n        if(state.isHost) {\n          getPlayers(state.lobbyName)\n          console.log('Updating players for score')\n        }\n        return {\n          ...state,\n          phase: action.payload,\n          roundOver: true,\n          inGame: false,\n        };\n      }\n\n      return {\n        ...state,\n        phase: action.payload,\n      };\n\n    case \"START_HOTSEAT\":\n      // const allQuestions =  as Question[]\n      // const hotseatOptions =  as HotseatOptions\n      console.log(\"start hotseat reducer\", action.payload);\n      return {\n        ...state,\n        phase:\"Hotseat ready\",\n        questions: [...action.payload.questions],\n        hotseatOptions: action.payload.hotseatOptions,\n        canAnswer: true,\n      };\n    case \"ON_HOTSEAT_ANSWER\":\n      let newQuestions = state.questions;\n      const answers =\n        action.payload.answers.length > 0\n          ? action.payload.answers\n          : [null, null];\n      console.log(\n        \"finding question and inserting answers!\",\n        newQuestions,\n        action.payload.questionIndex,\n        answers\n      );\n      newQuestions[action.payload.questionIndex].answers = [...answers];\n\n      return {\n        ...state,\n        questions: [...newQuestions],\n        displayAnswer: true,\n        canAnswer: false,\n        phase: \"Display Answer\"\n      };\n    case \"ON_NEXT_QUESTION\":\n      return {\n        ...state,\n        displayAnswer: false,\n      };\n    // case \"SET_CURRENT_QUESTION\":\n    //   return {\n    //     ...state,\n    //     currentQuestionId: state.currentQuestionId += 1,\n    //     displayAnswer: false,\n    //     canAnswer: true,\n    //   };\n\n    case \"ANSWER_QUESTION\":\n      return {\n        ...state,\n        canAnswer: false,\n      };\n\n    case \"END_GAME\":\n      // if(state.isHost) {\n      //   getPlayers(state.lobbyName)\n      //   console.log('Updating players for score')\n      // }\n      return {\n        ...state,\n        roundOver: true,\n        inGame: false,\n      };\n    /**\n     * The default state reducer\n     */\n    default:\n      return state;\n  }\n};\n","export enum AppRoute {\n    AUTH = 'Auth',\n    SIGN_IN = 'Sign In',\n    SIGN_UP = 'Sign Up',\n    SIGN_OUT = 'Sign Out',\n    HOME = 'Home',\n    RULES = 'Rules',\n    GAME = 'Game',\n    HOST = 'Host',\n    JOIN = 'Join',\n    LOBBY = 'Lobby',\n    EDIT_USER = 'Edit User',\n    INGAME = 'In Game',\n    END_GAME = 'End Game',\n    SETTINGS = 'Settings',\n    DEVINFO = \"Dev info\"\n}","/**\n * Import modules which can be accessed\n */\nimport AuthReducer from './AuthReducer'\nimport GameReducer from './GameReducer'\nimport { combineReducers } from 'redux'\n\n /**\n * Combine and Export these modules to the rest of the application\n */\nexport default combineReducers({auth: AuthReducer, game: GameReducer })","/*\n * File: game.ts\n * Project: frontend\n * Version: 1.0.0\n * File Created: Thursday, 4th June 2020 4:11:43 pm\n * Author: Eoan O'Dea - eoan@wspace.ie\n * ---------------\n * File Description: Game related actions in the redux state\n * Last Modified: Thursday, 4th June 2020 6:14:09 pm\n * Modified By: Eoan O'Dea - eoan@wspace.ie\n * ---------------\n * Copyright 2020 - WebSpace\n */\n\nimport { IPlayer } from '../reducers/interfaces';\nimport * as GameSockClient from '@rossmacd/gamesock-client';\n\nimport Constants from 'expo-constants';\nimport { Dispatch } from 'redux';\nimport { log } from 'console';\n// import { AsyncStorage } from 'react-native';\nimport AsyncStorage from '@react-native-community/async-storage';\nimport { useNavigation } from '@react-navigation/native';\nimport { AppRoute } from '../navigation/app-routes';\n// import { NavigationActions } from 'react-navigation'\nimport App from '../../App';\nimport { StackNavigationProp } from '@react-navigation/stack';\n\n\n\n/**\n * Interface for hosting a game\n */\nexport interface IHostGame {\n  username: string;\n  token: string;\n}\nexport interface IRejoinGame {\n  lobbyName: string;\n  id: string;\n}\n\n/**\n * Interface for joining a game\n */\nexport interface IJoinGame {\n  username: string;\n  lobbyName: string;\n}\n\n/**\n * Determinds whether to set\n * loading or not\n */\nexport const setGameLoading = () => {\n  return {\n    type: 'IS_LOADING_GAME',\n  };\n};\n\n/**\n * Messages sent from the gamesock library\n */\nexport const setMessages = (message: string, dispatch: Dispatch) => {\n  console.log('Socket message: ', message);\n  dispatch({\n    type: 'SET_MESSAGES',\n    payload: message,\n  });\n\n  setTimeout(() => {\n    dispatch({\n      type: 'HIDE_MESSAGE',\n      payload: message,\n    });\n  }, 8000);\n};\n\nexport const initGameSock = () => {\n  return (dispatch: Dispatch) => {\n    GameSockClient.setup(Constants.manifest.extra.SERVER_URL, `${Constants.manifest.extra.SERVER_URL}/timesync`);\n\n    GameSockClient.onStartGame((newGameOptions: GameSockClient.GameOptions) => {\n      console.log('starting game', newGameOptions.rounds);\n      startGame(newGameOptions.rounds, dispatch);\n    });\n\n    GameSockClient.onStartRound((newRoundOptions) => {\n      if (newRoundOptions.roundNum === 1) {\n        setPhase('Starting Game', dispatch);\n      } else {\n        setPhase('Starting Round', dispatch);\n      }\n      console.log('starting round');\n\n      startRound(newRoundOptions, dispatch);\n\n      setTimeout(() => {\n        setPhase('Question Gathering', dispatch);\n      }, 2 * 1000);\n    });\n\n    GameSockClient.onStartHotseat((allQuestions, hotseatOptions) => {\n      console.log('starting hotseat');\n\n      setPhase('Hotseat', dispatch);\n      startHotseat(allQuestions, hotseatOptions, dispatch);\n    });\n\n    GameSockClient.onRoundEnd(() => {\n      console.log('ending round');\n\n      setPhase('Round Ended', dispatch);\n      endGame();\n    });\n\n    GameSockClient.onSinglePlayerUpdate((newPlayer) => {\n      console.log('single player update', newPlayer);\n\n      playerUpdate(newPlayer, dispatch);\n    });\n\n    GameSockClient.onPlayerListUpdate((players) => {\n      console.log('player list update', players);\n      playerListUpdate(players, dispatch);\n    });\n\n    //   GameSockClient.onRequestQuestions(()=>{\n    //       return props.questions.map(question => question.question);\n    //   })\n\n    GameSockClient.onHotseatAnswer((questionIndex, answers) => {\n      onHotseatAnswer(questionIndex, answers, dispatch);\n    });\n\n    GameSockClient.onTimerUpdate((secondsLeft) => {\n      timerUpdate(secondsLeft, dispatch);\n    });\n\n    GameSockClient.onMessage((message) => {\n      setMessages(message.msg, dispatch);\n    });\n\n    /**\n     * @todo add error handling here and hook up to state\n     */\n    GameSockClient.onError((error) => {\n      console.log('error check my structure!!', error)\n      // setMessages(message.msg, dispatch);\n    })\n\n    dispatch({\n      type: 'INITIALISE_GAMESOCK',\n    });\n  };\n};\n\n/**\n * Initilise a lobby as a host from the home page\n *\n * @param {IHostGame} body\n */\nexport const hostGameAction = (body: IHostGame) => {\n  return (dispatch: Dispatch) => {\n    const lobbyName = Math.random().toString(36).substr(2, 4).toUpperCase();\n\n    GameSockClient.createLobby(lobbyName, body.username, body.token).then((players) => {\n      let user = Array.isArray(players) ? players[0] : players;\n\n      dispatch({\n        type: 'HOST_GAME',\n        payload: { lobbyName: lobbyName, user: user },\n      });\n    });\n  };\n};\n\n/**\n * Initilise a lobby as a host from the login function\n *\n * @param {IHostGame} body\n */\nexport const hostGame = (body: IHostGame, dispatch: any) => {\n  // GameSocketConfigExport();\n  const lobbyName = Math.random().toString(36).substr(2, 4).toUpperCase();\n\n  GameSockClient.createLobby(lobbyName, body.username, body.token).then((players) => {\n    let user = Array.isArray(players) ? players[0] : players;\n\n    dispatch({\n      type: 'HOST_GAME',\n      payload: { lobbyName: lobbyName, user: user },\n    });\n  });\n};\n\n// interface ID{\n//   id:string\n//   expiry:number;\n//   lobby:string;\n// }\n/**\n * Initilise a lobby as a join\n *\n * @param {IJoinGame} body\n */\nexport const joinGame = (body: IJoinGame) => {\n  return (dispatch: Dispatch) => {\n    return GameSockClient.joinLobby(body.lobbyName, body.username).then((players) => {\n      let user = Array.isArray(players) ? players[players.length - 1] : players;\n      AsyncStorage.setItem(\n        'myId',\n        JSON.stringify({\n          id: user.id,\n          expiry: Date.now() + 30 * 60 * 1000,\n          lobby: body.lobbyName,\n        })\n      ).catch((e: any) => console.log(e));\n\n      dispatch({\n        type: 'JOIN_GAME',\n        payload: { lobbyName: body.lobbyName, user: user },\n      });\n    });\n  };\n};\n\nexport const autoRejoinLobby = (body: IRejoinGame) => {\n  return (dispatch: Dispatch) => {\n    return AsyncStorage.getItem('myId')\n      .then((store) => {\n        if (store) {\n          const parsedStore = JSON.parse(store);\n          console.log('Attempting to claim with token' + parsedStore.toString(), parsedStore.expiry > Date.now());\n          return GameSockClient.claimSocket(parsedStore.lobby, parsedStore.id)\n            .then((data) => {\n              const players = data.players;\n              console.log('CLAIMED!!', players);\n              const user = Array.isArray(players) ? players.find((player) => player.id === data.id) : players;\n              if (!user) {\n                throw 'Could not find user!';\n              }\n              AsyncStorage.setItem(\n                'myId',\n                JSON.stringify({\n                  id: user.id,\n                  expiry: Date.now() + 30 * 60 * 1000,\n                  lobby: body.lobbyName,\n                })\n              ).catch((e) => console.error(e));\n              console.log('TIME to dispatch');\n              dispatch({\n                type: 'JOIN_GAME',\n                payload: { lobbyName: body.lobbyName, user: { ...user }, players: players },\n              });\n            })\n            .catch((e) => console.error(e));\n        }\n      })\n      .catch((e) => console.error(e));\n\n    // return GameSockClient.claimSocket()\n  };\n};\n\n// export const claimSocket = ()=>{\n\n// }\n/**\n * Start a new game as a host\n *\n */\n// export const startHostGame = (lobbyName: string) => {\n//     // console.log('running host game be')\n//     // return (dispatch: Dispatch) => {\n//     //     console.log('starting game')\n//         GameSockClient.startGame(lobbyName)\n//         // ((gameOptions: GameOptions) => {\n//         //     console.log('game starting!', gameOptions)\n//         //     dispatch({\n//         //         type: 'START_GAME',\n//         //         payload: gameOptions.rounds\n//         //     })\n//         // })\n//     // }\n// }\n\n/**\n * Start a new game\n *\n */\nexport const startGame = (rounds: number, dispatch: Dispatch) => {\n  dispatch({\n    type: 'START_GAME',\n    payload: rounds,\n  });\n};\n\n/**\n * Start a new round\n *\n */\nexport const startRound = (roundOptions: GameSockClient.RoundOptions, dispatch: Dispatch) => {\n  console.log('starting round!');\n  dispatch({\n    type: 'START_ROUND',\n    payload: roundOptions,\n  });\n};\n\n/**\n * Start a new game\n *\n */\nexport const inputQuestion = (question: GameSockClient.Question) => {\n  return {\n    type: 'INPUT_QUESTION',\n    payload: question,\n  };\n};\n\n/**\n * Updates the seconds left on a timer\n *\n * @param {number} time\n */\nexport const timerUpdate = (time: number, dispatch: Dispatch) => {\n  dispatch({\n    type: 'TIMER_UPDATE',\n    payload: time,\n  });\n};\n\n/**\n * Starting a hot seat during a round\n *\n * @param {Question[]} questions\n * @param {HotseatOptions} hotseatOptions\n */\nexport const startHotseat = (questions: GameSockClient.Question[], hotseatOptions: GameSockClient.HotseatOptions, dispatch: Dispatch) => {\n  console.log('starting hotseat and setting questions!', questions);\n  dispatch({\n    type: 'START_HOTSEAT',\n    payload: { questions, hotseatOptions },\n  });\n};\n\n/**\n * When both hotseat players answer a question\n *\n * @param {number} questionIndex\n * @param {number[]} answers\n * @param {Dispatch} dispatch\n */\nexport const onHotseatAnswer = (questionIndex: number, answers: number[], dispatch: Dispatch) => {\n  console.log('receiving answers!', answers, questionIndex);\n  dispatch({\n    type: 'ON_HOTSEAT_ANSWER',\n    payload: { questionIndex, answers },\n  });\n\n  // setTimeout(() => {\n  //       dispatch({\n  //           type: \"ON_NEXT_QUESTION\"\n  //       })\n  // }, 2000);\n};\n\nexport const onNextQuestion = (time: number) => {\n  return (dispatch: Dispatch) => {\n    console.log('next question in ', time, 'seconds');\n    setTimeout(() => {\n      dispatch({\n        type: 'ON_NEXT_QUESTION',\n      });\n    }, time);\n  };\n};\n\n/**\n * Update the list of players\n *\n * @param {IPlayer[]} players\n */\nexport const playerListUpdate = (players: IPlayer[], dispatch: Dispatch) => {\n  dispatch({\n    type: 'PLAYER_LIST_UPDATE',\n    payload: players,\n  });\n};\n\n/**\n * Update a single player\n *\n * @param {IPlayer} players\n */\nexport const playerUpdate = (player: IPlayer, dispatch: Dispatch) => {\n  dispatch({\n    type: 'PLAYER_SINGLE_UPDATE',\n    payload: player,\n  });\n};\n\n/**\n * Update a player by ID\n * \n * @param {string} lobbyName\n * @param {IPlayer} user\n */\nexport const updateSinglePlayer = (lobbyName: string, user: IPlayer) => {\n  return (dispatch: Dispatch) => {\n    GameSockClient.updateSelf(lobbyName, user)\n    dispatch({\n      type: 'SINGLE_PLAYER_REDIRECT'\n    })\n  }\n}\n\n/**\n * Toggle the redirect from the update username page\n */\nexport const toggleRedirect = (id: string = '') => (dispatch: Dispatch) => dispatch({type: 'SINGLE_PLAYER_EDIT', payload: id})\n\n\n/**\n * Leave a lobby / game\n *\n */\nexport const leaveGame = () => {\n  return (dispatch: Dispatch) => {\n    dispatch({\n      type: 'LEAVE_GAME',\n    });\n  };\n};\n\n/**\n * Ends a game / round depending\n * on the number of rounds\n */\nexport const endGame = () => {\n  return {\n    type: 'END_GAME',\n  };\n};\n\n/**\n * Set the phase within a game\n */\nexport const setPhase = (phase: string, dispatch: Dispatch) => {\n  dispatch({\n    type: 'SET_PHASE',\n    payload: phase,\n  });\n};\n\n/**\n * Answer a question within a game\n */\nexport const answerQuestion = (lobbyName: string, questionIndex: number, playerIndex: number, roundNum: number) => {\n  return (dispatch: Dispatch) => {\n    console.log('new answer!', questionIndex, playerIndex);\n    GameSockClient.sendAnswer(lobbyName, questionIndex, playerIndex, roundNum);\n    dispatch({\n      type: 'ANSWER_QUESTION',\n    });\n  };\n};\n","/*\n * File: index.ts\n * Project: frontend\n * Version: 1.0.0\n * File Created: Thursday, 14th May 2020 3:16:19 pm\n * Author: Eoan O'Dea - eoan@wspace.ie\n * ---------------\n * File Description: Authentication related actions in the redux state\n * Last Modified: Saturday, 16th May 2020 8:55:16 pm\n * Modified By: Eoan O'Dea - eoan@wspace.ie\n * ---------------\n * Copyright 2020 - WebSpace\n */\n\nimport { ICreate, IForm, ILogin, IThirdPartyToken } from \"./interfaces\"\nimport Constants from \"expo-constants\";\nimport { hostGame } from \"./game\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport { Dispatch } from \"redux\";\n\n\n/**\n * Prefixes for api endpoints\n */\nconst userPrefix = \"/api/user\"\nconst authPrefix = \"/api/auth\"\n\n/**\n * Get the baseURL for the server either from the .env file\n * or use a static IP\n */\n// console.log('server url!!' , Constants.manifest.extra.SERVER_URL)\nconst baseUrl = Constants.manifest.extra.SERVER_URL \n\n/**\n * Determinds whether to display the login\n * or register view\n */\nexport const setLoading = () => {\n    return {\n        type: 'IS_LOADING'\n    }\n}\n\n/**\n * Updates an item in the redux store\n * \n * @param {IForm} {prop, value}\n */\nexport const formUpdate = ({prop, value}: IForm) => {\n    return {\n        type: 'FORM_UPDATE',\n        payload: { prop, value }\n    }\n}\n\n/**\n * Register a user\n * \n * @param {ICreate} body\n */\nexport const create  = (body: ICreate) => {\n    return (dispatch: any) => {\n        fetch(`${baseUrl}${userPrefix}`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(body)\n        })\n        .then(response => response.json())\n        .then((data) => {\n            if(data.error) {\n                return dispatch({ type: 'REQUEST_ERROR', payload: data })\n            }\n            \n            dispatch({ type: 'USER_REGISTERED', payload: {user: data.data} })\n        })\n        .catch((err) => {\n            console.log(err)\n            return dispatch({ type: 'REQUEST_ERROR', payload: {error: 'Error: Could not connect to the server'} })\n        })\n    }\n}\n\nexport const getUser = (token: string) => {\n    return (dispatch: any) => {\n        fetch(`${baseUrl}${authPrefix}/user`, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            }\n        })\n        .then(response => response.json())\n        .then((data) => {\n            if(data.error) {\n                return dispatch({ type: 'REQUEST_ERROR', payload: data })\n            }\n            const payload = {\n                token: token,\n                ...data.data\n            }\n            // AsyncStorage.setItem('token', data.data.token)\n            dispatch({ type: 'USER_LOGGED_IN', payload })\n        })\n    }\n}\n\n/**\n * Login\n * \n * @param {ILogin} body \n */\nexport const login  = (body: ILogin) => {\n    return (dispatch: any) => {\n        fetch(`${baseUrl}${authPrefix}/signin`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(body)\n        })\n        .then(response => response.json())\n        .then((data) => {\n            if(data.error) {\n                return dispatch({ type: 'REQUEST_ERROR', payload: data })\n            }\n\n            AsyncStorage.setItem('token', data.data.token).catch(e=>console.log(e))\n            dispatch({ type: 'USER_LOGGED_IN', payload: data.data })\n            // dispatch(hostGame({username: data.data.user.name, token: data.data.token}))\n            hostGame({username: data.data.user.name, token: data.data.token},dispatch)\n            // dispatch({ type: 'HOST_GAME', payload: {username: data.data.user.name, token: data.data.token} })\n        })\n        .catch((err) => {\n            console.log(err)\n            return dispatch({ type: 'REQUEST_ERROR', payload: {error: 'Error: Could not connect to the server'} })\n        })\n    }\n}\n\n/**\n * Login with a third party system\n * \n * -Google\n * -Apple (iOS only)\n * \n * @param {IToken} token \n */\nexport const loginWithThirdParty  = (token: IThirdPartyToken) => {\n    return (dispatch: any) => {\n        fetch(`${baseUrl}${authPrefix}/signin/${token.provider}/${token.type}`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(token)\n        })\n        .then(response => response.json())\n        .then((data) => {\n            console.log('response!', data)\n            if(data.error || data.success !== true) {\n                return dispatch({ type: 'REQUEST_ERROR', payload: data })\n            }\n\n            AsyncStorage.setItem('token', data.data.token).catch(e=>console.log(e))\n\n            if(data.data.user.accessToken) dispatch({ type: 'USER_LOGGED_IN_GOOGLE_MOBILE', payload: data.data })\n            else dispatch({ type: 'USER_LOGGED_IN_GOOGLE', payload: data.data })\n\n            hostGame({username: data.data.user.name, token: data.data.token}, dispatch)\n        })\n        .catch((err) => {\n            console.log(err)\n            return dispatch({ type: 'REQUEST_ERROR', payload: {error: 'Error: Could not connect to the server'} })\n        })\n    }\n}\n\n\n\n/**\n * Logout a user\n * \n * @param {IToken} credentials\n */\nexport const logout  = (credentials: IThirdPartyToken) => {\n    /**\n     * If an access token exists, add it to the request url\n     */\n    const signOutUrl = credentials.accessToken\n    ? `signout/${credentials.accessToken}`\n    : 'signout'\n\n    return (dispatch: any) => {\n        fetch(`${baseUrl}${authPrefix}/${signOutUrl}`, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + credentials.token\n            },\n        })\n        .then(() => {\n            AsyncStorage.removeItem('token').catch(e=>console.log(e))\n            dispatch({ type: 'USER_LOGGED_OUT' })\n        })\n        .catch((err) => {\n            console.log('Logout Error', err)\n        })\n    }\n}\n","/*\n * File: LogoutWithGoogle.tsx\n * Project: frontend\n * Version: 1.0.0\n * File Created: Tuesday, 19th May 2020 5:18:52 pm\n * Author: Eoan O'Dea - eoan@wspace.ie\n * ---------------\n * File Description: Logout With Google Web only\n * Last Modified: Tuesday, 19th May 2020 5:19:18 pm\n * Modified By: Eoan O'Dea - eoan@wspace.ie\n * ---------------\n * Copyright 2020 - WebSpace\n */\n\nimport React, { Component } from \"react\";\nimport GoogleLogout from 'react-google-login';\nimport { Text, View } from \"react-native\";\nimport { connect } from \"react-redux\";\nimport {logout} from \"../../../actions/auth\";\n\n/**\n * Get Google Client ID from environment variables\n */\nimport Constants from \"expo-constants\";\nimport { IInitialState } from \"../../../reducers/interfaces\";\nconst WEB_GOOGLE_CLIENT_ID = Constants.manifest.extra.WEB_GOOGLE_CLIENT_ID\n\n/**\n * Interface actions \n * for the component\n */\ninterface ILogoutWithGoogleActions {\n    logout: (body: object) => void;\n}\n\ninterface ILogoutWithGoogleState {\n    error: string;\n}\n\n/**\n * Interface Props\n * for the component\n */\ntype IProps = {\n    token: string;\n};\n\nclass LogoutWithGoogle extends Component <IProps & ILogoutWithGoogleActions, ILogoutWithGoogleState> {\n    state = {\n        error: ''\n    }\n\n    /**\n     * Handles a response from Google\n     */\n    responseGoogle = (res: any) => {\n        if(res.error) {\n            this.setState({ error: res.error });\n        } else {\n            const {token} = this.props\n\n            this.props.logout({ token });\n        }\n    }\n\n    render() {\n        return (\n            <View>\n                <GoogleLogout\n                    clientId={WEB_GOOGLE_CLIENT_ID}\n                    onSuccess={this.responseGoogle}\n                    onFailure={this.responseGoogle}\n                    buttonText=\"Logout\"\n                />\n    \n                {this.state.error !== ''\n                    && <Text>Error: {this.state.error}</Text>\n                }\n            </View>\n        )\n    }\n}\n\n/**\n * Return a list of people from our redux state\n *\n * @param {*} state\n */\nconst mapStateToProps = (state: IInitialState) => {\n  const { token } = state.auth;\n\n  return {\n    token,\n  };\n};\n\nexport default connect<IProps, ILogoutWithGoogleActions>(mapStateToProps,{logout})(LogoutWithGoogle)","import React from 'react';\nimport { Button, Spinner, ButtonElement, ButtonProps, IconProps, Icon } from '@ui-kitten/components';\nimport { View } from 'react-native';\n\n\ninterface ButtonInputProps extends ButtonProps {\n  text: string;\n  loading: boolean;\n  disabled: boolean;\n  icon?: string;\n}\n\nexport const ButtonInput = ({ text, loading, icon = \"\", ...ButtonProps }: ButtonInputProps): ButtonElement => {\n\n  const LoadingIndicator = (props: any) => (\n    <View>\n      <Spinner size=\"small\" status=\"danger\" />\n    </View>\n  );\n\n  const renderIcon = (props: IconProps): React.ReactElement => (\n    <Icon {...props} name={icon} />\n  )  \n\n  if(loading) return (\n    <Button\n    {...ButtonProps}\n    accessoryRight={LoadingIndicator}\n    disabled={true}\n    >{text}</Button>\n  )\n  if(icon && icon !== \"\") return (\n    <Button\n      {...ButtonProps}\n      accessoryRight={renderIcon}\n    >{text}</Button>\n  )\n\n  return (\n    <Button\n      {...ButtonProps}\n    >{text}</Button>\n  );\n};\n\n","/*\n * File: Signout.tsx\n * Project: frontend\n * Version: 1.0.0\n * File Created: Saturday, 16th May 2020 8:19:18 pm\n * Author: Eoan O'Dea - eoan@wspace.ie\n * ---------------\n * File Description: Handles user signout\n * Last Modified: Saturday, 16th May 2020 8:56:18 pm\n * Modified By: Eoan O'Dea - eoan@wspace.ie\n * ---------------\n * Copyright 2020 - WebSpace\n */\n\nimport React from \"react\";\nimport { Text, SafeAreaView } from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { logout, setLoading } from \"../../actions/auth\";\nimport LogoutWithGoogle from \"./platformSpecific/LogoutWithGoogle\";\nimport { IInitialState } from \"../../reducers/interfaces\";\nimport { SignoutScreenScreenProps } from \"../../navigation/auth.navigator\";\nimport { ButtonInput } from \"../../components/form-button.component\";\n\n/**\n * Importing styles\n * @param theme path\n * @param App Module name\n */\nconst styles = require(\"../../themes\")(\"App\");\n\n/**\n * Interface Props\n * for the component\n */\ntype IProps = {\n  name: string;\n  token: string;\n  authedWithGoogle: boolean;\n  isLoading: boolean;\n  isHost: boolean;\n};\n\n/**\n * Interface actions\n * for the component\n */\ninterface IActions extends SignoutScreenScreenProps {\n  logout: (body: object) => void;\n  setLoading: () => void;\n}\n\nconst SignoutScreen = (props: IProps & IActions) => {\n  /**\n   * Logs out the user from their current\n   * session\n   */\n  const submit = () => {\n    props.setLoading();\n    const { token } = props;\n\n    props.logout({ token });\n  };\n\n  const { authedWithGoogle, isLoading } = props;\n  \n  return (\n    <SafeAreaView>\n      {authedWithGoogle ? (\n        <LogoutWithGoogle />\n      ) : (\n        <ButtonInput\n          style={styles.signOutBtn}\n          onPress={submit}\n          disabled={false}\n          loading={isLoading}\n          icon=\"log-out-outline\"\n          text=\"\"\n        />\n      )}\n    </SafeAreaView>\n  );\n};\n\n/**\n * Return a list of people from our redux state\n *\n * @param {*} state\n */\nconst mapStateToProps = (state: IInitialState): IProps => {\n  const { name, token, authedWithGoogle, isLoading } = state.auth;\n  const {isHost} = state.game\n\n  return {\n    name,\n    token,\n    authedWithGoogle,\n    isLoading,\n    isHost\n  };\n};\n\nexport default connect<IProps, IActions>(mapStateToProps, {\n  logout,\n  setLoading,\n})(SignoutScreen);\n","import React from 'react';\nimport { Icon, IconElement } from '@ui-kitten/components';\n\nexport const BackIcon = (props): IconElement => (\n  <Icon {...props} name='arrow-back'/>\n);\n\nexport const LayoutIcon = (props): IconElement => (\n  <Icon {...props} name='layout-outline'/>\n);\n\nexport const PersonIcon = (props): IconElement => (\n  <Icon {...props} name='person-outline'/>\n);\n\nexport const MoreVerticalIcon = (props): IconElement => (\n  <Icon {...props} name='more-vertical'/>\n);\n\nexport const LogoutIcon = (props): IconElement => (\n  <Icon {...props} name='log-out-outline'/>\n);\n\nexport const InfoIcon = (props): IconElement => (\n  <Icon {...props} name='info-outline'/>\n);\n\nexport const AlertTriangleIcon = (props): IconElement => (\n  <Icon {...props} name='alert-triangle-outline'/>\n);\n\nexport const EyeIcon = (props): IconElement => (\n  <Icon {...props} name='eye-outline'/>\n);\n\nexport const EyeOffIcon = (props): IconElement => (\n  <Icon {...props} name='eye-off-outline'/>\n);\n\nexport const MenuIcon = (props): IconElement => (\n  <Icon {...props} name='menu-outline'/>\n);\n\nexport const HomeIcon = (props): IconElement => (\n  <Icon {...props} name='home-outline'/>\n);\n\nexport const DoneAllIcon = (props): IconElement => (\n  <Icon {...props} name='done-all-outline'/>\n);\n\nexport const GridIcon = (props): IconElement => (\n  <Icon {...props} name='grid-outline'/>\n);\n\nexport const SearchIcon = (props): IconElement => (\n  <Icon {...props} name='search-outline'/>\n);\n\n\n\n\n\n\n","import React from 'react';\nimport { Input, InputElement, InputProps } from '@ui-kitten/components';\nimport { useFormikContext } from 'formik';\nimport { AlertTriangleIcon } from '../assets/icons';\n\ninterface FormInputProps extends InputProps {\n  id: string;\n}\n\nexport const FormInput = ({ id, ...inputProps }: FormInputProps): InputElement => {\n\n  const formContext = useFormikContext();\n\n  // @ts-ignore\n  const { [id]: error } = formContext.errors;\n\n  const fieldProps: Partial<InputProps> = {\n    status: error && 'danger',\n    captionIcon: error && AlertTriangleIcon,\n  };\n\n  return (\n    <Input\n      {...inputProps}\n      {...fieldProps}\n      caption={error}\n      onChangeText={formContext.handleChange(id)}\n    />\n  );\n};\n\n","/*\n * File: LoginWithGoogle.tsx\n * Project: frontend\n * Version: 1.0.0\n * File Created: Tuesday, 19th May 2020 5:18:52 pm\n * Author: Eoan O'Dea - eoan@wspace.ie\n * ---------------\n * File Description: Login With Google Web only\n * Last Modified: Tuesday, 19th May 2020 5:19:18 pm\n * Modified By: Eoan O'Dea - eoan@wspace.ie\n * ---------------\n * Copyright 2020 - WebSpace\n */\n\n\n\n\nimport React, { Component } from \"react\";\nimport GoogleLogin from 'react-google-login';\nimport { Text, View } from \"react-native\";\nimport { connect } from \"react-redux\";\nimport {loginWithThirdParty} from \"../../../actions/auth\";\n\nconst styles = require(\"../../../themes\")(\"Form\");\n\n/**\n * Get Google Client ID from environment variables\n */\nimport Constants from \"expo-constants\";\nconst WEB_GOOGLE_CLIENT_ID = Constants.manifest.extra.WEB_GOOGLE_CLIENT_ID\n\n\n/**\n * Interface actions \n * for the component\n */\ninterface ILoginWithGoogleActions {\n    loginWithThirdParty: (token: object) => void;\n}\n\ninterface ILoginWithGoogleState {\n    error: string;\n}\n\nclass LoginWithGoogle extends Component <ILoginWithGoogleActions, ILoginWithGoogleState> {\n    state = {\n        error: ''\n    }\n\n    /**\n     * Handles a response from Google\n     */\n    responseGoogle = (res: any) => {\n        if(res.error) {\n            this.setState({ error: res.error });\n        } else {\n            this.props.loginWithThirdParty({ token: res.tokenId, provider: 'google' });    \n        }\n    }\n\n    render() {\n        return (\n            <View>\n                <GoogleLogin\n                    style={styles.thirdPartyButtonContainer}\n                    clientId={WEB_GOOGLE_CLIENT_ID}\n                    onSuccess={this.responseGoogle}\n                    onFailure={this.responseGoogle}\n                    cookiePolicy={'single_host_origin'}\n                />\n                {this.state.error !== ''\n                    && <Text>Error: {this.state.error}</Text>\n                }\n            </View>\n        )\n    }\n}\n\nexport default connect<ILoginWithGoogleActions>(null, {loginWithThirdParty})(LoginWithGoogle)","import React, { Component } from \"react\";\nimport { View, Text, Platform } from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { loginWithThirdParty } from \"../../../actions/auth\";\nimport * as AppleAuthentication from 'expo-apple-authentication';\n\n\n/**\n * Importing styles\n * @param theme path\n * @param App Module name\n */\nconst styles = require(\"../../../themes\")(\"Form\");\n\n/**\n * Interface actions \n * for the component\n */\ninterface ILoginWithAppleActions {\n  loginWithThirdParty: (token: object) => void;\n}\n\n/**\n * Interface for the component\n * state\n */\ninterface ILoginWithAppleState {\n  error: string;\n}\n\nclass LoginWithApple extends Component <ILoginWithAppleActions, ILoginWithAppleState> {\n    state = {\n      error: ''\n    }\n\n    /**\n     * Login with Apple function\n     * Asynconously logs the user in on an \n     * iOS device\n     */\n    signInWithAppleMobile = async() => {\n\n      try {\n          const result: any = await AppleAuthentication.signInAsync({\n            requestedScopes: [\n              AppleAuthentication.AppleAuthenticationScope.FULL_NAME,\n              AppleAuthentication.AppleAuthenticationScope.EMAIL,\n            ],\n          })\n          \n          const fullName = result.fullName.givenName + \" \" + result.fullName.familyName\n          \n          const user = {\n            email: result.email,\n            name: fullName,\n            identityToken: result.identityToken\n          }\n       \n          this.props.loginWithThirdParty({ token: result.authorizationCode, type: Platform.OS, provider: 'apple', user });    \n        } catch(err) {\n          console.log('error!', err)\n        \n          this.setState({ error: err.message });\n        }\n      }\n\n      render() {\n          return (\n            <View style={styles.thirdPartyButtonContainer}>\n              <AppleAuthentication.AppleAuthenticationButton\n                buttonType={AppleAuthentication.AppleAuthenticationButtonType.SIGN_IN}\n                buttonStyle={AppleAuthentication.AppleAuthenticationButtonStyle.BLACK}\n                cornerRadius={5}\n                style={{ width: 200, height: 44 }}\n                onPress={this.signInWithAppleMobile}\n              />\n\n                {this.state.error !== ''\n                    && <Text style={{textAlign: 'center'}}>Error: {this.state.error}</Text>\n                }\n            </View>\n          )\n      }\n}\n\nexport default connect<ILoginWithAppleActions>(null, {loginWithThirdParty})(LoginWithApple)\n\n","import * as Yup from 'yup';\n\nexport class SignInData {\n\n  constructor(\n    readonly email: string,\n    readonly password: string) {\n\n  }\n\n  static empty(): SignInData {\n    return new SignInData(\n      '',\n      '',\n    );\n  }\n}\n\nexport const SignInSchema = Yup.object().shape({\n  email: Yup.string().min(1, \"Email cannot be blank\").email('Invalid email').required('Email is required'),\n  password: Yup.string().min(8, 'Password must be at least 8 characters').required('Password is required'),\n});\n\n","/*\n * File: modal-header.component.tsx\n * Project: frontend\n * Version: 1.0.0\n * File Created: Saturday, 6th June 2020 9:19:42 pm\n * Author: Eoan O'Dea - eoan@wspace.ie\n * ---------------\n * File Description: Component to handle the header of components with close buttons\n * Last Modified: Saturday, 6th June 2020 9:41:26 pm\n * Modified By: Eoan O'Dea - eoan@wspace.ie\n * ---------------\n * Copyright 2020 - WebSpace\n */\n\n\n\nimport React from \"react\";\nimport {\n  Button,\n  ButtonElement,\n  ButtonProps,\n  IconProps,\n  Icon,\n  Text,\n  Spinner,\n} from \"@ui-kitten/components\";\nimport { View } from \"react-native\";\n\n/**\n * Importing styles\n * @param theme path\n * @param App Module name\n */\nconst styles = require(\"../themes\")(\"Header\");\n\ninterface ModalHeaderProps extends ButtonProps {\n  text: string;\n  icon: string;\n  buttonText?: string;\n  loading?: boolean;\n  isLeaderboard?: boolean;\n}\n\nexport const ModalHeader = ({\n  text,\n  icon,\n  buttonText,\n  loading = false,\n  ...ButtonProps\n}: ModalHeaderProps): ButtonElement => {\n\n  \n  const buttonIcon = (props: IconProps) => {\n    if(!loading) return <Icon {...props} name={icon} size=\"large\" />\n\n    return (\n      <View>\n          <Spinner size=\"small\" status=\"danger\" />\n      </View>\n    )\n  }\n\n  return (\n    <View style={styles.container}>\n      <Button\n        {...ButtonProps}\n        accessoryRight={buttonIcon}\n        style={styles.button}\n      >{buttonText}</Button>\n      \n      <Text style={styles.title} category=\"h1\">\n        {text}\n      </Text>\n    </View>\n  );\n};\n","/*\n * File: Login.tsx\n * Project: frontend\n * Version: 1.0.0\n * File Created: Thursday, 14th May 2020 4:22:47 pm\n * Author: Eoan O'Dea - eoan@wspace.ie\n * ---------------\n * File Description: Handles user login input & validation\n * Last Modified: Saturday, 16th May 2020 8:55:33 pm\n * Modified By: Eoan O'Dea - eoan@wspace.ie\n * ---------------\n * Copyright 2020 - WebSpace\n */\n\nimport React from \"react\";\nimport { View, Platform } from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { Formik, FormikProps } from \"formik\";\nimport { Button, Layout, Text, Icon, IconProps } from \"@ui-kitten/components\";\nimport { TouchableWithoutFeedback } from \"react-native-gesture-handler\";\nimport * as actions from \"../../actions/auth\";\nimport { FormInput } from \"../../components/form-input.component\";\nimport { IInitialState } from \"../../reducers/interfaces\";\nimport LoginWithGoogle from \"./platformSpecific/LoginWithGoogle\";\nimport LoginWithApple from \"./platformSpecific/LoginWithApple.ios\";\nimport { SignInData, SignInSchema } from \"../../data/sign-in.model\";\nimport { EyeIcon, EyeOffIcon } from \"../../assets/icons\";\nimport { AppRoute } from \"../../navigation/app-routes\";\nimport { SignInScreenProps } from \"../../navigation/auth.navigator\";\nimport { ButtonInput } from \"../../components/form-button.component\";\nimport { ModalHeader } from \"../../components/modal-header.component\";\n\n/**\n * Importing styles\n * @param theme path\n * @param App Module name\n */\nconst styles = require(\"../../themes\")(\"Form\");\n\n/**\n * Interface actions\n * for the component\n */\ninterface ILoginActions extends SignInScreenProps {\n  setLoading: () => void;\n  formUpdate: ({ prop, value }: any) => void;\n  login: (body: object) => void;\n  loginWithThirdParty: (token: object) => void;\n}\n\n/**\n * Interface Props\n * for the component\n */\ninterface ILoginProps {\n  email: string;\n  password: string;\n  error: string;\n  isLoading: boolean;\n  token: string;\n}\n\nconst LoginScreen = (props: ILoginProps & ILoginActions) => {\n  const [passwordVisible, setPasswordVisible] = React.useState<boolean>(false);\n\n  const onPasswordIconPress = (): void => {\n    setPasswordVisible(!passwordVisible);\n  };\n\n  /**\n   * If the inputs pass validation,\n   * submit the request to the server\n   */\n  const submit = (values: any) => {\n    props.setLoading();\n    const { email, password } = values;\n\n    props.login({ email, password });\n  };\n\n  const renderPasswordIcon = (props: any): React.ReactElement => {\n    const IconComponent = passwordVisible ? EyeIcon : EyeOffIcon;\n\n    return (\n      <TouchableWithoutFeedback onPress={onPasswordIconPress}>\n        <IconComponent {...props} />\n      </TouchableWithoutFeedback>\n    );\n  };\n\n\n  const { email, password, error, isLoading } = props;\n\n  const renderForm = (props: FormikProps<SignInData>): React.ReactFragment => {\n    const loading = isLoading || props.isSubmitting;\n\n    if(isLoading === false && props.isSubmitting === true) props.setSubmitting(false)\n    return (\n      <React.Fragment>\n        <FormInput\n          id=\"email\"\n          style={styles.formControl}\n          size='large'\n          placeholder=\"Email\"\n          keyboardType=\"email-address\"\n          autoCapitalize=\"none\"\n          value={props.values.email}\n          onKeyPress={({nativeEvent}) => {\n            if(nativeEvent.key === 'Enter') props.handleSubmit()\n          }}\n        />\n        <FormInput\n          id=\"password\"\n          style={styles.formControl}\n          size='large'\n          placeholder=\"Password\"\n          secureTextEntry={!passwordVisible}\n          accessoryRight={renderPasswordIcon}\n          autoCapitalize=\"none\"\n          value={props.values.password}\n          onKeyPress={({nativeEvent}) => {\n            if(nativeEvent.key === 'Enter') props.handleSubmit()\n          }}\n        />\n\n        {error !== \"\" && <Text>{error}</Text>}\n\n        <View style={styles.resetPasswordContainer}>\n          <Button appearance=\"ghost\" status='danger'>\n            Forgot password?\n          </Button>\n        </View>\n\n        <ButtonInput\n          style={styles.submitButton}\n          disabled={!props.isValid && !props.isValidating}\n          status=\"danger\"\n          onPress={() => props.handleSubmit()}\n          loading={loading}\n          text=\"SIGN IN\"\n        />\n      </React.Fragment>\n    );\n  };\n\n  return (\n    <Layout style={styles.formContainer}>\n      <ModalHeader\n        style={styles.homeBtn}\n        text=\"\"\n        icon=\"close-outline\"\n        status=\"primary\"\n        onPress={() => props.navigation.navigate(AppRoute.HOME)}\n      />\n\n      <View style={styles.formContainer}>\n        <Formik\n          initialValues={{ email, password }}\n          validationSchema={SignInSchema}\n          onSubmit={(values) => submit(values)}\n        >\n          {renderForm}\n        </Formik>\n        \n        {Platform.OS === \"ios\" && <LoginWithApple />}\n\n        <View style = {styles.customHrTag} />\n\n        <LoginWithGoogle />\n\n        <Button\n          style={styles.noAccountButton}\n          onPress={() => props.navigation.navigate(AppRoute.SIGN_UP)}\n        >\n          SIGN UP\n        </Button>\n      </View>\n    </Layout>\n  );\n};\n\n/**\n * Return a list of people from our redux state\n *\n * @param {*} state\n */\nconst mapStateToProps = (state: IInitialState): ILoginProps => {\n  const { email, password, error, isLoading, token } = state.auth;\n\n  return {\n    email,\n    password,\n    error,\n    isLoading,\n    token,\n  };\n};\n\nexport default connect<ILoginProps, ILoginActions, {}>(\n  mapStateToProps,\n  actions\n)(LoginScreen);\n","import * as Yup from 'yup';\n\nexport class SignUpData {\n\n  constructor(\n    readonly name: string,\n    readonly email: string,\n    readonly password: string,\n    readonly password_confirm: string\n    ) {\n  }\n\n  static empty(): SignUpData {\n    return new SignUpData(\n      '',\n      '',\n      '',\n      ''\n    );\n  }\n}\n\nexport const SignUpSchema = Yup.object().shape({\n  name: Yup.string().min(4, \"Name must be at least 4 characters\").required(),\n  email: Yup.string().min(1, \"Email cannot be blank\").email('Invalid email').required('Email is required'),\n  password: Yup.string().min(8, 'Password must be at least 8 characters').required('Password is required'),\n  password_confirm: Yup.string().when(\"password\", {\n    is: val => (val && val.length > 0 ? true : false),\n    then: Yup.string().oneOf(\n      [Yup.ref(\"password\")],\n      \"Confirm Password must equal password\"\n    )\n  }).required('Confirm Password is required'),\n});\n\n","/*\n * File: Register.tsx\n * Project: frontend\n * Version: 1.0.0\n * File Created: Thursday, 14th May 2020 3:08:31 pm\n * Author: Eoan O'Dea - eoan@wspace.ie\n * ---------------\n * File Description: Handles user registration input & validation\n * Last Modified: Saturday, 16th May 2020 8:56:06 pm\n * Modified By: Eoan O'Dea - eoan@wspace.ie\n * ---------------\n * Copyright 2020 - WebSpace\n */\n\nimport React from \"react\";\nimport { View } from \"react-native\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions/auth\";\nimport { Button, Layout } from \"@ui-kitten/components\";\nimport { Formik, FormikProps } from \"formik\";\nimport { SignUpSchema, SignUpData } from \"../../data/sign-up.model\";\nimport { FormInput } from \"../../components/form-input.component\";\nimport { EyeIcon, EyeOffIcon } from \"../../assets/icons\";\nimport { TouchableWithoutFeedback } from \"react-native-gesture-handler\";\nimport { AppRoute } from \"../../navigation/app-routes\";\nimport { RegisterScreenProps } from \"../../navigation/auth.navigator\";\nimport { ButtonInput } from \"../../components/form-button.component\";\nimport { Text } from \"react-native\";\nimport { ModalHeader } from \"../../components/modal-header.component\";\n\n/**\n * Importing styles\n * @param theme path\n * @param App Module name\n */\nconst styles = require(\"../../themes\")(\"Form\");\n\n/**\n * Interface Props\n * for the component\n */\ntype IProps = {\n  actionSuccess: boolean;\n  canSubmit: boolean;\n  name: string;\n  email: string;\n  password: string;\n  confirm_password: string;\n  error: string;\n  isLoading: boolean;\n};\n\n/**\n * Interface actions\n * for the component\n */\ninterface IActions extends RegisterScreenProps {\n  setLoading: () => void;\n  formUpdate: ({ prop, value }: any) => void;\n  create: (body: object) => void;\n}\n\nconst RegisterScreen = (props: IProps & IActions) => {\n  const [passwordVisible, setPasswordVisible] = React.useState<boolean>(false);\n\n  const onPasswordIconPress = (): void => {\n    setPasswordVisible(!passwordVisible);\n  };\n\n  const navigateSignIn = (): void => {\n    props.navigation.navigate(AppRoute.SIGN_IN);\n  };\n\n  /**\n   * If the inputs pass validation,\n   * submit the request to the server\n   */\n  const submit = (values: any) => {\n    props.setLoading();\n    const { name, email, password } = values;\n\n    props.create({ name, email, password });\n  };\n\n  const renderPasswordIcon = (props: any): React.ReactElement => {\n    const IconComponent = passwordVisible ? EyeIcon : EyeOffIcon;\n\n    return (\n      <TouchableWithoutFeedback onPress={onPasswordIconPress}>\n        <IconComponent {...props} />\n      </TouchableWithoutFeedback>\n    );\n  };\n\n  const { name, email, password, confirm_password, error, isLoading } = props;\n\n  const renderForm = (props: FormikProps<SignUpData>): React.ReactFragment => {\n    const loading = isLoading || props.isSubmitting;\n    \n    if(isLoading === false && props.isSubmitting === true) props.setSubmitting(false)\n    return (\n      <React.Fragment>\n        <FormInput\n          id=\"name\"\n          style={styles.formControlReg}\n          size=\"large\"\n          placeholder=\"Username\"\n          autoCorrect={false}\n          autoCapitalize=\"none\"\n          value={props.values.name}\n          onKeyPress={({nativeEvent}) => {\n            if(nativeEvent.key === 'Enter') props.handleSubmit()\n          }}\n        />\n        <FormInput\n          id=\"email\"\n          style={styles.formControlReg}\n          size=\"large\"\n          placeholder=\"Email\"\n          keyboardType=\"email-address\"\n          autoCapitalize=\"none\"\n          value={props.values.email}\n          onKeyPress={({nativeEvent}) => {\n            if(nativeEvent.key === 'Enter') props.handleSubmit()\n          }}\n        />\n        <FormInput\n          id=\"password\"\n          style={styles.formControlReg}\n          size=\"large\"\n          placeholder=\"Password\"\n          secureTextEntry={!passwordVisible}\n          accessoryRight={renderPasswordIcon}\n          value={props.values.password}\n          onKeyPress={({nativeEvent}) => {\n            if(nativeEvent.key === 'Enter') props.handleSubmit()\n          }}\n        />\n        <FormInput\n          id=\"password_confirm\"\n          style={styles.formControlReg}\n          size=\"large\"\n          placeholder=\"Confirm Password\"\n          secureTextEntry={!passwordVisible}\n          accessoryRight={renderPasswordIcon}\n          onKeyPress={({nativeEvent}) => {\n            if(nativeEvent.key === 'Enter') props.handleSubmit()\n          }}\n        />\n        {error !== \"\" && <Text>{error}</Text>}\n\n        <ButtonInput\n          style={styles.submitButton}\n          disabled={!props.isValid && !props.isValidating}\n          onPress={() => props.handleSubmit()}\n          loading={loading}\n          text=\"SIGN UP\"\n        />\n      </React.Fragment>\n    );\n  };\n\n  if (props.actionSuccess) navigateSignIn();\n  return (\n    <Layout style={styles.formContainerReg}>\n      <ModalHeader\n        text=\"\"\n        icon=\"close-outline\"\n        status=\"info\"\n        onPress={() => props.navigation.navigate(AppRoute.HOME)}\n      />\n\n      <View style={styles.formContainerReg}>\n        <Formik\n          initialValues={{ name, email, password, password_confirm: '' }}\n          validationSchema={SignUpSchema}\n          onSubmit={(values) => submit(values)}\n        >\n          {renderForm}\n        </Formik>\n\n        <View style = {styles.customHrTagReg} />\n\n        <Button\n          style={styles.haveAccountButton}\n          onPress={() => props.navigation.navigate(AppRoute.SIGN_IN)}\n        >\n          Already have an account?\n        </Button>\n      </View>\n    </Layout>\n  );\n};\n\n/**\n * Return a list of people from our redux state\n *\n * @param {*} state\n */\nconst mapStateToProps = (state: any) => {\n  const { name, email, password, confirm_password, error, isLoading, actionSuccess } = state.auth;\n\n  return {\n    name,\n    email,\n    password,\n    confirm_password,\n    error,\n    isLoading,\n    actionSuccess\n  };\n};\n\nexport default connect<IProps & IActions, {}>(mapStateToProps, actions)(RegisterScreen);\n","/**\n * Import modules which can be accessed\n */\nimport SignoutScreen from './sign-out.component'\nimport SignInScreen from './sign-in.component'\nimport RegisterScreen from './register.component'\n\n/**\n * Export these modules to the rest of the application\n */\nexport default {\n    SignoutScreen,\n    SignInScreen,\n    RegisterScreen\n}\n","/*\n * File: host.component.tsx\n * Project: frontend\n * Version: 1.0.0\n * File Created: Wednesday, 3rd June 2020 2:52:35 pm\n * Author: Eoan O'Dea - eoan@wspace.ie\n * ---------------\n * File Description: Hosting a game\n * Last Modified: Wednesday, 3rd June 2020 2:53:50 pm\n * Modified By: Eoan O'Dea - eoan@wspace.ie\n * ---------------\n * Copyright 2020 - WebSpace\n */\n\nimport React from \"react\";\nimport { HostGameScreenProps } from \"../../navigation/game.navigator\";\nimport { Layout, Button } from \"@ui-kitten/components\";\nimport { Text } from \"react-native\";\nimport { AppRoute } from \"../../navigation/app-routes\";\n\n/**\n * Importing styles\n * @param theme path\n * @param App Module name\n */\nconst styles = require(\"../../themes\")(\"Game\");\n\nconst HostScreen = (props: HostGameScreenProps) => {\n    return (\n        <Layout style={styles.container}>\n            <Text style={styles.title}>Host</Text>\n            <Button style={styles.submitButton} onPress={() => props.navigation.navigate(AppRoute.HOME)}>Home</Button>\n            <Button style={styles.submitButton} onPress={() => props.navigation.navigate(AppRoute.SIGN_OUT)}>Sign out page</Button>\n        </Layout>\n    )\n}\n\nexport default HostScreen","import * as Yup from 'yup';\n\nexport class JoinLobbyData {\n\n  constructor(\n    readonly lobbyName: string,\n    readonly username: string) {\n\n  }\n\n  static empty(): JoinLobbyData {\n    return new JoinLobbyData(\n      '',\n      '',\n    );\n  }\n}\n\nexport const JoinLobbySchema = Yup.object().shape({\n  lobbyName: Yup.string().min(4, \"Lobby code must be 4 characters\").max(5, 'Lobby code cannot be over 5 characters').required('Lobby Code is required'),\n  username: Yup.string().min(4, 'Username must be at least 4 characters').required('Username is required'),\n});\n\n","/*\n * File: loading.component.tsx\n * Project: frontend\n * Version: 1.0.0\n * File Created: Wednesday, 10th June 2020 5:35:40 pm\n * Author: Eoan O'Dea - eoan@wspace.ie\n * ---------------\n * File Description: Component which displays loading spinner\n * Last Modified: Wednesday, 10th June 2020 5:36:37 pm\n * Modified By: Eoan O'Dea - eoan@wspace.ie\n * ---------------\n * Copyright 2020 - WebSpace\n */\n\nimport React from \"react\";\nimport { Spinner, Text, Layout } from \"@ui-kitten/components\";\nimport { View } from \"react-native\";\n\n\n/**\n * Importing styles\n * @param theme path\n * @param App Module name\n */\nconst styles = require(\"../themes\")(\"Game\");\n\ninterface IProps {\n    text?: string;\n}\n\nconst LoadingComponent = ({text = \"\"}: IProps) => (\n    <Layout style={styles.gameLoadingSpinner}>\n        <View style={styles.loadingSpinner} >\n            <Spinner size=\"giant\" status=\"info\" />\n        </View>\n        <Text style={styles.title}>{text}</Text>\n    </Layout>\n)\n\nexport default LoadingComponent","/*\n * File: join.component.tsx\n * Project: frontend\n * Version: 1.0.0\n * File Created: Wednesday, 3rd June 2020 2:52:35 pm\n * Author: Eoan O'Dea - eoan@wspace.ie\n * ---------------\n * File Description: Joining a game\n * Last Modified: Wednesday, 3rd June 2020 3:14:57 pm\n * Modified By: Eoan O'Dea - eoan@wspace.ie\n * ---------------\n * Copyright 2020 - WebSpace\n */\n\nimport React from \"react\";\nimport { View } from \"react-native\";\nimport { JoinGameScreenProps } from \"../../navigation/game.navigator\";\nimport { Layout, Text } from \"@ui-kitten/components\";\nimport { AppRoute } from \"../../navigation/app-routes\";\nimport { gameActions } from \"../../actions\";\nimport { FormikProps, Formik } from \"formik\";\nimport { JoinLobbyData, JoinLobbySchema } from \"../../data/join-lobby.model\";\nimport { IInitialState } from \"../../reducers/interfaces\";\nimport { connect } from \"react-redux\";\nimport { FormInput } from \"../../components/form-input.component\";\nimport { ButtonInput } from \"../../components/form-button.component\";\nimport { IJoinGame } from \"../../actions/game\";\nimport { ModalHeader } from \"../../components/modal-header.component\";\nimport LoadingComponent from \"../../components/loading.component\";\n\n\n\n/**\n * Importing styles\n * @param theme path\n * @param App Module name\n */\nconst styles = require(\"../../themes\")(\"Form\");\n\n\n/**\n * Interface actions\n * for the component\n */\ninterface IJoinActions extends JoinGameScreenProps {\n  setGameLoading: () => void;\n  formUpdate: ({ prop, value }: any) => void;\n  joinGame: (body: IJoinGame) => void;\n}\ninterface IJoinProps {\n  name: string;\n  lobbyName: string;\n  error: string;\n  isLoading: boolean;\n  isHost: boolean;\n}\n\nconst JoinScreen = (props: IJoinActions & IJoinProps) => {\n  const { lobbyName, error, isLoading } = props;\n  /**\n * If the inputs pass validation,\n * submit the request to the server\n */\n  const submit = (values: any) => {\n    props.setGameLoading();\n    const { lobbyName, username } = values;\n\n    props.joinGame({ lobbyName: lobbyName.toUpperCase(), username })\n  };\n  const renderForm = (props: FormikProps<JoinLobbyData>): React.ReactFragment => {\n    const loading = isLoading || props.isSubmitting;\n\n    if (isLoading === false && props.isSubmitting === true) props.setSubmitting(false)\n    return (\n      <React.Fragment>\n        <FormInput\n          id=\"lobbyName\"\n          style={styles.formControl}\n          size='large'\n          value={props.values.lobbyName}\n          placeholder=\"Enter Join Code\"\n          autoCapitalize=\"characters\"\n          onKeyPress={({ nativeEvent }) => {\n            if (nativeEvent.key === 'Enter') props.handleSubmit()\n          }}\n        />\n\n        <FormInput\n          id=\"username\"\n          style={styles.formControl}\n          size='large'\n          value={props.values.username}\n          placeholder=\"Create a Username\"\n          onKeyPress={({ nativeEvent }) => {\n            if (nativeEvent.key === 'Enter') props.handleSubmit()\n          }}\n        />\n\n        {error !== \"\" && <Text>{error}</Text>}\n\n        <ButtonInput\n          style={styles.submitButton}\n          disabled={!props.isValid && !props.isValidating}\n          onPress={() => props.handleSubmit()}\n          loading={loading}\n          text=\"JOIN\"\n        />\n      </React.Fragment>\n    );\n  };\n  if (props.isHost) return <LoadingComponent text=\"Creating lobby...\" />\n  return (\n    <Layout style={styles.formContainer}>\n      <ModalHeader\n        text=\"\"\n        icon=\"close-outline\"\n        status=\"primary\"\n        onPress={() => props.navigation.navigate(AppRoute.HOME)}\n      />\n\n      <View style={styles.formContainer}>\n        <Formik\n          initialValues={{ lobbyName, username: props.name }}\n          validationSchema={JoinLobbySchema}\n          onSubmit={(values) => submit(values)}\n        >\n\n          {renderForm}\n        </Formik>\n      </View>\n\n\n    </Layout>\n  )\n}\n\nconst mapStateToProps = (state: IInitialState): IJoinProps => {\n  const { lobbyName, error, isLoading, isHost } = state.game;\n  const { name } = state.auth\n\n  return {\n    lobbyName,\n    isHost,\n    error,\n    isLoading,\n    name\n  };\n};\n\nexport default connect<IJoinProps, IJoinActions, {}>(\n  mapStateToProps,\n  gameActions\n)(JoinScreen);","/*\n * File: modal-header.component.tsx\n * Project: frontend\n * Version: 1.0.0\n * File Created: Saturday, 6th June 2020 9:19:42 pm\n * Author: Eoan O'Dea - eoan@wspace.ie\n * ---------------\n * File Description: Component to handle the header of components with close buttons\n * Last Modified: Saturday, 6th June 2020 9:41:26 pm\n * Modified By: Eoan O'Dea - eoan@wspace.ie\n * ---------------\n * Copyright 2020 - WebSpace\n */\n\nimport React from \"react\";\nimport {\n  Button,\n  ButtonElement,\n  ButtonProps,\n  IconProps,\n  Icon,\n  Text,\n  Spinner,\n} from \"@ui-kitten/components\";\nimport { View } from \"react-native\";\n\n/**\n * Importing styles\n * @param theme path\n * @param App Module name\n */\nconst styles = require(\"../themes\")(\"Header\");\n\ninterface ModalHeaderProps extends ButtonProps {\n  text: string;\n  icon: string;\n  buttonText?: string;\n  loading?: boolean;\n  isLeaderboard?: boolean;\n  lobbyCode: string;\n  loadingText?: string;\n}\n\nexport const ModalHeaderLobby = ({\n  text,\n  icon,\n  buttonText,\n  loading = false,\n  lobbyCode,\n  isLeaderboard = false,\n  loadingText = \"\",\n  ...ButtonProps\n}: ModalHeaderProps): ButtonElement => {\n  const spinnerIcon = () => (\n    <View>\n      <Spinner size=\"small\" status=\"danger\" />\n    </View>\n  );\n\n  const buttonIcon = (props: IconProps) => {\n    if (!loading) return <Icon {...props} name={icon} size=\"large\" />;\n\n    return spinnerIcon();\n  };\n\n  const renderTitleAndCode = () => {\n    /**\n     * If it is a leaderboard screen, render only the title\n     */\n    if (isLeaderboard)\n      return (\n        <Text style={[styles.title, styles.leaderboardTitle]} category=\"h1\">\n          {text}\n        </Text>\n      );\n\n    /**\n     * If not, render the title and the lobby code\n     */\n    return (\n      <React.Fragment>\n        <Text style={styles.title} category=\"h1\">\n          {lobbyCode !== \"\" ? text : loadingText !== \"\" ? loadingText : \"Loading lobby...\"}\n        </Text>\n        <Text style={styles.codeTitle}>{lobbyCode}</Text>\n      </React.Fragment>\n    );\n  };\n\n  return (\n    <View style={styles.container}>\n      <Button\n        {...ButtonProps}\n        accessoryRight={buttonIcon}\n        style={styles.button}\n        size=\"tiny\"\n      >\n        {buttonText}\n      </Button>\n      {renderTitleAndCode()}\n    </View>\n  );\n};\n","/*\n * File: notification-bar.component.tsx\n * Project: frontend\n * Version: 1.0.0\n * File Created: Friday, 19th June 2020 2:55:51 pm\n * Author: Eoan O'Dea - eoan@wspace.ie\n * ---------------\n * File Description: Handles notifcations and messages from the game sock client\n * Last Modified: Friday, 19th June 2020 2:55:59 pm\n * Modified By: Eoan O'Dea - eoan@wspace.ie\n * ---------------\n * Copyright 2020 - WebSpace\n */\n\nimport React, { useEffect } from \"react\";\nimport { ButtonInput } from \"./form-button.component\";\nimport { connect } from \"react-redux\";\nimport { Text, Layout } from '@ui-kitten/components'\nimport { IInitialState, IMessage, IPlayer } from \"../reducers/interfaces\";\nimport { View } from \"react-native\";\n\n/**\n * Importing styles\n * @param theme path\n * @param Game Module name\n */\nconst styles = require(\"../themes\")(\"Notification\");\n\n\ninterface IProps {\n    messages: IMessage[];\n    players: IPlayer[]\n}\n\nconst NotificationBar = ({messages, players}: IProps) => {\n\n    if(messages.some(dat => !dat.hide)) {\n      return (\n            <View style={styles.container}>\n                {messages.filter(message => !message.hide).map((message, i) => {\n                    let messageToDisplay = message.message\n                    let colour = '#972852'\n                    \n                    const playerI = players.findIndex(player => messageToDisplay.includes(player.id))\n                   \n                    /**\n                     * If a player ID is mentioned in the message\n                     * replace it with the players name, and their colour\n                     */\n                    if(playerI >= 0) {\n                        messageToDisplay = messageToDisplay.replace(players[playerI].id, players[playerI].name)\n                        colour = players[playerI].colour ? players[playerI].colour as string : 'red'\n                    }\n                    \n                    return (\n                        <ButtonInput\n                            key={i}\n                            style={[styles.notification, {backgroundColor: colour}]}\n                            status='success'\n                            size='small'\n                            disabled={false}\n                            loading={false}\n                            text={messageToDisplay}\n                        />\n                    )\n                })\n            }\n            </View>\n        )\n    }\n\n    return <></>\n}\n\n/**\n * Return a list of people from our redux state\n *\n * @param {*} state\n */\nconst mapStateToProps = (state: IInitialState): IProps => {\n    const { messages, players } = state.game;\n\n    return {\n        messages,\n        players\n    };\n};\n\nexport default connect<IProps>(mapStateToProps)(NotificationBar)\n\n// export default NotificationBar","import React from 'react'\nimport { ListItem, Icon, Text, IconProps, Button } from '@ui-kitten/components'\nimport { View } from 'react-native'\nimport { IPlayer, IInitialState } from '../reducers/interfaces'\nimport { connect } from 'react-redux';\n\n/**\n * Importing styles\n * @param theme path\n * @param Game Module name\n */\nconst styles = require(\"../themes\")(\"Game\");\n\n/**\n * Interface for props being\n * passed to to the single player component\n */\ninterface IProps {\n  item: IPlayer;\n  roundOver: boolean;\n  editPage: (id: string) => void;\n}\n\n/**\n * Interface for redux props being\n * passed to to the single player component\n */\ninterface IReduxProps {\n  user: IPlayer\n}\n\nconst PlayerSingle = ({ item, roundOver, editPage, user }: IProps & IReduxProps) => {\n  const renderItemIcon = (props: IconProps, item: any) => {\n    return (<View style={[styles.playerAvatar, { backgroundColor: item.colour }]} >\n      {\n        item.icon\n          ? <Icon {...props} name={item.icon} />\n          : <Text category='h4'>{getPlayerInitials(item.name)}</Text>\n      }\n    </View>)\n  }\n\n  const renderEditIcon = (props: IconProps) => (\n    <Icon {...props} name={\"edit-outline\"} />\n  )\n\n  const renderEditModal = () => {\n    if (item.id === user.id) {\n      return <Button accessoryLeft={renderEditIcon} onPress={() => editPage(item.id)}></Button>\n    }\n    return <></>\n  }\n\n  const getPlayerInitials = (name: string) => {\n    const initials = name.match(/\\b\\w/g) || [];\n    return ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\n  }\n\n  const renderListItemPoints = (score: number) => {\n    return (\n      <React.Fragment>\n        {renderEditModal()}\n        <Text>{score} points</Text>\n      </React.Fragment>\n    )\n  }\n\n  if (roundOver) return <ListItem style={styles.listItem} title={item.name} accessoryLeft={(props) => renderItemIcon(props, item)} accessoryRight={() => renderListItemPoints(item.score)} />\n\n  return <ListItem style={[styles.listItem, { color: 'red' }]} title={item.name} accessoryLeft={(props) => renderItemIcon(props, item)} accessoryRight={() => renderEditModal()} />\n}\n\nconst mapStateToProps = (state: IInitialState): IReduxProps => {\n  const { user } = state.game;\n\n  return { user };\n};\n\nexport default connect(mapStateToProps)(PlayerSingle)\n","import React from 'react'\nimport { List } from '@ui-kitten/components'\nimport { IPlayer, IInitialState } from '../reducers/interfaces'\nimport { connect } from 'react-redux'\nimport PlayerSingle from './player-single.component'\n\n/**\n * Importing styles\n * @param theme path\n * @param Game Module name\n */\nconst styles = require(\"../themes\")(\"Game\");\n\n/**\n * Interface for props being\n * passed to to the player list component\n */\ninterface IProps {\n  editPage: (id: string) => void\n}\n\n/**\n * Interface for props\n * being passed from the redux store\n */\ninterface IReduxProps {\n  players: IPlayer[];\n  roundOver: boolean;\n}\n\nconst PlayerList = (props: IProps & IReduxProps) => {\n\n  const renderItem = ({ item }: any) => (\n    <PlayerSingle item={item} roundOver={props.roundOver} editPage={(id: string) => props.editPage(id)} />\n  )\n\n  let players: IPlayer[] = props.players;\n  if (players.length < 4) {\n    const length = 4 - players.length\n    players = [\n      ...players,\n      ...new Array(length).fill({ name: \"Waiting for player...\", colour: '#161f26', icon: 'question-mark-outline' }),\n    ];\n  }\n  if (props.roundOver) {\n    players.sort((a, b) => b.score - a.score)\n  }\n\n\n  return (\n    <List\n      style={styles.listContainer}\n      data={players}\n      renderItem={renderItem}\n    />\n  )\n}\n\n/**\n * Return a list of people from our redux state\n *\n * @param {*} state\n */\nconst mapStateToProps = (state: IInitialState): IReduxProps => {\n  const { players, roundOver } = state.game;\n\n  return {\n    players,\n    roundOver\n  };\n};\n\nexport default connect<IReduxProps>(\n  mapStateToProps\n)(PlayerList);\n\n","import React from 'react'\nimport { Icon, Text, IconProps, DrawerGroup, DrawerItem, Drawer } from '@ui-kitten/components'\nimport { View } from 'react-native'\nimport { IPlayer, IInitialState } from '../reducers/interfaces'\nimport { connect } from 'react-redux'\nimport { Question, RoundOptions } from '@rossmacd/gamesock-client'\nimport { ScrollView } from 'react-native-gesture-handler'\n\n/**\n * Importing styles\n * @param theme path\n * @param Game Module name\n */\nconst styles = require(\"../themes\")(\"Game\");\n\n/**\n * Interface for props being\n * passed to to the player list component\n */\ninterface IProps {\n  players: IPlayer[];\n  questions: Question[];\n  roundOptions: RoundOptions | undefined;\n}\n\nconst QuestionList = (props: IProps) => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState<any>(null);\n\n  const renderItemIcon = (props: IconProps, item: any) => {\n    if (item) {\n      return (\n        <View style={[styles.playerAvatar, { backgroundColor: item.colour }]} >\n          <Text category='h4'>{getPlayerInitials(item.name)}</Text>\n        </View>\n      )\n    }\n    return (\n      <View style={[styles.playerAvatar, { backgroundColor: '#d14688' }]} >\n        <Icon {...props} name=\"shuffle-2-outline\" />\n      </View>\n    )\n  }\n\n  const renderIcon = (props: IconProps, name: string) => (\n    <Icon {...props} name={name} />\n  )\n\n  const getPlayerInitials = (name: string) => {\n    const initials = name.match(/\\b\\w/g) || [];\n    return ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\n  }\n\n  if (props.questions.length > 0) {\n    return (\n      <ScrollView>\n        <Drawer\n          selectedIndex={selectedIndex}\n          onSelect={index => setSelectedIndex(index)}\n          style={styles.listContainer}\n        >\n          {props.questions.map((item, i) => {\n            const player = props.players.find(player => player.id === item.playerId)\n            const pointsToPlayers = item.answers?.length === 2 && (item.answers[0] === item.answers[1])\n\n            return (\n              <DrawerGroup\n                title={item.question}\n                style={[styles.listItem]}\n                key={i}\n                accessoryLeft={(props) => renderItemIcon(props, player)}\n              >\n\n\n                <DrawerItem onPress={() => { }} title={player ? `Asked by: ${player.name}` : 'Shuffled Question'} accessoryLeft={(props) => renderIcon(props, 'question-mark-outline')} />\n                {\n                  props.roundOptions?.hotseatPlayers.map((hotseatPlayer, i) => {\n                    const answer = item.answers![i]\n                    const questionAnswer = `${answer ? `answered ${answer === i ? 'themself' : props.roundOptions?.hotseatPlayers[i === 0 ? 1 : 0].name}` : 'Didn\\'t answer'}`\n\n                    return (\n                      <DrawerItem key={hotseatPlayer.name} onPress={() => { }} title={`${hotseatPlayer.name} ${questionAnswer}`} accessoryLeft={(props) => renderIcon(props, 'edit-2-outline')} />\n                    )\n                  })\n                }\n\n                <DrawerItem\n                  onPress={() => { }}\n                  title={pointsToPlayers\n                    ? 'Both players got points!'\n                    : `${player\n                      ? `${player.name} got points!`\n                      : 'Nobody got points!'}`}\n                  accessoryLeft={(props) => renderIcon(props, 'star-outline')}\n                />\n\n              </DrawerGroup>\n            )\n          })}\n\n        </Drawer>\n      </ScrollView>\n    )\n  }\n\n  return <Text>No Questions Found</Text>\n}\n\n/**\n * Return a list of people from our redux state\n *\n * @param {*} state\n */\nconst mapStateToProps = (state: IInitialState): IProps => {\n  const { players, questions, roundOptions } = state.game;\n\n  return {\n    players,\n    questions,\n    roundOptions\n  };\n};\n\nexport default connect<IProps>(\n  mapStateToProps\n)(QuestionList);\n\n","\nimport React from 'react'\nimport { TabBar, Tab, Icon, IconProps, Layout } from '@ui-kitten/components'\nimport PlayerList from '../../components/player-list.component';\nimport QuestionList from '../../components/question-list.component';\nimport { StyleSheet, View } from \"react-native\";\n\ninterface IProps {\n    showTabs: boolean;\n    editPage: () => void;\n}\n\nconst useTabBarState = (initialState = 0) => {\n    const [selectedIndex, setSelectedIndex] = React.useState(initialState);\n    return { selectedIndex, onSelect: setSelectedIndex };\n};\n\nconst GameTabs = (props: IProps) => {\n\n    const topState = useTabBarState()\n\n    const renderIcon = (props: IconProps, name: string) => (\n        <Icon {...props} name={name} />\n    )\n\n    if (props.showTabs) {\n        return (\n            <React.Fragment>\n                <TabBar {...topState} >\n                    <Tab title=\"Score\" icon={(props) => renderIcon(props, \"person-outline\")}\n                    />\n                    <Tab title=\"Questions\" icon={(props) => renderIcon(props, \"question-mark-outline\")}\n\n                    />\n                </TabBar>\n                <View style={styles.tabContainer}>\n                    {\n                        topState.selectedIndex === 0\n                            ? <PlayerList editPage={(id: string) => props.editPage(id)} />\n                            : <QuestionList />\n                    }\n\n                </View>\n            </React.Fragment>\n        )\n    }\n\n    return (\n        <PlayerList editPage={(id: string) => props.editPage(id)} />\n    )\n}\n\nconst styles = StyleSheet.create({\n    tabContainer: {\n        flex: 1\n    },\n});\n\nexport default GameTabs","/*\n * File: lobby.component.tsx\n * Project: frontend\n * Version: 1.0.0\n * File Created: Wednesday, 3rd June 2020 2:52:35 pm\n * Author: Eoan O'Dea - eoan@wspace.ie\n * ---------------\n * File Description: In game lobby for both host and players\n * Last Modified: Wednesday, 3rd June 2020 3:00:55 pm\n * Modified By: Eoan O'Dea - eoan@wspace.ie\n * ---------------\n * Copyright 2020 - WebSpace\n */\n\nimport React from 'react';\nimport { IPlayer, IInitialState } from '../../reducers/interfaces';\nimport { connect } from 'react-redux';\nimport { gameActions } from '../../actions';\nimport { LobbyScreenProps } from '../../navigation/game.navigator';\nimport { ButtonInput } from '../../components/form-button.component';\nimport { AppRoute } from '../../navigation/app-routes';\nimport * as GameSockClient from '@rossmacd/gamesock-client';\nimport { ModalHeaderLobby } from '../../components/modal-header-lobby.component';\nimport LoadingComponent from '../../components/loading.component';\nimport NotificationBar from '../../components/notification-bar.component';\nimport { Layout } from '@ui-kitten/components';\nimport GameTabs from './game-tabs.component';\n\n/**\n * Importing styles\n * @param theme path\n * @param Game Module name\n */\nconst styles = require('../../themes')('Game');\n\ninterface IActions extends LobbyScreenProps {\n  setGameLoading: () => void;\n  leaveGame: () => void;\n  startHostGame: (lobbyName: string) => void;\n  toggleRedirect: (id: string) => void;\n}\n\n/**\n * Interface for props being\n * passed to to the lobby component\n */\ninterface IProps {\n  players: IPlayer[];\n  isLoading: boolean;\n  isHost: boolean;\n  lobbyName: string;\n  roundOver: boolean;\n  roundOptions: GameSockClient.RoundOptions | undefined;\n  numOfRounds: number;\n  timer: number;\n}\n\nconst LobbyScreen = (props: IProps & IActions) => {\n  const endGame = () => {\n    props.setGameLoading();\n    props.leaveGame();\n    props.navigation.navigate(AppRoute.HOME);\n  };\n\n  const startGame = () => {\n    props.setGameLoading();\n    if (!gameIsFinished && props.roundOver) {\n      GameSockClient.continueWithGame(props.lobbyName);\n      console.log(\"Continuing\")\n    } else {\n      console.log(\"Strarting\")\n      GameSockClient.startGame(props.lobbyName);\n    }\n    props.navigation.navigate(AppRoute.GAME);\n  };\n\n  const gameIsFinished = props.roundOptions ? props.roundOptions.roundNum === props.numOfRounds : false;\n\n  const renderModalTitle = () => {\n    if (!gameIsFinished && props.roundOver) {\n      if (props.timer <= 0) return 'Starting next round...';\n      return 'Next round starts in';\n    }\n    if (gameIsFinished) return 'LEADERBOARD';\n    return 'Send this code to your friends:';\n  };\n\n  const renderModalCode = () => {\n    if (!gameIsFinished && props.roundOver) {\n      return props.timer <= 0 ? '0' : `${props.timer}`;\n    }\n    return props.lobbyName;\n  };\n\n  const showEditPage = (id: string) => {\n    props.toggleRedirect(id)\n  }\n\n  const readyToPlay = props.players.length > 3;\n\n  if (props.lobbyName === '') return <LoadingComponent text=\"Loading Lobby...\" />;\n  return (\n    <Layout style={styles.container}>\n      <ModalHeaderLobby text={renderModalTitle()} lobbyCode={renderModalCode()} buttonText={props.isHost ? 'End Game' : 'Leave Lobby'} loading={false} disabled={props.isLoading} isLeaderboard={props.roundOver} icon=\"close-outline\" status=\"info\" onPress={() => endGame()} />\n\n      <GameTabs editPage={(id: string) => showEditPage(id)} showTabs={props.roundOver} />\n\n      {props.isHost ? (\n        <ButtonInput\n          style={styles.submitButton}\n          status=\"success\"\n          onPress={startGame}\n          disabled={props.isLoading || !readyToPlay || (!props.roundOver ? gameIsFinished : false)}\n          loading={props.isLoading}\n          text={readyToPlay ? (props.roundOver ? `${gameIsFinished ? 'START NEW GAME' : `BUT WAIT, THERE'S MORE! (${props.numOfRounds} ROUNDS)`}\\nSTART NEXT ROUND` : 'PLAY TIME!') : `WAITING FOR ${4 - props.players.length} PLAYER${4 - props.players.length > 1 ? 'S' : ''}`}\n        />\n      ) : (\n        <ButtonInput\n          style={styles.submitButtonJoined}\n          status=\"success\"\n          size=\"small\"\n          disabled={props.isLoading || !readyToPlay || (!props.roundOver ? gameIsFinished : false)}\n          loading={props.isLoading}\n          text={readyToPlay ? (props.roundOver ? `${gameIsFinished ? 'WAITING FOR HOST...' : `HOLD UP! WAIT A MINUTE! (${props.numOfRounds} ROUNDS)`}` : 'WAITING FOR HOST...') : `WAITING FOR ${4 - props.players.length} PLAYER${4 - props.players.length > 1 ? 'S' : ''}`}\n        />\n      )}\n\n      <NotificationBar />\n    </Layout>\n  );\n};\n\n/**\n * Return a list of people from our redux state\n *\n * @param {*} state\n */\nconst mapStateToProps = (state: IInitialState): IProps => {\n  const { players, isLoading, isHost, lobbyName, roundOver, roundOptions, numOfRounds, timer } = state.game;\n\n  return {\n    players,\n    isLoading,\n    isHost,\n    lobbyName,\n    roundOver,\n    roundOptions,\n    numOfRounds,\n    timer,\n  };\n};\n\nexport default connect<IProps, IActions>(mapStateToProps, gameActions)(LobbyScreen);\n","import React from \"react\";\nimport { Text } from \"@ui-kitten/components\";\nimport { IInitialState } from \"../reducers/interfaces\";\nimport { RoundOptions, Question } from \"@rossmacd/gamesock-client\";\nimport { connect } from \"react-redux\";\n\n\n/**\n * Importing styles\n * @param theme path\n * @param App Module name\n */\nconst styles = require(\"../themes\")(\"Game\");\n\n\n/**\n * Interface for props being\n * passed to to the answers component\n */\ninterface IProps {\n    questions: Question[];\n    currentQuestionId: number;\n    roundOptions: RoundOptions | undefined;\n}\n\nconst Answers = (props: any) => {\n    return (\n        <React.Fragment>\n            {props.questions[props.currentQuestionId].answers!.map(\n                (answer: number, i: number) => {\n                    if (answer !== null)\n                        return (\n                            <Text key={i} style={[i === 0 ? styles.answerLeft : styles.answerRight]}>\n                                {`SELECTED ${answer === i ? \"THEMSELVES!\" : props.roundOptions?.hotseatPlayers[i === 0 ? 1 : 0].name}`}\n                            </Text>\n                        );\n\n                    return (\n                        // Text for when chosen players didn't choose a player:\n                        <Text key={i} style={[styles.pleadTheFifth, i === 0 ? styles.pleadAlignLeft : styles.pleadAlignRight]}>\n                            {`pleaded the 5th`}\n                        </Text>\n                    );\n                }\n            )}\n        </React.Fragment>\n    );\n}\n\n\n/**\n * Return a list of people from our redux state\n *\n * @param {*} state\n */\nconst mapStateToProps = (state: IInitialState): IProps => {\n    const {\n        questions,\n        roundOptions,\n        currentQuestionId\n    } = state.game\n\n    return {\n        questions,\n        roundOptions,\n        currentQuestionId\n    }\n}\n\nexport default connect<IProps>(\n    mapStateToProps\n)(Answers);","/*\n * File: picked-players.component.tsx\n * Project: frontend\n * Version: 1.0.0\n * File Created: Friday, 5th June 2020 11:13:02 am\n * Author: Eoan O'Dea - eoan@wspace.ie\n * ---------------\n * File Description: Component for picked players during a game\n * Last Modified: Friday, 5th June 2020 11:13:07 am\n * Modified By: Eoan O'Dea - eoan@wspace.ie\n * ---------------\n * Copyright 2020 - WebSpace\n */\n\nimport { Layout, Card, Text, Button } from \"@ui-kitten/components\";\nimport React from \"react\";\nimport { View } from \"react-native\";\nimport { Player, Question } from \"@rossmacd/gamesock-client\";\nimport Answers from './answers.component'\n\n/**\n * Importing styles\n * @param theme path\n * @param App Module name\n */\nconst styles = require(\"../themes\")(\"Game\");\n\n/**\n * Interface actions\n * for the component\n */\ninterface IActions {\n  answerQuestion?: (questionIndex: number, playerId: number) => void;\n}\n\n/**\n * Interface for props being\n * passed to to the picked players component\n */\ninterface IProps {\n  players: [Player, Player] | undefined;\n  question?: Question;\n  questionIndex?: number;\n  user: Player;\n  canAnswer?: boolean;\n  displayAnswer?: boolean;\n}\n\nconst PickedPlayers = (props: IProps & IActions) => {\n  const canSelectAnswer = props.players?.some(\n    (player) => player.id === props.user.id\n  );\n\n  /**\n   * When a player selects an answer\n   *\n   * @param {number} i\n   */\n  const onSelectPlayer = (i: number) => {\n    if (canSelectAnswer && props.canAnswer && props.answerQuestion) {\n      props.answerQuestion(props.questionIndex!, i);\n    }\n  };\n\n  /**\n   * Render the question answer\n   */\n  const displayQuestionAnswer = () => {\n    if (props.displayAnswer) {\n      return <Answers />\n    }\n\n    return <></>\n  }\n\n  /**\n   * Renders the text title for ingame picked players\n   */\n  const renderTextTitle = () => {\n    if (props.question?.question)\n      return (\n        <React.Fragment>\n          <Text style={styles.titleNotChosen}>\n            {canSelectAnswer\n              ? props.canAnswer\n                ? \"\"\n                : \"Waiting for next question...\"\n              : \"Waiting for players to answer...\"}\n          </Text>\n\n          <Text style={styles.question}>{props.question.question}</Text>\n        </React.Fragment>\n      );\n\n    return (\n      // <Text style={styles.title}>Picked Players</Text>\n      <Text style={styles.titleChosenYellow}>CHOSEN <Text style={styles.titleChosenRed}>VICTIMS</Text></Text>\n    );\n  };\n\n  return (\n    <Layout style={styles.container}>\n      {renderTextTitle()}\n\n      <View style={styles.pickedPlayerContainer}>\n        {props.players?.map((player, i) => {\n          const isPlayer = player.id === props.user.id;\n\n          if (canSelectAnswer)\n            return (\n              <View style={styles.pickedPlayer} key={i}>\n\n                <Button\n                  disabled={!props.canAnswer}\n                  style={[\n                    styles.pickedPlayerCard,\n                    i === 0 \n                      ? (!props.displayAnswer ? styles.cardPink : styles.cardPinkAnswer) \n                      : (!props.displayAnswer ? styles.cardPurple : styles.cardPurpleAnswer),\n                  ]}\n                  size=\"giant\"\n                  onPress={() => onSelectPlayer(i)}\n                >\n                  {player.name}\n                </Button>\n\n                <Text\n                  style={[\n                    styles.belowCardText,\n                    i === 0 ? styles.alignLeft : styles.alignRight,\n                  ]}\n                  appearance=\"hint\"\n                >\n                  {player.name} {isPlayer ? \"(You)\" : \"\"}\n                </Text>\n              </View>\n            );\n\n          return (\n            <View style={styles.pickedPlayer} key={i}>\n\n              <Card\n                style={[\n                  styles.pickedPlayerCard,\n                  i === 0 \n                  ? (!props.displayAnswer ? styles.cardPink : styles.cardPinkAnswer) \n                  : (!props.displayAnswer ? styles.cardPurple : styles.cardPurpleAnswer),\n                ]}\n                onPress={() => onSelectPlayer(i)}\n              >\n                <Text style={styles.title}>{player.name}</Text>\n              </Card>\n\n              <Text\n                style={[\n                  styles.belowCardText,\n                  i === 0 ? styles.alignLeft : styles.alignRight,\n                ]}\n                appearance=\"hint\"\n              >\n                {player.name} {isPlayer ? \"(You)\" : \"\"}\n              </Text>\n            </View>\n          );\n        })}\n        {displayQuestionAnswer()}\n      </View>\n    </Layout>\n  );\n};\n\nexport default PickedPlayers;\n","import * as Yup from 'yup';\n\nexport class QuestionInputData {\n\n  constructor(\n    readonly questionInput: string) {\n\n  }\n\n  static empty(): QuestionInputData {\n    return new QuestionInputData(\n      'Who\\'s more likely to',\n    );\n  }\n}\n\nexport const QuestionSchema = Yup.object().shape({\n    questionInput: Yup.string().matches(/^Who's more likely.*$/, { message: 'Question must start with \\\"Whos\\'s more likely\\\"' }).required('Question is required')\n});\n","/*\n * File: shuffle-question.helper.ts\n * Project: frontend\n * Version: 1.0.0\n * File Created: Wednesday, 10th June 2020 4:10:12 pm\n * Author: Eoan O'Dea - eoan@wspace.ie\n * ---------------\n * File Description: Shuffles a question with a random verb and noun\n * Last Modified: Wednesday, 10th June 2020 4:10:22 pm\n * Modified By: Eoan O'Dea - eoan@wspace.ie\n * ---------------\n * Copyright 2020 - WebSpace\n */\n\n/**\n * Array of Nouns\n */\nconst objects = [\n  \"Christmas ornament\",\n  \"bag of popcorn\",\n  \"bag of rubber bands\",\n  \"balloon\",\n  \"banana\",\n  \"bangle bracelet\",\n  \"bar of soap\",\n  \"beaded necklace\",\n  \"bed\",\n  \"bell\",\n  \"blowdryer\",\n  \"book of jokes\",\n  \"book of matches\",\n  \"bottle\",\n  \"bottle cap\",\n  \"bottle of glue\",\n  \"bottle of honey\",\n  \"bottle of nail polish\",\n  \"bottle of oil\",\n  \"bottle of paint\",\n  \"bottle of pills\",\n  \"bottle of soda\",\n  \"bottle of sunscreen\",\n  \"bottle of water\",\n  \"bouquet of flowers\",\n  \"bowl\",\n  \"box\",\n  \"box of baking soda\",\n  \"box of chalk\",\n  \"box of crayons\",\n  \"box of tissues\",\n  \"bread\",\n  \"broccoli\",\n  \"brush\",\n  \"butter knife\",\n  \"camera\",\n  \"can of beans\",\n  \"can of chili\",\n  \"can of peas\",\n  \"can of whipped cream\",\n  \"candle\",\n  \"candlestick\",\n  \"car\",\n  \"cars\",\n  \"carton of ice cream\",\n  \"cat\",\n  \"chain\",\n  \"chicken\",\n  \"children's book\",\n  \"chocolate\",\n  \"year tutor hat\",\n  \"clock\",\n  \"coffee pot\",\n  \"computer\",\n  \"container of pudding\",\n  \"cookie jar\",\n  \"cookie tin\",\n  \"cow\",\n  \"cowboy hat\",\n  \"craft book\",\n  \"credit card\",\n  \"crow\",\n  \"crowbar\",\n  \"dagger\",\n  \"dictionary\",\n  \"dog\",\n  \"domino set\",\n  \"door\",\n  \"drawer\",\n  \"drill press\",\n  \"feather\",\n  \"few batteries\",\n  \"fish\",\n  \"fishing hook\",\n  \"flag\",\n  \"flashlight\",\n  \"flyswatter\",\n  \"football\",\n  \"fork\",\n  \"fridge\",\n  \"frying pan\",\n  \"garden spade\",\n  \"giraffe\",\n  \"glass\",\n  \"glow stick\",\n  \"grocery list\",\n  \"hair brush\",\n  \"hair clip\",\n  \"hammer\",\n  \"hamster\",\n  \"hand bag\",\n  \"handful of change\",\n  \"hanger\",\n  \"harmonica\",\n  \"helmet\",\n  \"house\",\n  \"ipod\",\n  \"ipod charger\",\n  \"jar of jam\",\n  \"jar of peanut butter\",\n  \"jar of pickles\",\n  \"jigsaw puzzle\",\n  \"key\",\n  \"keyboard\",\n  \"keychain\",\n  \"kitchen knife\",\n  \"knife\",\n  \"lamp shade\",\n  \"laser pointer\",\n  \"lemon\",\n  \"letter opener\",\n  \"light bulb\",\n  \"lighter\",\n  \"lime\",\n  \"lion\",\n  \"magazine\",\n  \"magnet\",\n  \"marble\",\n  \"martini glass\",\n  \"microphone\",\n  \"milk\",\n  \"mirror\",\n  \"mobile phone\",\n  \"model car\",\n  \"money\",\n  \"mop\",\n  \"mouse pad\",\n  \"nail clippers\",\n  \"necktie\",\n  \"needle\",\n  \"notebook\",\n  \"notepad\",\n  \"novel\",\n  \"pack of cards\",\n  \"package of crisp and crunchy edibles\",\n  \"bag of spuddys\",\n  \"packet of seeds\",\n  \"paintbrush\",\n  \"pair of binoculars\",\n  \"pair of dice\",\n  \"pair of earrings\",\n  \"pair of glasses\",\n  \"pair of handcuffs\",\n  \"pair of knitting needles\",\n  \"pair of rubber gloves\",\n  \"pair of safety goggles\",\n  \"pair of scissors\",\n  \"pair of socks\",\n  \"pair of sunglasses\",\n  \"pair of water goggles\",\n  \"panda\",\n  \"pants\",\n  \"paper\",\n  \"pasta strainer\",\n  \"pearl necklace\",\n  \"pen\",\n  \"pencil holder\",\n  \"pepper shaker\",\n  \"perfume\",\n  \"phone\",\n  \"photo album\",\n  \"picture frame\",\n  \"piece of gum\",\n  \"pillow\",\n  \"pinecone\",\n  \"plastic fork\",\n  \"plush octopus\",\n  \"pocketknife\",\n  \"pocketwatch\",\n  \"pool stick\",\n  \"postage stamp\",\n  \"purse\",\n  \"purse/bag\",\n  \"quartz crystal\",\n  \"rabbit\",\n  \"radio\",\n  \"rat\",\n  \"remote\",\n  \"rhino\",\n  \"rock\",\n  \"roll of duct tape\",\n  \"roll of masking tape\",\n  \"roll of stickers\",\n  \"roll of toilet paper\",\n  \"rolling pin\",\n  \"rope\",\n  \"rubber band\",\n  \"rubber duck\",\n  \"rusty nail\",\n  \"safety pin\",\n  \"sailboat\",\n  \"salt shaker\",\n  \"sandal\",\n  \"sandglass\",\n  \"scarf\",\n  \"scotch tape\",\n  \"screw\",\n  \"screwdriver\",\n  \"seat belt\",\n  \"shark\",\n  \"sharpie\",\n  \"sheep\",\n  \"sheet of paper\",\n  \"shirt\",\n  \"shirt button\",\n  \"shoe lace\",\n  \"shoes\",\n  \"shopping bag\",\n  \"shovel\",\n  \"sidewalk\",\n  \"sketch pad\",\n  \"slipper\",\n  \"snail shell\",\n  \"snowglobe\",\n  \"soccer ball\",\n  \"socks\",\n  \"spatula\",\n  \"spice bottle\",\n  \"sponge\",\n  \"spoon\",\n  \"squirrel\",\n  \"squirt gun\",\n  \"steak knife\",\n  \"stick of incense\",\n  \"sticker book\",\n  \"sticky note\",\n  \"stockings\",\n  \"stop sign\",\n  \"straw\",\n  \"sun glasses\",\n  \"sword\",\n  \"tea cup\",\n  \"tea pot\",\n  \"television\",\n  \"tennis ball\",\n  \"tennis racket\",\n  \"thermometer\",\n  \"thimble\",\n  \"thread\",\n  \"tiger\",\n  \"tire swing\",\n  \"tissue box\",\n  \"toe ring\",\n  \"toilet\",\n  \"toilet paper tube\",\n  \"tomato\",\n  \"tooth pick\",\n  \"toothbrush\",\n  \"toothpaste\",\n  \"toothpick\",\n  \"towel\",\n  \"toy car\",\n  \"toy plane\",\n  \"toy soldier\",\n  \"toy top\",\n  \"trash bag\",\n  \"tree\",\n  \"trucks\",\n  \"tube of lip balm\",\n  \"tube of lipstick\",\n  \"turtle\",\n  \"tv\",\n  \"vase\",\n  \"wallet\",\n  \"washcloth\",\n  \"washing machine\",\n  \"watch\",\n  \"water bottle\",\n  \"wedding ring\",\n  \"whale\",\n  \"whistle\",\n  \"window\",\n  \"wine glass\",\n  \"wireless control\",\n  \"wooden spoon\",\n  \"word search\",\n  \"wrench\",\n  \"wristwatch\",\n  \"zebra\",\n  \"zipper\",\n];\n\n/**\n * Array of Verbs\n */\nconst verbs = [\n  \"accept\",\n  \"add\",\n  \"admire\",\n  \"admit\",\n  \"advise\",\n  \"afford\",\n  \"agree\",\n  \"alert\",\n  \"allow\",\n  \"ask\",\n  \"attach\",\n  \"attack\",\n  \"attempt\",\n  \"attend\",\n  \"attract\",\n  \"avoid\",\n  \"back\",\n  \"bake\",\n  \"balance\",\n  \"ban\",\n  \"bang\",\n  \"bare\",\n  \"bat\",\n  \"bathe\",\n  \"battle\",\n  \"beam\",\n  \"beg\",\n  \"behave\",\n  \"belong\",\n  \"bleach\",\n  \"bless\",\n  \"blind\",\n  \"blink\",\n  \"blot\",\n  \"blush\",\n  \"boast\",\n  \"boil\",\n  \"bolt\",\n  \"bomb\",\n  \"book\",\n  \"bore\",\n  \"change\",\n  \"charge\",\n  \"chase\",\n  \"cheat\",\n  \"check\",\n  \"cheer\",\n  \"chew\",\n  \"choke\",\n  \"chop\",\n  \"claim\",\n  \"clap\",\n  \"clean\",\n  \"coil\",\n  \"collect\",\n  \"colour\",\n  \"comb\",\n  \"command\",\n  \"communicate\",\n  \"compare\",\n  \"compete\",\n  \"complain\",\n  \"complete\",\n  \"concentrate\",\n  \"concern\",\n  \"confess\",\n  \"confuse\",\n  \"connect\",\n  \"decay\",\n  \"deceive\",\n  \"decide\",\n  \"decorate\",\n  \"delay\",\n  \"delight\",\n  \"deliver\",\n  \"depend\",\n  \"describe\",\n  \"desert\",\n  \"dust\",\n  \"fear\",\n  \"fence\",\n  \"fetch\",\n  \"file\",\n  \"fill\",\n  \"film\",\n  \"fire\",\n  \"fit\",\n  \"fix\",\n  \"flap\",\n  \"flash\",\n  \"float\",\n  \"flood\",\n  \"flow\",\n  \"flower\",\n  \"fold\",\n  \"follow\",\n  \"fool\",\n  \"glue\",\n  \"grab\",\n  \"grate\",\n  \"grease\",\n  \"harass\",\n  \"harm\",\n  \"hate\",\n  \"haunt\",\n  \"head\",\n  \"heal\",\n  \"heap\",\n  \"heat\",\n  \"help\",\n  \"hook\",\n  \"hop\",\n  \"hope\",\n  \"hover\",\n  \"hug\",\n  \"hum\",\n  \"hunt\",\n  \"hurry\",\n  \"identify\",\n  \"ignore\",\n  \"imagine\",\n  \"impress\",\n  \"improve\",\n  \"include\",\n  \"increase\",\n  \"interest\",\n  \"interfere\",\n  \"interrupt\",\n  \"introduce\",\n  \"invent\",\n  \"invite\",\n  \"irritate\",\n  \"learn\",\n  \"level\",\n  \"license\",\n  \"lick\",\n  \"lie\",\n  \"lighten\",\n  \"like\",\n  \"list\",\n  \"manage\",\n  \"march\",\n  \"mark\",\n  \"marry\",\n  \"match\",\n  \"mate\",\n  \"matter\",\n  \"measure\",\n  \"meddle\",\n  \"melt\",\n  \"memorise\",\n  \"mend\",\n  \"mess up\",\n  \"milk\",\n  \"mine\",\n  \"miss\",\n  \"mix\",\n  \"mug\",\n  \"multiply\",\n  \"murder\",\n  \"nail\",\n  \"name\",\n  \"need\",\n  \"nest\",\n  \"nod\",\n  \"note\",\n  \"notice\",\n  \"number\",\n  \"obey\",\n  \"object\",\n  \"peck\",\n  \"pedal\",\n  \"peel\",\n  \"peep\",\n  \"perform\",\n  \"permit\",\n  \"phone\",\n  \"pick\",\n  \"pinch\",\n  \"pine\",\n  \"place\",\n  \"plan\",\n  \"plant\",\n  \"play\",\n  \"please\",\n  \"pour\",\n  \"practise\",\n  \"pray\",\n  \"preach\",\n  \"precede\",\n  \"prefer\",\n  \"prepare\",\n  \"present\",\n  \"preserve\",\n  \"press\",\n  \"pretend\",\n  \"prevent\",\n  \"prick\",\n  \"print\",\n  \"produce\",\n  \"program\",\n  \"promise\",\n  \"protect\",\n  \"provide\",\n  \"pull\",\n  \"pump\",\n  \"punch\",\n  \"race\",\n  \"radiate\",\n  \"rain\",\n  \"release\",\n  \"rely\",\n  \"remain\",\n  \"remember\",\n  \"remind\",\n  \"remove\",\n  \"repair\",\n  \"repeat\",\n  \"replace\",\n  \"reply\",\n  \"report\",\n  \"reproduce\",\n  \"request\",\n  \"rescue\",\n  \"retire\",\n  \"return\",\n  \"rhyme\",\n  \"rinse\",\n  \"risk\",\n  \"rob\",\n  \"rock\",\n  \"roll\",\n  \"rot\",\n  \"rub\",\n  \"satisfy\",\n  \"save\",\n  \"saw\",\n  \"scare\",\n  \"scatter\",\n  \"scold\",\n  \"scorch\",\n  \"scrape\",\n  \"scratch\",\n  \"scream\",\n  \"screw\",\n  \"scribble\",\n  \"scrub\",\n  \"seal\",\n  \"smell\",\n  \"smile\",\n  \"smoke\",\n  \"snatch\",\n  \"sneeze\",\n  \"sniff\",\n  \"snore\",\n  \"snow\",\n  \"soak\",\n  \"soothe\",\n  \"sound\",\n  \"spare\",\n  \"spark\",\n  \"sparkle\",\n  \"spell\",\n  \"spill\",\n  \"spoil\",\n  \"spot\",\n  \"spray\",\n  \"sprout\",\n  \"squash\",\n  \"squeak\",\n  \"squeal\",\n  \"squeeze\",\n  \"stain\",\n  \"stamp\",\n  \"stare\",\n  \"start\",\n  \"support\",\n  \"suppose\",\n  \"surprise\",\n  \"surround\",\n  \"suspect\",\n  \"suspend\",\n  \"switch\",\n  \"talk\",\n  \"tame\",\n  \"tap\",\n  \"taste\",\n  \"tease\",\n  \"transport\",\n  \"trap\",\n  \"travel\",\n  \"treat\",\n  \"tremble\",\n  \"trick\",\n  \"trip\",\n  \"trot\",\n  \"trouble\",\n  \"trust\",\n  \"try\",\n  \"tug\",\n  \"whistle\",\n  \"wack'm\",\n  \"wink\",\n  \"wipe\",\n  \"wish\",\n  \"wobble\",\n  \"wonder\",\n  \"work\",\n  \"worry\",\n  \"wrap\",\n  \"wreck\",\n  \"wrestle\",\n  \"wriggle\",\n  \"x-ray\",\n  \"zoom\",\n];\n\n/**\n * Generate a random question using the array of verbs and nouns\n */\nconst shuffleQuestion = () => {\n  const randFromAr = (array: any[]) =>\n    array[Math.floor(Math.random() * array.length)];\n  const randomQuestion = () => {\n    return `Who's more likely to ${randFromAr(verbs)} a ${randFromAr(\n      objects\n    )}?`;\n  };\n\n  return randomQuestion();\n};\n\nexport default shuffleQuestion\n","/*\n * File: question-input.component.tsx\n * Project: frontend\n * Version: 1.0.0\n * File Created: Friday, 5th June 2020 11:13:02 am\n * Author: Ross MacDonald\n * ---------------\n * File Description: Component filling out questions in game\n * Last Modified: Friday, 5th June 2020 11:13:07 am\n * Modified By: Eoan O'Dea - eoan@wspace.ie\n * ---------------\n * Copyright 2020 - WebSpace\n */\n\nimport { Layout, Button, IconProps, Icon, Text } from \"@ui-kitten/components\";\nimport React, { useEffect } from \"react\";\nimport { Formik, FormikProps } from \"formik\";\nimport { QuestionSchema, QuestionInputData } from \"../data/question-input.model\";\nimport { FormInput } from \"./form-input.component\";\nimport { IInitialState, IPlayer } from \"../reducers/interfaces\";\nimport { gameActions } from \"../actions\";\nimport { connect } from \"react-redux\";\nimport { ButtonInput } from \"./form-button.component\";\nimport { View, KeyboardAvoidingView, Platform, Keyboard } from \"react-native\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport { Question, RoundOptions } from \"@rossmacd/gamesock-client\";\nimport shuffleQuestion from \"../helpers/shuffle-question.helper\";\nimport { TouchableWithoutFeedback } from \"react-native-gesture-handler\";\n\n/**\n * Importing styles\n * @param theme path\n * @param Form Module name\n */\nconst styles = require(\"../themes\")(\"Game\");\n\n/**\n * Interface actions\n * for the component\n */\ninterface IActions {\n  setGameLoading: () => void;\n  inputQuestion: ({ question }: Question) => void;\n}\n\n/**\n * Interface Props\n * for the component\n */\ninterface IProps {\n  isLoading: boolean;\n  questionInput: string;\n  questions: Question[];\n  user: IPlayer;\n  roundOptions: RoundOptions;\n}\n\nconst QuesionInput = (props: IProps & IActions) => {\n\n  \n\n  const submit = (values: { questionInput: string }) => {\n    console.log(\"submitting!!!\");\n    props.setGameLoading();\n\n    const question: Question = {\n      playerId: props.user.id,\n      question: values.questionInput,\n    };\n\n    props.inputQuestion(question);\n  };\n\n  const renderShuffleIcon = (props: IconProps): React.ReactElement => (\n    <Icon {...props} name=\"shuffle-2-outline\" />\n  );\n\n  const { isLoading, questionInput, roundOptions, questions } = props;\n\n  const renderForm = (\n    props: FormikProps<QuestionInputData>\n  ): React.ReactFragment => {\n    \n    useEffect(() => {\n      if(!props.values.questionInput.match(/^Who's more likely.*$/)){\n        props.setValues({ questionInput: \"Who's more likely\" })\n      }\n    }, [props.values.questionInput]);\n\n    const loading = isLoading || props.isSubmitting;\n\n    if (isLoading === false && props.isSubmitting === true)\n      props.setSubmitting(false);\n    if (roundOptions.numQuestions <= questions.length)\n      return (\n        <Text style={styles.inputTitle}>Waiting for other players...</Text>\n      );\n    return (\n      <View style={styles.questionInputContainer}>\n        <Button\n          accessoryLeft={renderShuffleIcon}\n          onPress={() => {\n            props.setValues({ questionInput: shuffleQuestion() });\n          }}\n          status=\"info\"\n          disabled={loading}\n          style={styles.questionInputButton}\n        />\n        <FormInput\n          id=\"questionInput\"\n          style={styles.questionInput}\n          size=\"large\"\n          placeholder=\"Insert your question\"\n          value={props.values.questionInput}\n          onSubmitEditing={() => Platform.OS !== 'web' ? props.handleSubmit() : () => {}}\n          onKeyPress={({nativeEvent}) => {\n            if(nativeEvent.key === 'Enter') props.handleSubmit()\n          }}\n        />\n        <ButtonInput\n          icon=\"checkmark-outline\"\n          disabled={loading}\n          loading={loading}\n          text=\"\"\n          onPress={() => props.handleSubmit()}\n          status=\"success\"\n          style={styles.questionInputButton}\n        />\n      </View>\n    );\n  };\n\n  return (\n    <KeyboardAvoidingView \n      behavior={Platform.OS == \"ios\" ? \"padding\" : \"height\"}\n      style={styles.inputContainer}\n    >\n    <TouchableWithoutFeedback \n      onPress={Platform.OS !== 'web' ? Keyboard.dismiss : () => {}}\n    >\n      <Text style={{color: \"#D7D98B\"}}>\n        No. of your <Text style={{color: '#AD0D4B'}}>Questions</Text>: {props.questions.length} /{\" \"}\n        {props.roundOptions.numQuestions}\n      </Text>\n      <Formik\n        initialValues={{ questionInput: questionInput }}\n        validationSchema={QuestionSchema}\n        onSubmit={(values, actions) => {\n          submit(values);\n          actions.setValues({ questionInput: questionInput });\n        }}\n      >\n        {renderForm}\n      </Formik>\n      </TouchableWithoutFeedback>\n    </KeyboardAvoidingView>\n  );\n};\n\n/**\n * Return a list of people from our redux state\n *\n * @param {*} state\n */\nconst mapStateToProps = (state: IInitialState): IProps => {\n  const {\n    isLoading,\n    questionInput,\n    questions,\n    user,\n    roundOptions\n  } = state.game;\n\n  return {\n    isLoading,\n    questionInput,\n    questions,\n    user,\n    roundOptions,\n  };\n};\n\nexport default connect<IProps, IActions, {}>(\n  mapStateToProps,\n  gameActions\n)(QuesionInput);\n","/*\n * File: game.component.tsx\n * Project: frontend\n * Version: 1.0.0\n * File Created: Friday, 5th June 2020 11:54:27 am\n * Author: Eoan O'Dea - eoan@wspace.ie\n * ---------------\n * File Description: In game controller during a game\n * Last Modified: Friday, 5th June 2020 11:54:36 am\n * Modified By: Eoan O'Dea - eoan@wspace.ie\n * ---------------\n * Copyright 2020 - WebSpace\n */\n\nimport React, { useEffect, useState } from \"react\";\nimport { Layout, Text } from \"@ui-kitten/components\";\nimport PickedPlayers from \"../../components/picked-players.component\";\nimport { IPlayer, IInitialState } from \"../../reducers/interfaces\";\nimport { connect } from \"react-redux\";\nimport QuestionInput from \"../../components/question-input.component\";\nimport { gameActions } from \"../../actions\";\nimport { GameScreenProps } from \"../../navigation/game.navigator\";\nimport { AppRoute } from \"../../navigation/app-routes\";\nimport {\n  onRequestQuestions,\n  Question,\n  RoundOptions,\n  HotseatOptions,\n} from \"@rossmacd/gamesock-client\";\nimport NotificationBar from '../../components/notification-bar.component';\nimport LoadingComponent from \"../../components/loading.component\";\nimport { ModalHeaderLobby } from \"../../components/modal-header-lobby.component\";\nimport {useKeepAwake} from 'expo-keep-awake';\nimport { ScrollView } from \"react-native-gesture-handler\";\n\n\n/**\n * Importing styles\n * @param theme path\n * @param App Module name\n */\nconst styles = require(\"../../themes\")(\"Game\");\n\n/**\n * Interface for Actions being\n * passed to the game screen component\n */\ninterface IActions extends GameScreenProps {\n  setGameLoading: () => void;\n  leaveGame: () => void;\n  onNextQuestion: (time: number) => void;\n  answerQuestion: (\n    lobbyName: string,\n    questionIndex: number,\n    playerId: number,\n    roundNum: number\n  ) => void;\n  setPhase: (phase: string) => void;\n  endGame: () => void;\n}\n\n/**\n * Interface for props being\n * passed to to the game screen component\n */\ninterface IProps {\n  lobbyName: string;\n  phase: string;\n  currentQuestionId: number;\n  questions: Question[];\n  roundOptions: RoundOptions | undefined;\n  user: IPlayer;\n  canAnswer: boolean;\n  displayAnswer: boolean;\n  timer: number;\n  hotseatOptions: HotseatOptions | undefined;\n}\n\nconst GameScreen = (props: IProps & IActions) => {\n  const [serverHasQuestions, setServerHasQuestions] = useState<boolean>(false);\n  const [notEnoughQuestions, setNotEnoughQuestions] = useState<boolean>(false);\n  useKeepAwake();\n\n  useEffect(() => {\n    setNotEnoughQuestions((val) => false);\n\n    onRequestQuestions(() => {\n      console.log(\"requesting questions\");\n      setServerHasQuestions((oldBool) => {\n        return true;\n      });\n\n      const { questions } = props;\n\n      // if (questions.length < props.roundOptions!.numQuestions) {\n      //   setNotEnoughQuestions((val) => true);\n      //   for (\n      //     let i = props.roundOptions!.numQuestions - questions.length;\n      //     i--;\n\n      //   ) {\n      //     questions.push({\n      //       playerId: props.user.id,\n      //       question: shuffleQuestion(),\n      //     });\n      //   }\n      // }\n      return questions.map((question) => question.question);\n    });\n  });\n\n  // useEffect(() => {\n  //   console.log(\"use effect siadgnewi\", props.hotseatOptions);\n  //   if (props.questions && props.questions.length > 0) {\n  //     //@ts-ignore\n  //     props.onNextQuestion(props.hotseatOptions?.delayBetween);\n  //   }\n  // }, [props.canAnswer]);\n\n  const endGame = () => {\n    props.setGameLoading();\n    props.leaveGame();\n    props.navigation.navigate(AppRoute.HOME);\n  };\n\n  const answerQuestion = (questionIndex: number, playerId: number) => {\n    props.answerQuestion(\n      props.lobbyName,\n      questionIndex,\n      playerId,\n      props.roundOptions?.roundNum as number\n    );\n  };\n\n  const gamePhaseController = () => {\n    const userIsInHotseat = props.roundOptions?.hotseatPlayers.some(\n      (player) => player.id === props.user.id\n    );\n\n    switch (props.phase) {\n      case \"Question Gathering\":\n        return (\n          <React.Fragment>\n          <ScrollView style={{flex: 1}}>\n            {/* <Timer serverHasQuestions={serverHasQuestions} /> */}\n            <PickedPlayers\n              user={props.user}\n              players={props.roundOptions?.hotseatPlayers}\n            />\n          </ScrollView>\n            {notEnoughQuestions ? (\n              <Text style={styles.title}>\n                Can't think of questions? That's okay, we'll help you out!\n              </Text>\n            ) : (\n              <></>\n            )}\n\n            {!userIsInHotseat ? (\n              <QuestionInput />\n            ) : (\n              // Text for chosen players for when they're waiting for questions:\n              <Text style={styles.titleNotChosen}>\n                Waiting to \"destroy\" your friendship...\n              </Text>\n            )}\n          </React.Fragment>\n        );\n\n      case \"Display Answer\":\n        // return (\n        //   <React.Fragment>\n        //     <Text style={styles.questInAnsPhase}>{props.questions[props.currentQuestionId].question}</Text>\n\n        //     {props.questions[props.currentQuestionId].answers!.map(\n        //       (answer: number, i: number) => {\n        //         if (answer !== null)\n        //           return (\n        //             <Text key={i} style={[i === 0 ? styles.answerLeft : styles.answerRight]}>\n        //               {`${props.roundOptions?.hotseatPlayers[i].name} SELECTED ${answer === i ? \"THEMSELVES!\" : props.roundOptions?.hotseatPlayers[i === 0 ? 1 : 0].name}`}\n        //             </Text>\n        //           );\n\n        //         return (\n        //           // Text for when chosen players didn't choose a player:\n        //           <Text key={i} style={[styles.pleadTheFifth, i === 0 ? styles.pleadAlignLeft : styles.pleadAlignRight]}>\n        //             {`${props.roundOptions?.hotseatPlayers[i].name} pleaded the 5th`}\n        //           </Text>\n        //         );\n        //       }\n        //     )}\n        //   </React.Fragment>\n        // );\n      case \"Hotseat\":\n        return (\n          <PickedPlayers\n            user={props.user}\n            players={props.roundOptions?.hotseatPlayers}\n            question={props.questions[props.currentQuestionId]}\n            questionIndex={props.currentQuestionId}\n            answerQuestion={answerQuestion}\n            canAnswer={props.canAnswer}\n            displayAnswer={props.phase === \"Display Answer\"}\n          />\n        );\n\n      case \"Disconnected\":\n        return <Text>Disconnected 😢</Text>;\n\n      default:\n        return <LoadingComponent />;\n    }\n  };\n\n  return (\n    <Layout style={styles.container}>\n      <ModalHeaderLobby\n        text={props.phase}\n        loadingText={props.phase}\n        lobbyCode={props.timer !== 0 ? `${props.timer}` : \"\"}\n        icon=\"close-outline\"\n        status=\"info\"\n        onPress={() => endGame()}\n      />\n      {gamePhaseController()}\n      <NotificationBar />\n    </Layout>\n  );\n};\n\n/**\n * Return a list of people from our redux state\n *\n * @param {*} state\n */\nconst mapStateToProps = (state: IInitialState): IProps => {\n  const {\n    timer,\n    user,\n    phase,\n    currentQuestionId,\n    questions,\n    roundOptions,\n    lobbyName,\n    canAnswer,\n    displayAnswer,\n    hotseatOptions,\n  } = state.game;\n\n  return {\n    timer,\n    user,\n    phase,\n    currentQuestionId,\n    questions,\n    roundOptions,\n    lobbyName,\n    canAnswer,\n    displayAnswer,\n    hotseatOptions,\n  };\n};\n\nexport default connect<IProps, IActions>(\n  mapStateToProps,\n  gameActions\n)(GameScreen);\n","import * as Yup from 'yup';\n\nexport class EditUserData {\n\n  constructor(\n    readonly username: string) {\n\n  }\n\n  static empty(): EditUserData {\n    return new EditUserData(\n      '',\n    );\n  }\n}\n\nexport const EditUserSchema = Yup.object().shape({\n  username: Yup.string().min(4, 'Username must be at least 4 characters').required('Username is required'),\n});\n\n","\nimport React, { useEffect } from 'react';\nimport { Text } from '@ui-kitten/components';\n\n\n\n\nconst PaymentComponent = () => {\n    // useEffect(() => {\n    //     runSetup()\n    // })\n\n\n    // const runSetup = async() => {\n    //     await Stripe.setOptionsAsync({\n    //         publishableKey: manifest.STRIPE_PUBLISHABLE_TEST, // Your key\n    //         androidPayMode: 'test', // [optional] used to set wallet environment (AndroidPay)\n    //         merchantId: manifest.APPLE_MERCHANT_ID, // [optional] used for payments with ApplePay\n    //     });\n    //     const token = await Stripe.paymentRequestWithCardFormAsync()\n    //     console.log('token!', token)\n        \n    // }\n    // const setForm = async() => {\n        \n    // }\n\n    return (\n    <React.Fragment>\n        <Text>Cough Cough</Text>\n    </React.Fragment>\n    )\n}\n\nexport default PaymentComponent","/*\n * File: join.component.tsx\n * Project: frontend\n * Version: 1.0.0\n * File Created: Wednesday, 3rd June 2020 2:52:35 pm\n * Author: Eoan O'Dea - eoan@wspace.ie\n * ---------------\n * File Description: Joining a game\n * Last Modified: Wednesday, 3rd June 2020 3:14:57 pm\n * Modified By: Eoan O'Dea - eoan@wspace.ie\n * ---------------\n * Copyright 2020 - WebSpace\n */\n\nimport React from \"react\";\nimport { View } from \"react-native\";\nimport { EditUserScreenProps } from \"../../navigation/game.navigator\";\nimport { Layout, Text } from \"@ui-kitten/components\";\nimport { gameActions } from \"../../actions\";\nimport { FormikProps, Formik } from \"formik\";\nimport { EditUserData, EditUserSchema } from \"../../data/edit-user.model\";\nimport { IInitialState, IPlayer } from \"../../reducers/interfaces\";\nimport { connect } from \"react-redux\";\nimport { FormInput } from \"../../components/form-input.component\";\nimport { ButtonInput } from \"../../components/form-button.component\";\nimport { ModalHeader } from \"../../components/modal-header.component\";\nimport PaymentComponent from \"../../components/payment.component\";\n\n/**\n * Importing styles\n * @param theme path\n * @param App Module name\n */\nconst styles = require(\"../../themes\")(\"Form\");\n\n/**\n * Interface actions\n * for the component\n */\ninterface IEditActions extends EditUserScreenProps {\n  setGameLoading: () => void;\n  formUpdate: ({ prop, value }: any) => void;\n  updateSinglePlayer: (lobbyName: string, user: IPlayer) => void;\n  toggleRedirect: () => void;\n}\ninterface IEditProps {\n  userToEditIndex: number;\n  players: IPlayer[];\n  error: string;\n  isLoading: boolean;\n  lobbyName: string;\n  user: IPlayer\n}\n\nconst EditUserScreen = (props: IEditActions & IEditProps) => {\n  const { error, isLoading } = props;\n  const [hasPaid, setHasPaid] = React.useState<boolean>(false)\n  /**\n * If the inputs pass validation,\n * submit the request to the server\n */\n  const submit = (values: any) => {\n    props.setGameLoading();\n    // setWaitForRedirect(true)\n\n    const { lobbyName } = props\n    let user = props.players[props.userToEditIndex]\n    const { username } = values;\n\n    user.name = username\n\n    console.log('sending update!', {lobbyName, user})\n\n    props.updateSinglePlayer(lobbyName, user)\n  };\n\n  const renderForm = (props: FormikProps<EditUserData>): React.ReactFragment => {\n    const loading = isLoading || props.isSubmitting;\n\n    // if (isLoading === false && props.isSubmitting === true) props.setSubmitting(false)\n    return (\n      <React.Fragment>\n        <FormInput\n          id=\"username\"\n          style={styles.formControl}\n          size='large'\n          value={props.values.username}\n          placeholder=\"Enter a Username\"\n          onKeyPress={({ nativeEvent }) => {\n            if (nativeEvent.key === 'Enter') props.handleSubmit()\n          }}\n        />\n\n        {error !== \"\" && <Text>{error}</Text>}\n\n        <ButtonInput\n          style={styles.submitButton}\n          disabled={!props.isValid && !props.isValidating}\n          onPress={() => {\n            props.handleSubmit()}\n          }\n          loading={loading}\n          text=\"SAVE\"\n        />\n      </React.Fragment>\n    );\n  };\n\n\n  return (\n    <Layout style={styles.formContainer}>\n      <ModalHeader\n        text=\"\"\n        icon=\"close-outline\"\n        status=\"primary\"\n        onPress={() => props.toggleRedirect()}\n      />\n      {\n        (props.players[props.userToEditIndex].id !== props.user.id && !hasPaid)\n        ? (\n        <React.Fragment>\n        <Text>Time to Cough it up</Text>\n        <PaymentComponent />\n        </React.Fragment>\n        )\n        : (\n          <View style={styles.formContainer}>\n            <Formik\n              initialValues={{ username: props.players[props.userToEditIndex].name || \"\" }}\n              validationSchema={EditUserSchema}\n              onSubmit={(values) => submit(values)}\n            >\n\n              {renderForm}\n            </Formik>\n          </View>\n        )\n      }\n    </Layout>\n  )\n}\n\nconst mapStateToProps = (state: IInitialState): IEditProps => {\n  const { error, isLoading, players, lobbyName, userToEditIndex, user } = state.game;\n\n  return {\n    error,\n    isLoading,\n    players,\n    lobbyName,\n    userToEditIndex,\n    user\n  };\n};\n\nexport default connect<IEditProps, IEditActions, {}>(\n  mapStateToProps,\n  gameActions\n)(EditUserScreen);","/**\n * Import modules which can be accessed\n */\nimport HostScreen from './host.component'\nimport JoinScreen from './join.component'\nimport LobbyScreen from './lobby.component'\nimport GameScreen from './game.component'\nimport EditUserScreen from './edit.component'\n\n/**\n * Export these modules to the rest of the application\n */\nexport default {\n    HostScreen,\n    JoinScreen,\n    LobbyScreen,\n    GameScreen,\n    EditUserScreen\n}\n","import React from \"react\";\nimport { RouteProp } from \"@react-navigation/core\";\nimport {\n  createStackNavigator,\n  StackNavigationProp,\n} from \"@react-navigation/stack\";\nimport { AppRoute } from \"./app-routes\";\nimport { AppNavigatorParams } from \"./app.navigator\";\nimport auth from \"../scenes/auth\";\nimport { connect } from \"react-redux\";\nimport { IInitialState } from \"../reducers/interfaces\";\nimport game from \"../scenes/game\";\nimport * as actions from \"../actions/game\";\n\ntype AuthNavigatorParams = AppNavigatorParams & {\n  [AppRoute.SIGN_IN]: undefined;\n  [AppRoute.SIGN_UP]: undefined;\n  [AppRoute.SIGN_OUT]: undefined;\n  [AppRoute.HOST]: undefined;\n};\n\nexport interface SignInScreenProps {\n  navigation: StackNavigationProp<AuthNavigatorParams, AppRoute.SIGN_IN>;\n  route: RouteProp<AuthNavigatorParams, AppRoute.SIGN_IN>;\n}\n\nexport interface RegisterScreenProps {\n  navigation: StackNavigationProp<AuthNavigatorParams, AppRoute.SIGN_UP>;\n  route: RouteProp<AuthNavigatorParams, AppRoute.SIGN_UP>;\n}\n\nexport interface SignoutScreenScreenProps {\n  navigation: StackNavigationProp<AuthNavigatorParams, AppRoute.SIGN_OUT>;\n  route: RouteProp<AuthNavigatorParams, AppRoute.SIGN_OUT>;\n}\n\ninterface IGameActions {\n  initGameSock: () => void;\n}\n\nexport interface IAuthProps {\n  token: string;\n  init: boolean;\n}\n\nconst Stack = createStackNavigator<AuthNavigatorParams>();\n\nconst Auth = (props: IAuthProps & IGameActions): React.ReactElement => {\n  if (!props.init) props.initGameSock();\n  return (\n    <Stack.Navigator\n      headerMode=\"none\"\n      screenOptions={{ animationEnabled: true }}\n    >\n      {!props.token || props.token == \"\" ? (\n        <>\n          <Stack.Screen name={AppRoute.SIGN_IN} component={auth.SignInScreen} />\n          <Stack.Screen\n            name={AppRoute.SIGN_UP}\n            component={auth.RegisterScreen}\n          />\n        </>\n      ) : (\n        <>\n          <Stack.Screen name={AppRoute.HOST} component={game.LobbyScreen} />\n        </>\n      )}\n    </Stack.Navigator>\n  );\n};\n\nconst mapStateToProps = (state: IInitialState): IAuthProps => {\n  const { token } = state.auth;\n  const { init } = state.game;\n\n  return { token, init };\n};\n\nconst AuthNavigator = connect(mapStateToProps, actions)(Auth);\n\nexport { AuthNavigator };\n","/*\n * File: Home.tsx\n * Project: frontend\n * Version: 1.0.0\n * File Created: Monday, 11th May 2020 11:36:00 am\n * Author: Eoan O'Dea - eoan@wspace.ie\n * ---------------\n * File Description: A simple static page to demonstrate some features of react native\n * Last Modified: Saturday, 16th May 2020 8:57:16 pm\n * Modified By: Eoan O'Dea - eoan@wspace.ie\n * ---------------\n * Copyright 2020 - WebSpace\n */\n\nimport React, { useEffect, useState, Dispatch } from 'react';\nimport { View } from 'react-native';\nimport { Button, Layout, Text, Icon, IconProps } from '@ui-kitten/components';\nimport { AppRoute } from '../../navigation/app-routes';\nimport { IInitialState } from '../../reducers/interfaces';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\nimport { HomeScreenProps } from '../../navigation/main.navigator';\nimport { IHostGame, IRejoinGame } from '../../actions/game';\nimport SignoutScreen from '../auth/sign-out.component';\nimport AsyncStorage from '@react-native-community/async-storage';\nimport { Player } from '@rossmacd/gamesock-client';\nimport { bindActionCreators } from 'redux';\n\nimport Constants from \"expo-constants\";\n\n/**\n * Importing styles\n * @param theme path\n * @param App Module name\n */\nconst styles = require('../../themes')('App');\n\nconst baseUrl = Constants.manifest.extra.SERVER_URL\n\ninterface IActions extends HomeScreenProps {\n  hostGameAction: (body: IHostGame) => void;\n  autoRejoinLobby:(body:IRejoinGame)=>Promise<Player[]>;\n  getUser: (token: string) => void;\n}\n\ninterface IProps {\n  name: string;\n  token: string;\n  isHost: boolean;\n}\n\n/**\n * Rendering the view\n */\nconst Home = (props: IProps & IActions) => {\n  const [canRejoin, setCanRejoin] = useState<boolean>(false);\n  const [rejoinInfo,setRejoinInfo]=useState<IRejoinGame>({id:'',lobbyName:''})\n  \n  useEffect(() => {\n    // Check if a previous game is in localstorage\n    AsyncStorage.getItem('myId')\n    .then(unparsedID=>{\n      if (unparsedID) {\n        // Parse the object\n        const parsedOldID = JSON.parse(unparsedID)\n        if (parsedOldID && parsedOldID.expiry && parsedOldID.expiry > Date.now()) {\n          fetch(`${baseUrl}/api/gameActive`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              Accept: 'application/json',\n            },\n            body: JSON.stringify({\n              id: parsedOldID.id,\n              lobbyName: parsedOldID.lobby,\n            }),\n          }).then((res) => {\n            console.log('FETCH:RES', res);\n            if (res.ok) {\n              res.json().then((data) => {\n                if (data && data.active) {\n                  console.log('Shes sound let her go', data.active);\n                  setRejoinInfo({id:parsedOldID,lobbyName:parsedOldID.lobby})\n                  setCanRejoin(true);\n                }\n              });\n            }\n          });\n        }\n      }\n    }).catch(err => {\n      console.log('async storage error!', err)\n    })\n\n    AsyncStorage.getItem('seenRules')\n    .then(bool => {\n      if(!bool || bool !== 'true') {\n        AsyncStorage.setItem('seenRules', 'true')\n        .catch(err => console.log('error setting seen rules', err))\n        props.navigation.navigate(AppRoute.RULES)\n      }\n    }).catch(err => console.log('error checking rules', err))\n\n    AsyncStorage.getItem('token')\n      .then(token => {\n        if(token && token !== \"\") {\n          props.getUser(token)\n        }\n      }).catch(err => console.log('error getting token', err))\n  }, []);\n  /**\n   * If the user is logged in, start a new game as a host\n   *\n   * if not redirect them to auth\n   */\n  const hostOrLogin = () => {\n    if (props.token && props.token !== '') {\n      props.hostGameAction({ username: props.name, token: props.token });\n      props.navigation.navigate(AppRoute.AUTH);\n    } else props.navigation.navigate(AppRoute.AUTH);\n  };\n\n  const settingsIcon = (props: IconProps) => <Icon {...props} name=\"settings-2-outline\" />;\n  const questionIcon = (props: IconProps) => <Icon {...props} name=\"question-mark-outline\" />;\n\n  const renderSignoutAndCogContainer = () => {\n    if (props.token && props.token !== '')\n      return (\n        <View style={styles.signOutAndCogContainer}>\n          <SignoutScreen />\n          <Button style={styles.settingsCog} onPress={() => props.navigation.navigate(AppRoute.DEVINFO)} appearance='ghost' accessoryRight={settingsIcon}></Button>\n          <Button style={styles.settingsCog} onPress={() => props.navigation.navigate(AppRoute.RULES)} status=\"info\" accessoryRight={questionIcon}></Button>\n        </View>\n      );\n\n    return (\n      <View style={styles.signOutAndCogContainer}>\n        <Button style={styles.settingsCog} onPress={() => props.navigation.navigate(AppRoute.DEVINFO)} appearance='ghost' accessoryRight={settingsIcon}></Button>\n        <Button style={styles.settingsCog} onPress={() => props.navigation.navigate(AppRoute.RULES)} status=\"info\" accessoryRight={questionIcon}></Button>\n      </View>\n    );\n  };\n\n  const renderRejoin = () => {\n    if (canRejoin) {\n      console.log(canRejoin)\n      //Show the rejoin button\n      return (\n        <Button style={styles.formButtonAlternate} onPress={() => {\n            props.autoRejoinLobby(rejoinInfo).then(()=>{\n            //TODO make this conditional\n            props.navigation.navigate(AppRoute.GAME)\n          }).catch(e=>{\n            console.log(e)\n            setCanRejoin(false)\n          })\n        }}>\n          {'REJOIN GAME '+rejoinInfo.lobbyName}\n        </Button>\n      );\n    }\n\n    return <></>\n  };\n\n  return (\n    <Layout style={styles.container}>\n      {renderSignoutAndCogContainer()}\n      <Text style={styles.title}>WHO IS</Text>\n      <Text style={styles.titleRed}>MORE LIKELY</Text>\n      <Text style={styles.title}>TO</Text>\n\n      <View>\n        {renderRejoin()}\n        <Button style={styles.formButton} onPress={() => hostOrLogin()}>\n          HOST\n        </Button>\n\n        <Button style={styles.formButton} onPress={() => props.navigation.navigate(AppRoute.GAME)}>\n          JOIN\n        </Button>\n      </View>\n    </Layout>\n  );\n};\n\nconst mapStateToProps = (state: IInitialState): IProps => {\n  const { token, name } = state.auth;\n  const { isHost } = state.game;\n\n  return { token, name, isHost };\n};\n\nfunction mapDispatchToProps(dispatch: any): any {\n  const {hostGameAction, autoRejoinLobby} = actions.gameActions\n  const {getUser} = actions.authActions\n\n  return {\n    hostGameAction: bindActionCreators(hostGameAction, dispatch),\n    autoRejoinLobby: bindActionCreators(autoRejoinLobby, dispatch),\n    getUser: bindActionCreators(getUser, dispatch)\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","/*\n * File: devinfo.component.tsx\n * Project: frontend\n * Version: 1.0.0\n * File Created: Saturday, 6th June 2020 9:13:05 pm\n * Author: Eoan O'Dea - eoan@wspace.ie\n * ---------------\n * File Description: Displaying info for developers\n * Last Modified: Saturday, 6th June 2020 9:13:09 pm\n * Modified By: Eoan O'Dea - eoan@wspace.ie\n * ---------------\n * Copyright 2020 - WebSpace\n */\n\nimport React from \"react\";\nimport {\n  Layout,\n  List,\n  ListItem,\n  IconProps,\n  Icon,\n} from \"@ui-kitten/components\";\nimport { Platform } from \"react-native\";\nimport { ModalHeader } from \"../../components/modal-header.component\";\nimport { AppRoute } from \"../../navigation/app-routes\";\nimport { DevInfoScreenProps } from \"../../navigation/main.navigator\";\n\n/**\n * Importing styles\n * @param theme path\n * @param App Module name\n */\nconst styles = require(\"../../themes\")(\"Game\");\n\nimport Constants from \"expo-constants\";\n\n\nconst data = [\n  { field: \"Server URL\", value: Constants.manifest.extra.SERVER_URL },\n  { field: \"Build Mode\", value: __DEV__ ? \"Development\" : \"Production\" },\n  { field: \"Version\", value: Constants.manifest.version },\n  { field: \"Platform\", value: Platform.OS },\n];\n\nconst DevInfoScreen = (props: DevInfoScreenProps) => {\n  const renderItemIcon = (props: IconProps) => (\n    <Icon {...props} name=\"settings-2-outline\" />\n  );\n\n  const renderData = ({ item }: any) => (\n    <ListItem\n      title={`${item.field}: ${item.value}`}\n      accessoryLeft={renderItemIcon}\n    />\n  );\n\n  return (\n    <Layout style={styles.container}>\n      <ModalHeader\n        text=\"Developer Information\"\n        icon=\"close-outline\"\n        status=\"info\"\n        onPress={() => props.navigation.navigate(AppRoute.HOME)}\n      />\n      <List style={styles.listContainer} data={data} renderItem={renderData} />\n    </Layout>\n  );\n};\n\nexport default DevInfoScreen;\n","import React, { useState } from 'react';\nimport { ViewPager, Layout, Text, Button } from '@ui-kitten/components';\nimport Constants from 'expo-constants';\nimport { Image } from 'react-native'\nimport { ModalHeader } from '../../components/modal-header.component';\nimport { AppRoute } from '../../navigation/app-routes';\nimport { RulesScreenProps } from '../../navigation/main.navigator';\n\n/**\n * Importing styles\n * @param theme path\n * @param Rules Module name\n */\nconst styles = require('../../themes')('Rules');\n\nconst contentArr = [\n    {\n        imgSrc: require('../../../assets/Extra.png'),\n        title: 'WELCOME TO SHCOOP',\n        description: 'A \"not a drinking game\" game where you and your mates can be put up against each other to a \"Who is more likely to...\" deathmatch! Fun right? So, here are the rules...'\n    },\n    {\n        imgSrc: require('../../../assets/Hosting.png'),\n        title: 'HOSTING',\n        description: 'To host, either sign in via Google/Apple or sign up with us then login with your custom account. Once signed in, you will be shcooped into your own lobby with a code to send to your friends. The more the merrier! (By the way, only you, as the host, can start the game). '\n    },\n    {\n        imgSrc: require('../../../assets/Joining1.png'),\n        title: 'JOINING',\n        description: 'Simple. Enter the lobby code and your own username (can literally be anything) and hit join.'\n    },\n    {\n        imgSrc: require('../../../assets/Hosting1.png'),\n        title: 'IN-GAME: CHOSEN',\n        description: 'So you got chosen? Poor bastard. Here is what you do: The non-chosen players will make up questions for you chosen players and once the time is up, you answer those questions by either tapping/clicking your avatar or your opponents.'\n    },\n    {\n        imgSrc: require('../../../assets/ChosenorNotChosen.png'),\n        title: 'IN-GAME: NOT CHOSEN',\n        description: 'Ah yes, the lucky one. Your job is to make questions for the chosen players within a time limit. Cannot think of any? Do not worry, boo boo, we got you! Hit the randomise button on the bottom left, let us make the question for you. Questions good? Let em have it!'\n    },\n]\n\nconst Rules = (props: RulesScreenProps) => {\n    const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n    const navigate = (i: number) => {\n        if (i >= contentArr.length - 1) return props.navigation.navigate(AppRoute.HOME)\n\n        setSelectedIndex(selectedIndex + 1)\n    }\n\n    return (\n        <ViewPager\n            style={styles.rulesContainer}\n            selectedIndex={selectedIndex}\n            onSelect={index => setSelectedIndex(index)}\n        >\n            {contentArr.map((page, i) => {\n                return (\n                    <Layout\n                        key={i}\n                        style={styles.tab}\n                        level='2'\n                    >\n                        <Text category='h1' style={styles.ruleHeading}>{page.title}</Text>\n                        <Text style={styles.ruleDescription}>{page.description}</Text>\n                        <Image resizeMode={'contain'} style={styles.rulesImage} source={page.imgSrc} />\n                        <Button status=\"success\" style={styles.rulesBtn} onPress={() => navigate(selectedIndex)}>{selectedIndex >= contentArr.length - 1 ? 'YEEHAW TIME' : 'NEXT'}</Button>\n                    </Layout>\n                )\n            })}\n\n        </ViewPager>\n    )\n}\n\nexport default Rules","/**\n * Import modules which can be accessed\n */\nimport Home from './home.component'\nimport DevInfoScreen from './devinfo.component'\nimport RulesScreen from './rules.component'\n\n/**\n * Export these modules to the rest of the application\n */\nexport default {\n    Home,\n    DevInfoScreen,\n    RulesScreen\n}\n","import React from 'react';\nimport { RouteProp } from '@react-navigation/core';\nimport { createStackNavigator, StackNavigationProp } from '@react-navigation/stack';\nimport { AppRoute } from './app-routes';\nimport { AppNavigatorParams } from './app.navigator';\nimport main from '../scenes/main';\n\ntype MainNavigatorParams = AppNavigatorParams & {\n  [AppRoute.HOME]: undefined;\n  [AppRoute.DEVINFO]: undefined;\n  [AppRoute.RULES]: undefined;\n}\n\nexport interface HomeScreenProps {\n  navigation: StackNavigationProp<MainNavigatorParams, AppRoute.HOME>;\n  route: RouteProp<MainNavigatorParams, AppRoute.HOME>;\n}\n\nexport interface DevInfoScreenProps {\n  navigation: StackNavigationProp<MainNavigatorParams, AppRoute.DEVINFO>;\n  route: RouteProp<MainNavigatorParams, AppRoute.DEVINFO>;\n}\n\nexport interface RulesScreenProps {\n  navigation: StackNavigationProp<MainNavigatorParams, AppRoute.RULES>;\n  route: RouteProp<MainNavigatorParams, AppRoute.RULES>;\n}\n\nconst Stack = createStackNavigator<MainNavigatorParams>();\n\nexport const MainNavigator = (props: MainNavigatorParams): React.ReactElement => (\n  <Stack.Navigator {...props} mode=\"modal\" headerMode='none' screenOptions={{animationEnabled: true}}>\n    <Stack.Screen name={AppRoute.HOME} component={main.Home}/>\n    <Stack.Screen name={AppRoute.DEVINFO} component={main.DevInfoScreen}/>\n    <Stack.Screen name={AppRoute.RULES} component={main.RulesScreen}/>\n  </Stack.Navigator>\n);\n","import React from 'react';\nimport { RouteProp } from '@react-navigation/core';\nimport { createStackNavigator, StackNavigationProp } from '@react-navigation/stack';\nimport { AppRoute } from './app-routes';\nimport { AppNavigatorParams } from './app.navigator';\nimport game from '../scenes/game'\nimport { IInitialState } from '../reducers/interfaces';\nimport { connect } from 'react-redux';\nimport * as actions from \"../actions/game\";\n\ntype GameNavigatorParams = AppNavigatorParams & {\n  [AppRoute.HOST]: undefined;\n  [AppRoute.JOIN]: undefined;\n  [AppRoute.LOBBY]: undefined;\n  [AppRoute.INGAME]: undefined;\n  [AppRoute.EDIT_USER]: undefined;\n}\n\nexport interface HostGameScreenProps {\n  navigation: StackNavigationProp<GameNavigatorParams, AppRoute.HOST>;\n  route: RouteProp<GameNavigatorParams, AppRoute.HOST>;\n}\n\nexport interface JoinGameScreenProps {\n    navigation: StackNavigationProp<GameNavigatorParams, AppRoute.JOIN>;\n    route: RouteProp<GameNavigatorParams, AppRoute.JOIN>;\n}\n\nexport interface LobbyScreenProps {\n  navigation: StackNavigationProp<GameNavigatorParams, AppRoute.LOBBY>;\n  route: RouteProp<GameNavigatorParams, AppRoute.LOBBY>;\n}\n\nexport interface EditUserScreenProps {\n  navigation: StackNavigationProp<GameNavigatorParams, AppRoute.EDIT_USER>;\n  route: RouteProp<GameNavigatorParams, AppRoute.EDIT_USER>;\n}\n\nexport interface GameScreenProps {\n  navigation: StackNavigationProp<GameNavigatorParams, AppRoute.INGAME>;\n  route: RouteProp<GameNavigatorParams, AppRoute.INGAME>;\n}\n\nconst Stack = createStackNavigator<GameNavigatorParams>();\n\ninterface IGameActions extends GameNavigatorParams {\n  initGameSock: () => void;\n}\n\ninterface IGameProps {\n  inLobby: boolean;\n  inGame: boolean;\n  init: boolean;\n  editUser: boolean;\n  isHost: boolean;\n}\n\nexport const Game = (props: IGameProps & IGameActions): React.ReactElement => {\n  if(!props.init) props.initGameSock()\n  // if(props.editUser === false) console.log('big fat dumb')\n  return (\n  <Stack.Navigator {...props} headerMode='none' screenOptions={{animationEnabled: true}}>\n    {\n      !props.inLobby\n      ? (\n        <Stack.Screen name={AppRoute.JOIN} component={game.JoinScreen}/>\n      )\n      : (\n        !props.inGame\n        ? (\n          props.editUser === false\n            ? <Stack.Screen name={AppRoute.LOBBY} component={game.LobbyScreen}/>\n            : <Stack.Screen name={AppRoute.EDIT_USER} component={game.EditUserScreen}/>\n          )\n        : <Stack.Screen name={AppRoute.INGAME} component={game.GameScreen}/>\n      )\n    }\n  </Stack.Navigator>\n  )\n}\n\nconst mapStateToProps = (state: IInitialState): IGameProps => {\n  const { isHost, inLobby, inGame, init, editUser } = state.game;\n\n  return { isHost, inLobby, inGame, init, editUser };\n};\n\nconst GameNavigator = connect(mapStateToProps, actions)(Game);\n\nexport { GameNavigator };\n","import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { AuthNavigator } from './auth.navigator';\nimport { MainNavigator } from './main.navigator';\nimport { AppRoute } from './app-routes';\nimport { GameNavigator } from './game.navigator';\n\ntype StackNavigatorProps = React.ComponentProps<typeof Stack.Navigator>;\n\nexport type AppNavigatorParams = {\n  [AppRoute.AUTH]: undefined;\n  [AppRoute.HOME]: undefined;\n  [AppRoute.GAME]: undefined;\n}\n\nconst Stack = createStackNavigator<AppNavigatorParams>();\n\nexport const AppNavigator = (props: Partial<StackNavigatorProps>): React.ReactElement => (\n  <Stack.Navigator {...props} mode=\"modal\" headerMode='none' screenOptions={{animationEnabled: true}}>\n    <Stack.Screen name={AppRoute.HOME} component={MainNavigator}/>\n    <Stack.Screen name={AppRoute.AUTH} component={AuthNavigator}/>\n    <Stack.Screen name={AppRoute.GAME} component={GameNavigator}/>\n  </Stack.Navigator>\n);\n","/*\n * File: App.tsx\n * Project: frontend\n * Version: 1.0.0\n * File Created: Saturday, 26th October 1985 9:15:00 am\n * Author: Eoan O'Dea - eoan@wspace.ie\n * ---------------\n * File Description: Primary entrypoint for the application\n * Last Modified: Saturday, 16th May 2020 9:00:50 pm\n * Modified By: Eoan O'Dea - eoan@wspace.ie\n * ---------------\n * Copyright 2020 - WebSpace\n */\n\nimport React from \"react\";\nimport { Image, View, Platform } from 'react-native';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { Asset } from 'expo-asset';\n\n/**\n * Redux dependencies\n */\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport reducers from \"./src/reducers\";\nimport Constants from 'expo-constants';\n\n/**\n * Navigation dependencies & modules\n */\nimport { NavigationContainer } from '@react-navigation/native';\nimport { AppNavigator } from \"./src/navigation/app.navigator\";\n\n/**\n * UI & Component Library dependencies\n */\nimport { ApplicationProvider, IconRegistry } from '@ui-kitten/components';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { EvaIconsPack } from '@ui-kitten/eva-icons';\nimport * as eva from '@eva-design/eva';\n// Crash monitoring\nimport rg4js from 'raygun4js';\n/**\n * Custom UI Component theming\n */\nimport { default as theme } from './src/assets/custom-theme.json';\n\n\n/**\n * Initialise redux store\n * Along with the redux dev tools\n */\nconst store = createStore(\n  reducers,\n  compose(\n    //@ts-ignore\n    applyMiddleware(thunk), window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : (f) => f\n  )\n);\n\n/**\n * Entry point for the application\n */\n// export default function App() {\n//   useEffect(() => {\n   \n//   }, [])\n//   return (\n//     <Provider store={store}>\n//       <IconRegistry icons={EvaIconsPack} />\n//       <ApplicationProvider {...eva} theme={{...eva.dark, ...theme}}>\n//           <SafeAreaProvider>\n//             <NavigationContainer>\n//               <AppNavigator />\n//             </NavigationContainer>\n//           </SafeAreaProvider>\n//       </ApplicationProvider>\n//     </Provider>\n//   );\nexport default class App extends React.Component {\n  state = {\n    showApp: false\n  };\n\n  componentDidMount() {\n    rg4js('enableCrashReporting', true);\n    rg4js('apiKey', 'bFCdvDJJcwGct6nwxT3EQ');\n    // rg4js('enablePulse', true); // This will enable user monitoring on web only does not work with react native\n    // Tag that it is a client and tag the server that crashed - this can be used to seperate prod and dev\n    rg4js('withTags', ['React-Native', Constants.manifest.extra.SERVER_URL]);\n    //@ts-ignore This is a real function but its not in the types 🤷‍♂️\n    rg4js('setVersion', Constants.manifest.version)\n    rg4js('options', { ignore3rdPartyErrors: true });\n    // rg4js('boot'); // This call must be made last to start the provider for mobile?\n    \n    SplashScreen.preventAutoHideAsync();\n  }\n\n  render() {\n    if(!this.state.showApp) {\n      return (\n        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n          <Image \n            style={{ width: '100%', height: '20%', maxHeight: 400, maxWidth: 400}}\n            source={require('./assets/splash.gif')} \n            onLoad={this._cacheResourcesAsync}\n          />\n        </View>\n      );\n    }\n    \n    return (\n      <Provider store={store}>\n        <IconRegistry icons={EvaIconsPack} />\n        <ApplicationProvider {...eva} theme={{...eva.dark, ...theme}}>\n            <SafeAreaProvider>\n              <NavigationContainer>\n                <AppNavigator />\n              </NavigationContainer>\n            </SafeAreaProvider>\n        </ApplicationProvider>\n      </Provider>\n    );\n  }\n\n  _cacheResourcesAsync = async () => {\n    SplashScreen.hideAsync();\n   \n    const gif = await require('./assets/splash.gif');\n\n    await Asset.fromModule(gif).downloadAsync();    \n\n    setTimeout(() => {\n      \n      this.setState({ showApp: true });\n    }, 3500);\n  };\n\n}\n\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","var map = {\n\t\"./\": 34,\n\t\"./index\": 34,\n\t\"./index.ts\": 34,\n\t\"./light\": 167,\n\t\"./light/\": 167,\n\t\"./light/App\": 178,\n\t\"./light/App.ts\": 178,\n\t\"./light/Form\": 179,\n\t\"./light/Form.ts\": 179,\n\t\"./light/Game\": 180,\n\t\"./light/Game.ts\": 180,\n\t\"./light/Header\": 181,\n\t\"./light/Header.ts\": 181,\n\t\"./light/Notification\": 182,\n\t\"./light/Notification.ts\": 182,\n\t\"./light/Rules\": 183,\n\t\"./light/Rules.ts\": 183,\n\t\"./light/index\": 167,\n\t\"./light/index.ts\": 167\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 509;","module.exports = __webpack_public_path__ + \"static/media/Extra.6b5f0cb8.png\";","module.exports = __webpack_public_path__ + \"static/media/Hosting.02713dfd.png\";","module.exports = __webpack_public_path__ + \"static/media/Joining1.15008588.png\";","module.exports = __webpack_public_path__ + \"static/media/Hosting1.dd0c4ffc.png\";","module.exports = __webpack_public_path__ + \"static/media/ChosenorNotChosen.f77fd1fc.png\";"],"sourceRoot":""}