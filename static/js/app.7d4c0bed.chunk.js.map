{"version":3,"sources":["src/themes/light/index.ts","src/themes/light/App.ts","src/themes/light/Form.ts","src/themes/light/Game.ts","src/themes/light/Header.ts","src/reducers/AuthReducer.ts","src/reducers/GameReducer.ts","src/navigation/app-routes.ts","src/reducers/index.ts","src/actions/socket.ts","src/actions/game.ts","src/actions/auth.ts","src/scenes/auth/platformSpecific/LogoutWithGoogle.tsx","src/components/form-button.component.tsx","src/scenes/auth/sign-out.component.tsx","src/assets/icons.tsx","src/components/form-input.component.tsx","src/scenes/auth/platformSpecific/LoginWithGoogle.tsx","src/scenes/auth/platformSpecific/LoginWithApple.ios.tsx","src/data/sign-in.model.ts","src/components/modal-header.component.tsx","src/scenes/auth/sign-in.component.tsx","src/data/sign-up.model.ts","src/scenes/auth/register.component.tsx","src/scenes/auth/index.ts","src/scenes/game/host.component.tsx","src/data/join-lobby.model.ts","src/scenes/game/join.component.tsx","src/components/modal-header-lobby.component.tsx","src/components/loading.component.tsx","src/scenes/game/lobby.component.tsx","src/components/picked-players.component.tsx","src/data/question-input.model.ts","src/helpers/shuffle-question.helper.ts","src/components/question-input.component.tsx","src/scenes/game/game.component.tsx","src/scenes/game/index.ts","src/navigation/auth.navigator.tsx","src/scenes/main/home.component.tsx","src/scenes/main/devinfo.component.tsx","src/scenes/main/index.ts","src/navigation/main.navigator.tsx","src/navigation/game.navigator.tsx","src/navigation/app.navigator.tsx","App.tsx","web-build/register-service-worker.js","src/themes/index.ts","src/themes sync /^/.*$"],"names":["App","Form","Game","Header","StyleSheet","create","container","flex","paddingVertical","paddingHorizontal","alignItems","justifyContent","backgroundColor","position","title","color","fontSize","fontWeight","textAlign","titleRed","paddingBottom","subTitle","itemContainer","display","formButton","marginVertical","borderWidth","shadowColor","shadowOpacity","shadowRadius","shadowOffset","width","height","borderRadius","signOutAndCogContainer","top","margin","flexDirection","signOutBtn","formContainer","formContainerReg","homeBtn","resetPasswordContainer","formControl","borderColor","formControlReg","submitButton","noAccountButton","haveAccountButton","thirdPartyButtonContainer","customHrTag","marginTop","marginBottom","customHrTagReg","paddingTop","gameLoadingSpinner","loadingSpinner","listContainer","listItem","alignSelf","borderTopStartRadius","borderTopEndRadius","submitButtonJoined","bottom","borderBottomStartRadius","titleChosenYellow","titleChosenRed","pleadTheFifth","pleadAlignLeft","borderBottomEndRadius","pleadAlignRight","question","pickedPlayerContainer","pickedPlayer","pickedPlayerCard","cardPink","cardPurple","belowCardText","alignLeft","alignRight","titleNotChosen","inputTitle","inputContainer","padding","questionInputContainer","questionInput","overflow","questionInputButton","marginHorizontal","codeTitle","leaderboardTitle","button","initialState","name","email","password","confirm_password","isLoading","canSubmit","token","actionSuccess","error","authedWithGoogle","accessToken","AppRoute","lobbyName","user","id","score","inHotseat","inLobby","inGame","isHost","players","messages","pickedPlayers","questions","roundOver","round","phase","timer","hotseatOptions","undefined","currentQuestionId","roundOptions","numOfRounds","init","canAnswer","displayAnswer","combineReducers","auth","state","action","type","payload","prop","value","toRegister","_id","game","push","playerI","findIndex","player","hotseatPlayers","some","newQuestionId","console","log","getPlayers","newQuestions","answers","length","questionIndex","GameSockConfig","props","GameSockClient","newGameOptions","startGame","newRoundOptions","roundNum","setPhase","allQuestions","startHotseat","endGame","newPlayer","playerUpdate","playerListUpdate","map","onHotseatAnswer","secondsLeft","timerUpdate","message","setMessages","msg","mapStateToProps","setGameLoading","initGameSock","dispatch","Constants","manifest","extra","SERVER_URL","rounds","startRound","setTimeout","hostGameAction","body","Math","random","toString","substr","toUpperCase","username","then","Array","isArray","hostGame","connect","joinGame","inputQuestion","time","leaveGame","answerQuestion","playerIndex","baseUrl","setLoading","formUpdate","fetch","method","headers","JSON","stringify","response","json","data","catch","err","login","loginWithThirdParty","provider","success","userName","logout","credentials","signOutUrl","WEB_GOOGLE_CLIENT_ID","LogoutWithGoogle","responseGoogle","res","setState","View","clientId","onSuccess","this","onFailure","buttonText","Text","Component","ButtonInput","text","loading","icon","ButtonProps","accessoryRight","size","status","disabled","styles","require","SafeAreaView","style","onPress","AlertTriangleIcon","EyeIcon","EyeOffIcon","FormInput","inputProps","formContext","useFormikContext","errors","fieldProps","captionIcon","caption","onChangeText","handleChange","LoginWithGoogle","tokenId","cookiePolicy","LoginWithApple","signInWithAppleMobile","a","async","AppleAuthentication","requestedScopes","FULL_NAME","EMAIL","result","fullName","givenName","familyName","identityToken","authorizationCode","Platform","OS","buttonType","SIGN_IN","buttonStyle","BLACK","cornerRadius","SignInSchema","SignInData","Yup","shape","min","required","ModalHeader","category","actions","React","useState","passwordVisible","setPasswordVisible","onPasswordIconPress","renderPasswordIcon","IconComponent","navigation","navigate","HOME","initialValues","validationSchema","onSubmit","values","submit","isSubmitting","setSubmitting","Fragment","placeholder","keyboardType","autoCapitalize","secureTextEntry","appearance","isValid","isValidating","handleSubmit","SIGN_UP","SignUpSchema","SignUpData","password_confirm","oneOf","autoCorrect","SignoutScreen","SignInScreen","RegisterScreen","HostScreen","SIGN_OUT","JoinLobbySchema","JoinLobbyData","max","gameActions","ModalHeaderLobby","lobbyCode","isLeaderboard","LoadingComponent","renderItemIcon","gameIsFinished","fill","sort","b","readyToPlay","renderItem","item","accessoryLeft","GAME","PickedPlayers","canSelectAnswer","onSelectPlayer","i","renderTextTitle","isPlayer","key","QuestionSchema","QuestionInputData","matches","objects","verbs","shuffleQuestion","randFromAr","array","floor","renderShuffleIcon","numQuestions","playerId","setValues","JoinScreen","LobbyScreen","GameScreen","setServerHasQuestions","notEnoughQuestions","setNotEnoughQuestions","useEffect","val","onRequestQuestions","oldBool","userIsInHotseat","answer","gamePhaseController","Stack","createStackNavigator","AuthNavigator","Navigator","headerMode","screenOptions","animationEnabled","Screen","HOST","component","settingsIcon","settingsCog","DEVINFO","AUTH","field","version","Home","DevInfoScreen","MainNavigator","main","GameNavigator","LOBBY","JOIN","AppNavigator","mode","store","createStore","reducers","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","f","icons","EvaIconsPack","eva","theme","NavigationContainer","navigator","addEventListener","serviceWorker","register","scope","info","default","module","exports","fileName","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve"],"mappings":"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AAK,QACLO,QAAS,kBAAMwG,EAAeC,KAE7BtN,EAAOlD,MAGV,kBAAC,QAAD,CACE8J,MAAO,CACLH,GAAO3K,cACD,IAANwR,EAAU7G,GAAO1K,UAAY0K,GAAOzK,YAEtCkP,WAAW,QAEVlL,EAAOlD,KAPV,IAOiB0Q,EAAW,QAAU,KAM1C,kBAAChI,GAAA,EAAD,CAAMoB,MAAOH,GAAO/K,aAAc+R,IAAKH,GAErC,kBAAC,QAAD,CACE1G,MAAO,CACLH,GAAO9K,iBACD,IAAN2R,EAAU7G,GAAO7K,SAAW6K,GAAO5K,YAErCgL,QAAS,kBAAMwG,EAAeC,KAE9B,kBAAC,QAAD,CAAM1G,MAAOH,GAAO1O,OAAQiI,EAAOlD,OAGrC,kBAAC,QAAD,CACE8J,MAAO,CACLH,GAAO3K,cACD,IAANwR,EAAU7G,GAAO1K,UAAY0K,GAAOzK,YAEtCkP,WAAW,QAEVlL,EAAOlD,KAPV,IAOiB0Q,EAAW,QAAU,WChIvCE,IAdb,WAEE,WACWpR,GAAwB,kBAAxBA,gBAHb,2CAQI,OAAO,IAAIqR,EACT,4BATN,GAc8BtE,OAAaC,MAAM,CAC7ChN,cAAe+M,OAAauE,QAAQ,wBAAyB,CAAE/L,QAAS,mDAAsD2H,SAAS,2BCArIqE,GAAU,CACd,qBACA,iBACA,sBACA,UACA,SACA,kBACA,cACA,kBACA,MACA,OACA,YACA,gBACA,kBACA,SACA,aACA,iBACA,kBACA,wBACA,gBACA,kBACA,kBACA,iBACA,sBACA,kBACA,qBACA,OACA,MACA,qBACA,eACA,iBACA,iBACA,QACA,WACA,QACA,eACA,SACA,eACA,eACA,cACA,uBACA,SACA,cACA,MACA,OACA,sBACA,MACA,QACA,UACA,kBACA,YACA,iBACA,QACA,aACA,WACA,uBACA,aACA,aACA,MACA,aACA,aACA,cACA,OACA,UACA,SACA,aACA,MACA,aACA,OACA,SACA,cACA,UACA,gBACA,OACA,eACA,OACA,aACA,aACA,WACA,OACA,SACA,aACA,eACA,UACA,QACA,aACA,eACA,aACA,YACA,SACA,UACA,WACA,oBACA,SACA,YACA,SACA,QACA,OACA,eACA,aACA,uBACA,iBACA,gBACA,MACA,WACA,WACA,gBACA,QACA,aACA,gBACA,QACA,gBACA,aACA,UACA,OACA,OACA,WACA,SACA,SACA,gBACA,aACA,OACA,SACA,eACA,YACA,QACA,MACA,YACA,gBACA,UACA,SACA,WACA,UACA,QACA,gBACA,uCACA,iBACA,kBACA,aACA,qBACA,eACA,mBACA,kBACA,oBACA,2BACA,wBACA,yBACA,mBACA,gBACA,qBACA,wBACA,QACA,QACA,QACA,iBACA,iBACA,MACA,gBACA,gBACA,UACA,QACA,cACA,gBACA,eACA,SACA,WACA,eACA,gBACA,cACA,cACA,aACA,gBACA,QACA,YACA,iBACA,SACA,QACA,MACA,SACA,QACA,OACA,oBACA,uBACA,mBACA,uBACA,cACA,OACA,cACA,cACA,aACA,aACA,WACA,cACA,SACA,YACA,QACA,cACA,QACA,cACA,YACA,QACA,UACA,QACA,iBACA,QACA,eACA,YACA,QACA,eACA,SACA,WACA,aACA,UACA,cACA,YACA,cACA,QACA,UACA,eACA,SACA,QACA,WACA,aACA,cACA,mBACA,eACA,cACA,YACA,YACA,QACA,cACA,QACA,UACA,UACA,aACA,cACA,gBACA,cACA,UACA,SACA,QACA,aACA,aACA,WACA,SACA,oBACA,SACA,aACA,aACA,aACA,YACA,QACA,UACA,YACA,cACA,UACA,YACA,OACA,SACA,mBACA,mBACA,SACA,KACA,OACA,SACA,YACA,kBACA,QACA,eACA,eACA,QACA,UACA,SACA,aACA,mBACA,eACA,cACA,SACA,aACA,QACA,UAMIC,GAAQ,CACZ,SACA,MACA,SACA,QACA,SACA,SACA,QACA,QACA,QACA,MACA,SACA,SACA,UACA,SACA,UACA,QACA,OACA,OACA,UACA,MACA,OACA,OACA,MACA,QACA,SACA,OACA,MACA,SACA,SACA,SACA,QACA,QACA,QACA,OACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,SACA,SACA,QACA,QACA,QACA,QACA,OACA,QACA,OACA,QACA,OACA,QACA,OACA,UACA,SACA,OACA,UACA,cACA,UACA,UACA,WACA,WACA,cACA,UACA,UACA,UACA,UACA,QACA,UACA,SACA,WACA,QACA,UACA,UACA,SACA,WACA,SACA,OACA,OACA,QACA,QACA,OACA,OACA,OACA,OACA,MACA,MACA,OACA,QACA,QACA,QACA,OACA,SACA,OACA,SACA,OACA,OACA,OACA,QACA,SACA,SACA,OACA,OACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,OACA,QACA,MACA,MACA,OACA,QACA,WACA,SACA,UACA,UACA,UACA,UACA,WACA,WACA,YACA,YACA,YACA,SACA,SACA,WACA,QACA,QACA,UACA,OACA,MACA,UACA,OACA,OACA,SACA,QACA,OACA,QACA,QACA,OACA,SACA,UACA,SACA,OACA,WACA,OACA,UACA,OACA,OACA,OACA,MACA,MACA,WACA,SACA,OACA,OACA,OACA,OACA,MACA,OACA,SACA,SACA,OACA,SACA,OACA,QACA,OACA,OACA,UACA,SACA,QACA,OACA,QACA,OACA,QACA,OACA,QACA,OACA,SACA,OACA,WACA,OACA,SACA,UACA,SACA,UACA,UACA,WACA,QACA,UACA,UACA,QACA,QACA,UACA,UACA,UACA,UACA,UACA,OACA,OACA,QACA,OACA,UACA,OACA,UACA,OACA,SACA,WACA,SACA,SACA,SACA,SACA,UACA,QACA,SACA,YACA,UACA,SACA,SACA,SACA,QACA,QACA,OACA,MACA,OACA,OACA,MACA,MACA,UACA,OACA,MACA,QACA,UACA,QACA,SACA,SACA,UACA,SACA,QACA,WACA,QACA,OACA,QACA,QACA,QACA,SACA,SACA,QACA,QACA,OACA,OACA,SACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,OACA,QACA,SACA,SACA,SACA,SACA,UACA,QACA,QACA,QACA,QACA,UACA,UACA,WACA,WACA,UACA,UACA,SACA,OACA,OA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","file":"static/js/app.7d4c0bed.chunk.js","sourcesContent":["/*\r\n * File: index.ts\r\n * Project: frontend\r\n * Version: 1.0.0\r\n * File Created: Monday, 11th May 2020 11:36:00 am\r\n * Author: Eoan O'Dea - eoan@wspace.ie\r\n * ---------------\r\n * File Description: Theme controller for the light theme\r\n * Last Modified: Saturday, 16th May 2020 8:58:07 pm\r\n * Modified By: Eoan O'Dea - eoan@wspace.ie\r\n * ---------------\r\n * Copyright 2020 - WebSpace\r\n */\r\n\r\n/**\r\n * Import theme modules that are allowed to be accessed\r\n */\r\nimport App from './App';\r\nimport Form from './Form'\r\nimport Game from './Game'\r\nimport Header from './Header'\r\n\r\n/**\r\n * Export these modules to the rest of the application\r\n */\r\nexport default {\r\n  App,\r\n  Form,\r\n  Game,\r\n  Header\r\n};\r\n","import {StyleSheet} from 'react-native';\r\n\r\n/**\r\n * App Stylesheet for the light theme\r\n */\r\nexport default StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingVertical: 16,\r\n    paddingHorizontal: 16,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: '#161F26',\r\n    position: 'relative'\r\n  },\r\n\r\n  title: {\r\n    // paddingHorizontal: 16,\r\n    // paddingTop: '37%',\r\n    // paddingBottom: 82,\r\n    color: '#D7D98B',\r\n    fontSize: 45,\r\n    fontWeight: '400',\r\n    textAlign: 'center',\r\n  },\r\n\r\n  titleRed: {\r\n    // paddingHorizontal: 16,\r\n    paddingBottom: 8,\r\n    color: '#AD0D4B',\r\n    fontSize: 45,\r\n    fontWeight: '900',\r\n    textAlign: 'center',\r\n  },\r\n\r\n  subTitle: {\r\n    textAlign: 'center',\r\n  },\r\n\r\n  itemContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n\r\n  formButton:{\r\n    marginVertical: 10,\r\n    paddingHorizontal: 120,\r\n    paddingVertical: 50,\r\n    backgroundColor: '#AD0D4B',\r\n    borderWidth: 0,\r\n    shadowColor: 'black',\r\n    shadowOpacity: 0.5,\r\n    shadowRadius: 5,\r\n    shadowOffset: { width: 2, height: 2},\r\n    borderRadius: 5,\r\n    // width: '80%',\r\n    // marginHorizontal: 'auto'\r\n  },\r\n\r\n  signOutAndCogContainer: {\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: '95%',\r\n    margin: 'auto',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between'\r\n  },\r\n\r\n  signOutBtn: {\r\n    backgroundColor: '#AD0D4B',\r\n    borderWidth: 0,\r\n  }\r\n});\r\n","import { StyleSheet } from \"react-native\";\r\n\r\n/**\r\n * Form Stylesheet for the light theme\r\n */\r\nexport default StyleSheet.create({\r\n  formContainer: {\r\n    flex: 1,\r\n    paddingVertical: 16,\r\n    paddingHorizontal: 16,\r\n    backgroundColor: '#AD0D4B',\r\n    position: 'relative',\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  formContainerReg: {\r\n    flex: 1,\r\n    paddingVertical: 16,\r\n    paddingHorizontal: 16,\r\n    backgroundColor: '#D14688',\r\n    position: 'relative',\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  homeBtn: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-end',\r\n  },\r\n\r\n  resetPasswordContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-end',\r\n  },\r\n\r\n  formControl: {\r\n    marginVertical: 4,\r\n    backgroundColor: '#7B0D37',\r\n    borderColor: '#ffffff00',\r\n    fontSize: 16,\r\n  },\r\n\r\n  formControlReg: {\r\n    marginVertical: 4,\r\n    backgroundColor: '#AB2364',\r\n    borderColor: '#ffffff00',\r\n    fontSize: 16,\r\n  },\r\n\r\n  submitButton: {\r\n    marginVertical: 24,\r\n    paddingVertical: 20,\r\n    backgroundColor: '#00B0FF',\r\n    borderWidth: 0,\r\n    shadowColor: 'black',\r\n    shadowOpacity: 0.5,\r\n    shadowRadius: 5,\r\n    shadowOffset: { width: 2, height: 2},\r\n    borderRadius: 5,\r\n  },\r\n\r\n  noAccountButton: {\r\n    // alignSelf: 'center',\r\n    marginVertical: 10,\r\n    paddingVertical: 20,\r\n    backgroundColor: '#D14688',\r\n    borderWidth: 0,\r\n    shadowColor: 'black',\r\n    shadowOpacity: 0.5,\r\n    shadowRadius: 5,\r\n    shadowOffset: { width: 2, height: 2},\r\n    borderRadius: 5,\r\n  },\r\n\r\n  haveAccountButton: {\r\n    // alignSelf: 'center',\r\n    marginVertical: 10,\r\n    paddingVertical: 20,\r\n    backgroundColor: '#AD0D4B',\r\n    borderWidth: 0,\r\n    shadowColor: 'black',\r\n    shadowOpacity: 0.5,\r\n    shadowRadius: 5,\r\n    shadowOffset: { width: 2, height: 2},\r\n    borderRadius: 5,\r\n  },\r\n\r\n  thirdPartyButtonContainer: {\r\n    alignItems: \"center\",\r\n    paddingVertical: 20,\r\n    borderWidth: 0,\r\n    shadowColor: 'black',\r\n    shadowOpacity: 0.5,\r\n    shadowRadius: 5,\r\n    shadowOffset: { width: 2, height: 2},\r\n    borderRadius: 5,\r\n  },\r\n\r\n  formButton:{\r\n    marginVertical: 12\r\n  },\r\n\r\n  customHrTag: {\r\n    borderWidth: 0.5,\r\n    borderColor: '#D14688',\r\n    marginTop: 25,\r\n    marginBottom: 50,\r\n  },\r\n\r\n  customHrTagReg: {\r\n    borderWidth: 0.5,\r\n    borderColor: '#AD0D4B',\r\n    marginTop: 25,\r\n    marginBottom: 35,\r\n  }\r\n});\r\n","import { StyleSheet } from \"react-native\";\r\n\r\n/**\r\n * App Stylesheet for the light theme\r\n */\r\nexport default StyleSheet.create({\r\n  /**\r\n   * ------GLOBAL STYLING FOR GAME PAGES------ \r\n   */\r\n  container: {\r\n    flex: 1,\r\n    paddingTop: 32,\r\n    // paddingVertical: 16,\r\n    // paddingHorizontal: 16,\r\n    backgroundColor: \"#161F26\",\r\n  },\r\n\r\n  gameLoadingSpinner: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  loadingSpinner: {\r\n    marginVertical: 20,\r\n  },\r\n\r\n  /**\r\n   * ------LOBBY (GLOBAL)------\r\n   */\r\n  listContainer: {\r\n    paddingHorizontal: 16,\r\n    backgroundColor: \"#161F26\",\r\n  },\r\n\r\n  listItem: {\r\n    paddingVertical: 20,\r\n    fontSize: 30,\r\n    backgroundColor: \"#161F26\",\r\n  },\r\n\r\n  /**\r\n   * ------LOBBY (HOST)------\r\n   */\r\n  submitButton: {\r\n    height: 150,\r\n    alignSelf: \"stretch\",\r\n    borderTopStartRadius: 25,\r\n    borderTopEndRadius: 25,\r\n    borderRadius: 0.01,\r\n    borderColor: \"#ffffff00\",\r\n  },\r\n\r\n  /**\r\n   * ------LOBBY (JOIN)------\r\n   */\r\n  submitButtonJoined: {\r\n    alignSelf: \"flex-end\",\r\n    position: \"absolute\",\r\n    bottom: \"10%\",\r\n    borderTopStartRadius: 0.001,\r\n    borderBottomStartRadius: 0.001,\r\n    borderRadius: 0.001,\r\n    borderColor: \"#ffffff00\",\r\n  },\r\n\r\n  /**\r\n   * ------IN-GAME (GLOBAL)------\r\n   */\r\n  title: {\r\n    paddingHorizontal: 16,\r\n    fontSize: 28,\r\n    fontWeight: \"300\",\r\n    textAlign: \"center\",\r\n    marginBottom: 20,\r\n  },\r\n\r\n  titleChosenYellow: {\r\n    fontSize: 36,\r\n    fontWeight: \"300\",\r\n    textAlign: \"center\",\r\n    marginBottom: 20,\r\n    color: \"#D7D98B\",\r\n  },\r\n\r\n  titleChosenRed: {\r\n    fontSize: 36,\r\n    fontWeight: \"300\",\r\n    textAlign: \"center\",\r\n    marginBottom: 20,\r\n    color: \"#AD0D4B\",\r\n  },\r\n\r\n  pleadTheFifth: {\r\n    fontSize: 32,\r\n    fontWeight: \"400\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    position: \"relative\",\r\n    marginVertical: 30,\r\n  },\r\n\r\n  pleadAlignLeft: {\r\n    alignSelf: \"flex-start\",\r\n    // position: \"absolute\",\r\n    // bottom: \"10%\",\r\n    borderTopEndRadius: 0.001,\r\n    borderBottomEndRadius: 0.001,\r\n    borderRadius: 0.001,\r\n    backgroundColor: \"#AD0D4B\",\r\n    borderColor: \"#ffffff00\",\r\n  },\r\n\r\n  pleadAlignRight: {\r\n    alignSelf: \"flex-end\",\r\n    // position: \"absolute\",\r\n    // bottom: \"10%\",\r\n    textAlign: \"right\",\r\n    borderTopStartRadius: 0.001,\r\n    borderBottomStartRadius: 0.001,\r\n    borderRadius: 0.001,\r\n    backgroundColor: \"#9F37DE\",\r\n    borderColor: \"#ffffff00\",\r\n  },\r\n\r\n  question: {\r\n    fontSize: 28,\r\n    fontWeight: \"300\",\r\n    textAlign: \"center\",\r\n    marginBottom: 30,\r\n  },\r\n\r\n  /**\r\n   * ------IN-GAME (CHOSEN)------\r\n   */\r\n  pickedPlayerContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    borderRadius: 0.01,\r\n  },\r\n\r\n  pickedPlayer: {\r\n    width: \"48%\",\r\n  },\r\n\r\n  pickedPlayerCard: {\r\n    height: 250,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  cardPink: {\r\n    backgroundColor: \"#AD0D4B\",\r\n  },\r\n\r\n  cardPurple: {\r\n    backgroundColor: \"#9F37DE\",\r\n  },\r\n\r\n  belowCardText: {\r\n    marginVertical: 10,\r\n  },\r\n\r\n  alignLeft: {\r\n    color: \"#AD0D4B\",\r\n  },\r\n\r\n  alignRight: {\r\n    color: \"#9F37DE\",\r\n    textAlign: \"right\",\r\n  },\r\n\r\n  /**\r\n   * ------IN-GAME (NOT CHOSEN)------\r\n   */\r\n  titleNotChosen: {\r\n    fontSize: 18,\r\n    textAlign: \"center\",\r\n    fontWeight: 300,\r\n    marginVertical: 30,\r\n    color: \"#D7D98B\"\r\n  },\r\n\r\n  inputTitle: {\r\n    marginVertical: 10,\r\n  },\r\n\r\n  inputContainer: {\r\n    padding: 10,\r\n    // alignSelf: 'stretch',\r\n    textAlign: 'center',\r\n    // backgroundColor: '#161F26',\r\n    backgroundColor: '##ffffff00',\r\n  },\r\n\r\n  questionInputContainer: {\r\n    // flex: 1,\r\n    // height:48,\r\n    padding: 10,\r\n    flexDirection: 'row',\r\n    // width: '100%',\r\n    // backgroundColor: '#161F26',\r\n    backgroundColor: '##ffffff00',\r\n  },\r\n\r\n  questionInput: {\r\n    flex: 2,\r\n    height: '100%',\r\n    overflow: 'hidden',\r\n    backgroundColor: '#7B0D37',\r\n    borderColor: '#ffffff00',\r\n  },\r\n\r\n  questionInputButton: {\r\n    // maxHeight: '100%',\r\n    borderRadius: 50,\r\n    marginHorizontal: 10,\r\n    height: 50,\r\n    width: 50\r\n  },\r\n});\r\n","import {StyleSheet} from 'react-native';\r\n\r\n/**\r\n * App Stylesheet for the light theme\r\n */\r\nexport default StyleSheet.create({\r\n  container: {\r\n    paddingVertical: 32,\r\n    paddingBottom: 16,\r\n    // paddingHorizontal: 16,\r\n    flexDirection: \"column\",\r\n    justifyContent: 'space-between'\r\n  },\r\n\r\n  title: {\r\n    // paddingVertical: 32,\r\n    paddingTop: 32,\r\n    color: 'white',\r\n    fontWeight: '200',\r\n    textAlign: 'center',\r\n    fontSize: 18,\r\n  },\r\n\r\n  codeTitle: {\r\n    fontWeight: '400',\r\n    textAlign: 'center',\r\n    fontSize: 45,\r\n    color: '#D7D98B',\r\n  },\r\n\r\n  leaderboardTitle: {\r\n    fontSize: 36,\r\n    fontWeight: '200',\r\n    color: '#FFF',\r\n  },\r\n\r\n  button: {\r\n    // alignItems: \"flex-end\",\r\n    // marginLeft: 'auto'\r\n    // maxWidth: '30%',\r\n    alignSelf: 'flex-start',\r\n    justifyContent: 'flex-start',\r\n    // border: 0,\r\n    // marginLeft: 50,\r\n  }\r\n});\r\n","/*\r\n * File: AuthReducer.ts\r\n * Project: frontend\r\n * Version: 1.0.0\r\n * File Created: Thursday, 14th May 2020 3:12:41 pm\r\n * Author: Eoan O'Dea - eoan@wspace.ie\r\n * ---------------\r\n * File Description: Reducer for all authentication related requests and actions\r\n * Last Modified: Saturday, 16th May 2020 8:56:51 pm\r\n * Modified By: Eoan O'Dea - eoan@wspace.ie\r\n * ---------------\r\n * Copyright 2020 - WebSpace\r\n */\r\n\r\nimport { IAction, IAuthState } from \"./interfaces\";\r\n\r\n/**\r\n * Initial state for redux\r\n * Stores info about the\r\n * registering / logged in user\r\n */\r\nconst initialState: IAuthState = {\r\n  name: \"\",\r\n  email: \"test@test.ie\",\r\n  password: \"testtest\",\r\n  confirm_password: \"\",\r\n  isLoading: false,\r\n  canSubmit: false,\r\n  token: \"\",\r\n  actionSuccess: false,\r\n  error: \"\",\r\n  authedWithGoogle: false,\r\n  accessToken: \"\"\r\n};\r\n\r\n/**\r\n * Reducers for authentication\r\n *\r\n * @param {InitialState, IAction} initialState, action\r\n */\r\nexport default (state = initialState, action: IAction) => {\r\n  switch (action.type) {\r\n    /**\r\n     * Toggles the toRegister boolean\r\n     * Determinds whether to display the\r\n     * login or register component\r\n     */\r\n    case \"IS_LOADING\":\r\n      return {\r\n        ...state,\r\n        isLoading: !state.isLoading,\r\n      };\r\n\r\n    /**\r\n     * Handles form on change events for\r\n     * login & register forms\r\n     */\r\n    case \"FORM_UPDATE\":\r\n      return {\r\n        ...state,\r\n        [action.payload.prop]: action.payload.value,\r\n      };\r\n\r\n    /**\r\n     * When a user has\r\n     * successfully registered\r\n     */\r\n    case \"USER_REGISTERED\":\r\n      return {\r\n        ...state,\r\n        toRegister: false,\r\n        email: action.payload.user.email,\r\n        name: \"\",\r\n        password: \"\",\r\n        confirm_password: \"\",\r\n        actionSuccess: true,\r\n        error: \"\",\r\n        isLoading: false\r\n      };\r\n\r\n    /**\r\n     * When a API request responds with\r\n     * an error, store it in the state\r\n     */\r\n    case \"REQUEST_ERROR\":\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n        isLoading: false\r\n      };\r\n\r\n    /**\r\n     * When a user has successfully\r\n     * logged in\r\n     */\r\n    case \"USER_LOGGED_IN\":\r\n      return {\r\n        ...state,\r\n        token: action.payload.token,\r\n        name: action.payload.user!.name,\r\n        email: action.payload.user!.email,\r\n        _id: action.payload.user!._id,\r\n        password: \"\",\r\n        error: \"\",\r\n        isLoading: false\r\n      };\r\n\r\n    /**\r\n     * When a user has successfully\r\n     * logged in with Google\r\n     */\r\n    case \"USER_LOGGED_IN_GOOGLE\":\r\n      return {\r\n        ...state,\r\n        token: action.payload.token,\r\n        name: action.payload.user!.name,\r\n        email: action.payload.user!.email,\r\n        _id: action.payload.user!._id,\r\n        password: \"\",\r\n        error: \"\",\r\n        authedWithGoogle: true,\r\n        isLoading: false\r\n      };\r\n\r\n    /**\r\n     * When a user has successfully\r\n     * logged in with Google on either iOS\r\n     * or android\r\n     */\r\n    case \"USER_LOGGED_IN_GOOGLE_MOBILE\":\r\n      return {\r\n        ...state,\r\n        token: action.payload.token,\r\n        name: action.payload.user!.name,\r\n        email: action.payload.user!.email,\r\n        _id: action.payload.user!._id,\r\n        accessToken: action.payload.user!.accessToken,\r\n        password: \"\",\r\n        error: \"\",\r\n        authedWithGoogle: true,\r\n        isLoading: false\r\n      };\r\n\r\n    /**\r\n     * When a user has logged out\r\n     */\r\n    case \"USER_LOGGED_OUT\":\r\n      return {\r\n        ...state,\r\n        token: \"\",\r\n        _id: \"\",\r\n        name: \"\",\r\n        email: \"\",\r\n        accessToken: \"\",\r\n        isLoading: false\r\n      };\r\n\r\n    /**\r\n     * The default state reducer\r\n     */\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","/*\r\n * File: GameReducer.ts\r\n * Project: frontend\r\n * Version: 1.0.0\r\n * File Created: Thursday, 4th June 2020 3:56:51 pm\r\n * Author: Eoan O'Dea - eoan@wspace.ie\r\n * ---------------\r\n * File Description:\r\n * Last Modified: Thursday, 4th June 2020 3:57:44 pm\r\n * Modified By: Eoan O'Dea - eoan@wspace.ie\r\n * ---------------\r\n * Copyright 2020 - WebSpace\r\n */\r\n\r\nimport { IGameState, IPlayer } from \"./interfaces\";\r\nimport { RoundOptions, Question } from \"@rossmacd/gamesock-client\";\r\nimport { getPlayers } from '@rossmacd/gamesock-client';\r\n\r\ninterface IGameAction {\r\n  type: string;\r\n  payload: any;\r\n}\r\n\r\n/**\r\n * Initial state for redux\r\n * Stores info about the\r\n * lobby name and current user\r\n */\r\nconst initialState: IGameState = {\r\n  lobbyName: \"\",\r\n  user: {\r\n    id: \"\",\r\n    name: \"\",\r\n    score: 0,\r\n    inHotseat: false,\r\n  },\r\n  inLobby: false,\r\n  inGame: false,\r\n  isHost: false,\r\n  players: [],\r\n  isLoading: false,\r\n  error: \"\",\r\n  messages: [],\r\n  pickedPlayers: [],\r\n  questionInput: \"Who's more likely to\",\r\n  questions: [],\r\n  roundOver: false,\r\n  round: 0,\r\n  phase: \"\",\r\n  timer: 0,\r\n  hotseatOptions: undefined,\r\n  currentQuestionId: 0,\r\n  roundOptions: undefined,\r\n  numOfRounds: 3,\r\n  init: false,\r\n  canAnswer: false,\r\n  displayAnswer: false,\r\n};\r\n\r\n/**\r\n * Reducers for authentication\r\n *\r\n * @param {InitialState, IAction} initialState, action\r\n */\r\nexport default (state = initialState, action: IGameAction) => {\r\n  switch (action.type) {\r\n    case \"INITIALISE_GAMESOCK\":\r\n      return {\r\n        ...state,\r\n        init: true,\r\n      };\r\n    /**\r\n     * Toggles the toRegister boolean\r\n     * Determinds whether to display the\r\n     * login or register component\r\n     */\r\n    case \"IS_LOADING_GAME\":\r\n      return {\r\n        ...state,\r\n        isLoading: !state.isLoading,\r\n      };\r\n\r\n    /**\r\n     * Update the messages array\r\n     * with messages from the gamesock\r\n     * server\r\n     */\r\n    case \"SET_MESSAGES\":\r\n      const messages = state.messages;\r\n      messages.push(action.payload as string);\r\n\r\n      return {\r\n        ...state,\r\n        messages: messages,\r\n      };\r\n\r\n    /**\r\n     * Update the list of players\r\n     */\r\n    case \"PLAYER_LIST_UPDATE\":\r\n      return {\r\n        ...state,\r\n        players: [...action.payload],\r\n      };\r\n    /**\r\n     * Update a single player\r\n     */\r\n    case \"PLAYER_SINGLE_UPDATE\":\r\n      let players = state.players;\r\n      const playerI = state.players.findIndex(\r\n        (player: IPlayer) => player.id === action.payload.id\r\n      );\r\n\r\n      players[playerI] = action.payload as IPlayer;\r\n\r\n      return {\r\n        ...state,\r\n        players: [...players],\r\n      };\r\n    /**\r\n     * When a API request responds with\r\n     * an error, store it in the state\r\n     */\r\n    // case \"REQUEST_ERROR\":\r\n    //   return {\r\n    //     ...state,\r\n    //     error: action.payload.error,\r\n    //     isLoading: false\r\n    //   };\r\n\r\n    case \"HOST_GAME\":\r\n      return {\r\n        ...state,\r\n        lobbyName: action.payload.lobbyName,\r\n        user: action.payload.user,\r\n        inLobby: true,\r\n        isHost: true,\r\n        isLoading: false,\r\n      };\r\n\r\n    case \"JOIN_GAME\":\r\n      return {\r\n        ...state,\r\n        lobbyName: action.payload.lobbyName,\r\n        user: action.payload.user,\r\n        inLobby: true,\r\n        isLoading: false,\r\n      };\r\n\r\n    case \"LEAVE_GAME\":\r\n      return {\r\n        ...state,\r\n        lobbyName: \"\",\r\n        inGame: false,\r\n        inLobby: false,\r\n        isHost: false,\r\n        isLoading: false,\r\n      };\r\n    case \"START_GAME\":\r\n      return {\r\n        ...state,\r\n        numOfRounds: action.payload,\r\n      };\r\n\r\n    case \"START_ROUND\":\r\n      const roundOptions = action.payload as RoundOptions;\r\n      let user = state.user;\r\n      if (\r\n        roundOptions.hotseatPlayers.some(\r\n          (player: IPlayer) => player.id === user.id\r\n        )\r\n      ) {\r\n        user.inHotseat = true;\r\n      } else user.inHotseat = false;\r\n\r\n      return {\r\n        ...state,\r\n        inGame: true,\r\n        isLoading: false,\r\n        questions: [],\r\n        user: user,\r\n        roundOptions: roundOptions,\r\n      };\r\n\r\n    case \"INPUT_QUESTION\":\r\n      const questions = state.questions;\r\n\r\n      questions.push(action.payload as Question);\r\n\r\n      return {\r\n        ...state,\r\n        questionInput: \"Who's more likely to\",\r\n        questions: questions,\r\n        isLoading: false,\r\n      };\r\n\r\n    case \"TIMER_UPDATE\":\r\n      if (\r\n        action.payload === 0 &&\r\n        state.phase === \"Hotseat\" &&\r\n        state.timer !== 0\r\n      ) {\r\n        // console.log(\"shifting questions\", state.questions);\r\n        // const shiftedQuestions = state.questions.shift()\r\n        // console.log('done', shiftedQuestions)\r\n        // state.questions.shift();\r\n        const newQuestionId = state.currentQuestionId+=1 \r\n        console.log(\"affetare questions\", state.questions);\r\n        return {\r\n          ...state,\r\n          timer: action.payload,\r\n          // questions: [...state.questions],\r\n          currentQuestionId: newQuestionId,\r\n          canAnswer: true,\r\n          displayAnswer: true,\r\n        };\r\n      }\r\n      return {\r\n        ...state,\r\n        timer: action.payload,\r\n      };\r\n    case \"SET_PHASE\":\r\n      if (action.payload === \"Round Ended\") {\r\n        \r\n        if(state.isHost) {\r\n          getPlayers(state.lobbyName)\r\n          console.log('Updating players for score')\r\n        }\r\n        return {\r\n          ...state,\r\n          phase: action.payload,\r\n          roundOver: true,\r\n          currentQuestionId: 0,\r\n          questions: [],\r\n          inGame: false,\r\n        };\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        phase: action.payload,\r\n      };\r\n\r\n    case \"START_HOTSEAT\":\r\n      // const allQuestions =  as Question[]\r\n      // const hotseatOptions =  as HotseatOptions\r\n      console.log(\"start hotseat reducer\", action.payload);\r\n      return {\r\n        ...state,\r\n        questions: [...action.payload.questions],\r\n        hotseatOptions: action.payload.hotseatOptions,\r\n        canAnswer: true,\r\n      };\r\n    case \"ON_HOTSEAT_ANSWER\":\r\n      let newQuestions = state.questions;\r\n      const answers =\r\n        action.payload.answers.length > 0\r\n          ? action.payload.answers\r\n          : [null, null];\r\n      console.log(\r\n        \"finding question and inserting answers!\",\r\n        newQuestions,\r\n        action.payload.questionIndex,\r\n        answers\r\n      );\r\n      newQuestions[action.payload.questionIndex].answers = [...answers];\r\n\r\n      return {\r\n        ...state,\r\n        questions: [...newQuestions],\r\n        displayAnswer: true,\r\n      };\r\n    case \"ON_NEXT_QUESTION\":\r\n      return {\r\n        ...state,\r\n        displayAnswer: false,\r\n      };\r\n    // case \"SET_CURRENT_QUESTION\":\r\n    //   return {\r\n    //     ...state,\r\n    //     currentQuestionId: state.currentQuestionId += 1,\r\n    //     displayAnswer: false,\r\n    //     canAnswer: true,\r\n    //   };\r\n\r\n    case \"ANSWER_QUESTION\":\r\n      return {\r\n        ...state,\r\n        canAnswer: false,\r\n      };\r\n\r\n    case \"END_GAME\":\r\n      // if(state.isHost) {\r\n      //   getPlayers(state.lobbyName)\r\n      //   console.log('Updating players for score')\r\n      // }\r\n      return {\r\n        ...state,\r\n        roundOver: true,\r\n        inGame: false,\r\n      };\r\n    /**\r\n     * The default state reducer\r\n     */\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export enum AppRoute {\r\n    AUTH = 'Auth',\r\n    SIGN_IN = 'Sign In',\r\n    SIGN_UP = 'Sign Up',\r\n    SIGN_OUT = 'Sign Out',\r\n    HOME = 'Home',\r\n    GAME = 'Game',\r\n    HOST = 'Host',\r\n    JOIN = 'Join',\r\n    LOBBY = 'Lobby',\r\n    IN_GAME = 'In Game',\r\n    END_GAME = 'End Game',\r\n    SETTINGS = 'Settings',\r\n    DEVINFO = \"Dev info\"\r\n}","/**\r\n * Import modules which can be accessed\r\n */\r\nimport AuthReducer from './AuthReducer'\r\nimport GameReducer from './GameReducer'\r\nimport { combineReducers } from 'redux'\r\n\r\n /**\r\n * Combine and Export these modules to the rest of the application\r\n */\r\nexport default combineReducers({auth: AuthReducer, game: GameReducer })","import * as GameSockClient from '@rossmacd/gamesock-client'\r\nimport { setPhase, endGame, startGame, startHotseat, playerListUpdate, timerUpdate, onHotseatAnswer, setMessages, playerUpdate } from './game'\r\nimport { IInitialState } from '../reducers/interfaces'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nexport interface GameOptions{\r\n    // The total nuber of rounds\r\n    rounds:number;\r\n}\r\nexport interface HotseatOptions{\r\n    // The time to answer the question\r\n    tta:number;\r\n}\r\n\r\n/**\r\n * Interface props for the\r\n *  gamesock config\r\n */\r\ninterface IProps {\r\n    questions: GameSockClient.Question[]\r\n}\r\n\r\n\r\nconsole.log('running! socket')\r\n/**\r\n * Set the functions for the Gamesock library\r\n * \r\n * \r\n */\r\nconst GameSockConfig =(props: IProps)=>{\r\n    console.log('running! check 2 socket')\r\n\r\n    // GameSockClient.setup(Constants.manifest.extra.SERVER_URL, `${Constants.manifest.extra.SERVER_URL}/timesync`)\r\n\r\n    GameSockClient.onStartGame((newGameOptions:GameOptions)=>{\r\n        startGame(newGameOptions)\r\n    })\r\n\r\n    GameSockClient.onStartRound((newRoundOptions)=>{\r\n    if(newRoundOptions.roundNum === 1) {setPhase('Starting Game')}\r\n      else {setPhase('Starting Round')}\r\n    })\r\n\r\n    GameSockClient.onStartHotseat((allQuestions,hotseatOptions)=>{\r\n        setPhase('Hotseat')\r\n        startHotseat(allQuestions,hotseatOptions)\r\n    })\r\n\r\n    GameSockClient.onRoundEnd(() => { \r\n        setPhase('Round Ended')\r\n        endGame()\r\n      })\r\n\r\n      GameSockClient.onSinglePlayerUpdate((newPlayer)=>{\r\n          playerUpdate(newPlayer)\r\n        \r\n      })\r\n\r\n      GameSockClient.onPlayerListUpdate((players)=>{\r\n        playerListUpdate(players)\r\n      })\r\n\r\n      GameSockClient.onRequestQuestions(()=>{\r\n          return props.questions.map(question => question.question);\r\n      })\r\n\r\n    GameSockClient.onHotseatAnswer((questionIndex,answers)=>{\r\n        onHotseatAnswer(questionIndex,answers)\r\n    })\r\n\r\n    GameSockClient.onTimerUpdate((secondsLeft)=>{\r\n        timerUpdate(secondsLeft)\r\n    })\r\n\r\n\r\n    // \r\n    GameSockClient.onMessage((message)=>{\r\n        setMessages(message.msg)\r\n    })\r\n}\r\n// gamesockConfig();\r\n\r\n/**\r\n * Return a list of people from our redux state\r\n *\r\n * @param {*} state\r\n */\r\nconst mapStateToProps = (state: IInitialState): IProps => {\r\n    const { questions } = state.game;\r\n  \r\n    return {\r\n        questions\r\n    };\r\n  };\r\n  \r\n  export const GameSocketConfigExport = () => {connect<IProps>(\r\n    mapStateToProps\r\n  )(GameSockConfig);}\r\n  \r\n\r\n// export default gamesockConfig ","/*\r\n * File: game.ts\r\n * Project: frontend\r\n * Version: 1.0.0\r\n * File Created: Thursday, 4th June 2020 4:11:43 pm\r\n * Author: Eoan O'Dea - eoan@wspace.ie\r\n * ---------------\r\n * File Description: Game related actions in the redux state\r\n * Last Modified: Thursday, 4th June 2020 6:14:09 pm\r\n * Modified By: Eoan O'Dea - eoan@wspace.ie\r\n * ---------------\r\n * Copyright 2020 - WebSpace\r\n */\r\n\r\nimport { IPlayer } from \"../reducers/interfaces\";\r\nimport * as GameSockClient from \"@rossmacd/gamesock-client\";\r\n\r\nimport { GameSocketConfigExport, GameOptions, HotseatOptions } from \"./socket\";\r\nimport Constants from \"expo-constants\";\r\nimport { Dispatch } from \"redux\";\r\n\r\n/**\r\n * Interface for hosting a game\r\n */\r\nexport interface IHostGame {\r\n  username: string;\r\n  token: string;\r\n}\r\n\r\n/**\r\n * Interface for joining a game\r\n */\r\nexport interface IJoinGame {\r\n  username: string;\r\n  lobbyName: string;\r\n}\r\n\r\n/**\r\n * Determinds whether to set\r\n * loading or not\r\n */\r\nexport const setGameLoading = () => {\r\n  return {\r\n    type: \"IS_LOADING_GAME\",\r\n  };\r\n};\r\n\r\n/**\r\n * Messages sent from the gamesock library\r\n */\r\nexport const setMessages = (message: string) => {\r\n  console.log(\"Socket message: \", message);\r\n  return {\r\n    type: \"SET_MESSAGES\",\r\n    payload: message,\r\n  };\r\n};\r\n\r\nexport const initGameSock = () => {\r\n  return (dispatch: Dispatch) => {\r\n    GameSockClient.setup(\r\n      Constants.manifest.extra.SERVER_URL,\r\n      `${Constants.manifest.extra.SERVER_URL}/timesync`\r\n    );\r\n\r\n    GameSockClient.onStartGame((newGameOptions: GameOptions) => {\r\n      console.log(\"starting game\", newGameOptions.rounds);\r\n      startGame(newGameOptions.rounds+=1, dispatch);\r\n    });\r\n\r\n    GameSockClient.onStartRound((newRoundOptions) => {\r\n      if (newRoundOptions.roundNum === 1) {\r\n        setPhase(\"Starting Game\", dispatch);\r\n      } else {\r\n        setPhase(\"Starting Round\", dispatch);\r\n      }\r\n      console.log(\"starting round\");\r\n\r\n      startRound(newRoundOptions, dispatch);\r\n\r\n      setTimeout(() => {\r\n        setPhase(\"Question Gathering\", dispatch);\r\n      }, 2 * 1000);\r\n    });\r\n\r\n    GameSockClient.onStartHotseat((allQuestions, hotseatOptions) => {\r\n      console.log(\"starting hotseat\");\r\n\r\n      setPhase(\"Hotseat\", dispatch);\r\n      startHotseat(allQuestions, hotseatOptions, dispatch);\r\n    });\r\n\r\n    GameSockClient.onRoundEnd(() => {\r\n      console.log(\"ending round\");\r\n\r\n      setPhase(\"Round Ended\", dispatch);\r\n      endGame();\r\n    });\r\n\r\n    GameSockClient.onSinglePlayerUpdate((newPlayer) => {\r\n      console.log(\"single player update\", newPlayer);\r\n\r\n      playerUpdate(newPlayer, dispatch);\r\n    });\r\n\r\n    GameSockClient.onPlayerListUpdate((players) => {\r\n      console.log(\"player list update\", players);\r\n      playerListUpdate(players, dispatch);\r\n    });\r\n\r\n    //   GameSockClient.onRequestQuestions(()=>{\r\n    //       return props.questions.map(question => question.question);\r\n    //   })\r\n\r\n    GameSockClient.onHotseatAnswer((questionIndex, answers) => {\r\n      onHotseatAnswer(questionIndex, answers, dispatch);\r\n    });\r\n\r\n    GameSockClient.onTimerUpdate((secondsLeft) => {\r\n      timerUpdate(secondsLeft, dispatch);\r\n    });\r\n\r\n    GameSockClient.onMessage((message) => {\r\n      setMessages(message.msg);\r\n    });\r\n\r\n    /**\r\n     * @todo add error handling here and hook up to state\r\n     */\r\n    // GameSockClient.onError((error) => {\r\n    //   setError(error)\r\n    // })\r\n\r\n    dispatch({\r\n      type: \"INITIALISE_GAMESOCK\",\r\n    });\r\n  };\r\n};\r\n\r\n/**\r\n * Initilise a lobby as a host from the home page\r\n *\r\n * @param {IHostGame} body\r\n */\r\nexport const hostGameAction = (body: IHostGame) => {\r\n  return (dispatch: Dispatch) => {\r\n    const lobbyName = Math.random().toString(36).substr(2, 4).toUpperCase();\r\n\r\n    GameSockClient.createLobby(lobbyName, body.username, body.token).then(\r\n      (players) => {\r\n        let user = Array.isArray(players) ? players[0] : players;\r\n\r\n        dispatch({\r\n          type: \"HOST_GAME\",\r\n          payload: { lobbyName: lobbyName, user: user },\r\n        });\r\n      }\r\n    );\r\n  };\r\n};\r\n\r\n/**\r\n * Initilise a lobby as a host from the login function\r\n *\r\n * @param {IHostGame} body\r\n */\r\nexport const hostGame = (body: IHostGame, dispatch: any) => {\r\n  GameSocketConfigExport();\r\n  const lobbyName = Math.random().toString(36).substr(2, 4).toUpperCase();\r\n\r\n  GameSockClient.createLobby(lobbyName, body.username, body.token).then(\r\n    (players) => {\r\n      let user = Array.isArray(players) ? players[0] : players;\r\n\r\n      dispatch({\r\n        type: \"HOST_GAME\",\r\n        payload: { lobbyName: lobbyName, user: user },\r\n      });\r\n    }\r\n  );\r\n};\r\n\r\n/**\r\n * Initilise a lobby as a join\r\n *\r\n * @param {IJoinGame} body\r\n */\r\nexport const joinGame = (body: IJoinGame) => {\r\n  return (dispatch: Dispatch) => {\r\n    GameSockClient.joinLobby(body.lobbyName, body.username).then((players) => {\r\n      let user = Array.isArray(players) ? players[players.length - 1] : players;\r\n\r\n      // playerListUpdate(players, dispatch)\r\n      dispatch({\r\n        type: \"JOIN_GAME\",\r\n        payload: { lobbyName: body.lobbyName, user: user },\r\n      });\r\n    });\r\n  };\r\n};\r\n\r\n/**\r\n * Start a new game as a host\r\n *\r\n */\r\n// export const startHostGame = (lobbyName: string) => {\r\n//     // console.log('running host game be')\r\n//     // return (dispatch: Dispatch) => {\r\n//     //     console.log('starting game')\r\n//         GameSockClient.startGame(lobbyName)\r\n//         // ((gameOptions: GameOptions) => {\r\n//         //     console.log('game starting!', gameOptions)\r\n//         //     dispatch({\r\n//         //         type: 'START_GAME',\r\n//         //         payload: gameOptions.rounds\r\n//         //     })\r\n//         // })\r\n//     // }\r\n// }\r\n\r\n/**\r\n * Start a new game\r\n *\r\n */\r\nexport const startGame = (rounds: number, dispatch: Dispatch) => {\r\n  dispatch({\r\n    type: \"START_GAME\",\r\n    payload: rounds,\r\n  });\r\n};\r\n\r\n/**\r\n * Start a new round\r\n *\r\n */\r\nexport const startRound = (\r\n  roundOptions: GameSockClient.RoundOptions,\r\n  dispatch: Dispatch\r\n) => {\r\n  console.log(\"starting round!\");\r\n  dispatch({\r\n    type: \"START_ROUND\",\r\n    payload: roundOptions,\r\n  });\r\n};\r\n\r\n/**\r\n * Start a new game\r\n *\r\n */\r\nexport const inputQuestion = (question: GameSockClient.Question) => {\r\n  return {\r\n    type: \"INPUT_QUESTION\",\r\n    payload: question,\r\n  };\r\n};\r\n\r\n/**\r\n * Updates the seconds left on a timer\r\n *\r\n * @param {number} time\r\n */\r\nexport const timerUpdate = (time: number, dispatch: Dispatch) => {\r\n  dispatch({\r\n    type: \"TIMER_UPDATE\",\r\n    payload: time,\r\n  });\r\n};\r\n\r\n/**\r\n * Starting a hot seat during a round\r\n *\r\n * @param {Question[]} questions\r\n * @param {HotseatOptions} hotseatOptions\r\n */\r\nexport const startHotseat = (\r\n  questions: GameSockClient.Question[],\r\n  hotseatOptions: HotseatOptions,\r\n  dispatch: Dispatch\r\n) => {\r\n  console.log(\"starting hotseat and setting questions!\", questions);\r\n  dispatch({\r\n    type: \"START_HOTSEAT\",\r\n    payload: { questions, hotseatOptions },\r\n  });\r\n};\r\n\r\n/**\r\n * When both hotseat players answer a question\r\n * \r\n * @param {number} questionIndex \r\n * @param {number[]} answers \r\n * @param {Dispatch} dispatch \r\n */\r\nexport const onHotseatAnswer = (\r\n  questionIndex: number,\r\n  answers: number[],\r\n  dispatch: Dispatch\r\n) => {\r\n  console.log('receiving answers!', answers, questionIndex)\r\n  dispatch({\r\n    type: \"ON_HOTSEAT_ANSWER\",\r\n    payload: { questionIndex, answers },\r\n  });\r\n\r\n  setTimeout(() => {\r\n        dispatch({\r\n            type: \"ON_NEXT_QUESTION\"\r\n        })\r\n  }, 2000);\r\n};\r\n\r\n/**\r\n * Update the list of players\r\n *\r\n * @param {IPlayer[]} players\r\n */\r\nexport const playerListUpdate = (players: IPlayer[], dispatch: Dispatch) => {\r\n  dispatch({\r\n    type: \"PLAYER_LIST_UPDATE\",\r\n    payload: players,\r\n  });\r\n};\r\n\r\n/**\r\n * Update a single player\r\n *\r\n * @param {IPlayer} players\r\n */\r\nexport const playerUpdate = (player: IPlayer, dispatch: Dispatch) => {\r\n  dispatch({\r\n    type: \"PLAYER_SINGLE_UPDATE\",\r\n    payload: player,\r\n  });\r\n};\r\n\r\n/**\r\n * Leave a lobby / game\r\n *\r\n */\r\nexport const leaveGame = () => {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: \"LEAVE_GAME\",\r\n    });\r\n  };\r\n};\r\n\r\n/**\r\n * Ends a game / round depending\r\n * on the number of rounds\r\n */\r\nexport const endGame = () => {\r\n  return {\r\n    type: \"END_GAME\",\r\n  };\r\n};\r\n\r\n/**\r\n * Set the phase within a game\r\n */\r\nexport const setPhase = (phase: string, dispatch: Dispatch) => {\r\n  dispatch({\r\n    type: \"SET_PHASE\",\r\n    payload: phase,\r\n  });\r\n};\r\n\r\n/**\r\n * Answer a question within a game\r\n */\r\nexport const answerQuestion = (\r\n  lobbyName: string,\r\n  questionIndex: number,\r\n  playerIndex: number\r\n) => {\r\n  return (dispatch: Dispatch) => {\r\n    console.log('new answer!', questionIndex, playerIndex)\r\n    GameSockClient.sendAnswer(lobbyName, questionIndex, playerIndex);\r\n    dispatch({\r\n      type: \"ANSWER_QUESTION\",\r\n    });\r\n  };\r\n};\r\n","/*\r\n * File: index.ts\r\n * Project: frontend\r\n * Version: 1.0.0\r\n * File Created: Thursday, 14th May 2020 3:16:19 pm\r\n * Author: Eoan O'Dea - eoan@wspace.ie\r\n * ---------------\r\n * File Description: Authentication related actions in the redux state\r\n * Last Modified: Saturday, 16th May 2020 8:55:16 pm\r\n * Modified By: Eoan O'Dea - eoan@wspace.ie\r\n * ---------------\r\n * Copyright 2020 - WebSpace\r\n */\r\n\r\nimport { ICreate, IForm, ILogin, IThirdPartyToken } from \"./interfaces\"\r\nimport Constants from \"expo-constants\";\r\nimport { hostGame } from \"./game\";\r\n\r\n/**\r\n * Prefixes for api endpoints\r\n */\r\nconst userPrefix = \"/api/user\"\r\nconst authPrefix = \"/api/auth\"\r\n\r\n/**\r\n * Get the baseURL for the server either from the .env file\r\n * or use a static IP\r\n */\r\nconsole.log('server url!!' , Constants.manifest.extra.SERVER_URL)\r\nconst baseUrl = Constants.manifest.extra.SERVER_URL || 'http://192.168.0.164:3000'\r\n\r\nconst lobbyName = \"HK4J\"\r\n\r\n/**\r\n * Determinds whether to display the login\r\n * or register view\r\n */\r\nexport const setLoading = () => {\r\n    return {\r\n        type: 'IS_LOADING'\r\n    }\r\n}\r\n\r\n/**\r\n * Updates an item in the redux store\r\n * \r\n * @param {IForm} {prop, value}\r\n */\r\nexport const formUpdate = ({prop, value}: IForm) => {\r\n    return {\r\n        type: 'FORM_UPDATE',\r\n        payload: { prop, value }\r\n    }\r\n}\r\n\r\n/**\r\n * Register a user\r\n * \r\n * @param {ICreate} body\r\n */\r\nexport const create  = (body: ICreate) => {\r\n    return (dispatch: any) => {\r\n        fetch(`${baseUrl}${userPrefix}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(body)\r\n        })\r\n        .then(response => response.json())\r\n        .then((data) => {\r\n            if(data.error) {\r\n                return dispatch({ type: 'REQUEST_ERROR', payload: data })\r\n            }\r\n            \r\n            dispatch({ type: 'USER_REGISTERED', payload: {user: data.data} })\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n            return dispatch({ type: 'REQUEST_ERROR', payload: {error: 'Error: Could not connect to the server'} })\r\n        })\r\n    }\r\n}\r\n\r\n/**\r\n * Login\r\n * \r\n * @param {ILogin} body \r\n */\r\nexport const login  = (body: ILogin) => {\r\n    return (dispatch: any) => {\r\n        fetch(`${baseUrl}${authPrefix}/signin`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(body)\r\n        })\r\n        .then(response => response.json())\r\n        .then((data) => {\r\n            if(data.error) {\r\n                return dispatch({ type: 'REQUEST_ERROR', payload: data })\r\n            }\r\n            dispatch({ type: 'USER_LOGGED_IN', payload: data.data })\r\n            // dispatch(hostGame({username: data.data.user.name, token: data.data.token}))\r\n            hostGame({username: data.data.user.name, token: data.data.token},dispatch)\r\n            // dispatch({ type: 'HOST_GAME', payload: {username: data.data.user.name, token: data.data.token} })\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n            return dispatch({ type: 'REQUEST_ERROR', payload: {error: 'Error: Could not connect to the server'} })\r\n        })\r\n    }\r\n}\r\n\r\n/**\r\n * Login with a third party system\r\n * \r\n * -Google\r\n * -Apple (iOS only)\r\n * \r\n * @param {IToken} token \r\n */\r\nexport const loginWithThirdParty  = (token: IThirdPartyToken) => {\r\n    return (dispatch: any) => {\r\n        fetch(`${baseUrl}${authPrefix}/signin/${token.provider}/${token.type}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(token)\r\n        })\r\n        .then(response => response.json())\r\n        .then((data) => {\r\n            console.log('response!', data)\r\n            if(data.error || data.success !== true) {\r\n                return dispatch({ type: 'REQUEST_ERROR', payload: data })\r\n            }\r\n\r\n            if(data.data.user.accessToken) dispatch({ type: 'USER_LOGGED_IN_GOOGLE_MOBILE', payload: data.data })\r\n            else dispatch({ type: 'USER_LOGGED_IN_GOOGLE', payload: data.data })\r\n\r\n            dispatch({ type: 'HOST_GAME', payload: {userName: data.data.user.name, lobbyName: lobbyName} })\r\n\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n            return dispatch({ type: 'REQUEST_ERROR', payload: {error: 'Error: Could not connect to the server'} })\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n/**\r\n * Logout a user\r\n * \r\n * @param {IToken} credentials\r\n */\r\nexport const logout  = (credentials: IThirdPartyToken) => {\r\n    /**\r\n     * If an access token exists, add it to the request url\r\n     */\r\n    const signOutUrl = credentials.accessToken\r\n    ? `signout/${credentials.accessToken}`\r\n    : 'signout'\r\n\r\n    return (dispatch: any) => {\r\n        fetch(`${baseUrl}${authPrefix}/${signOutUrl}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + credentials.token\r\n            },\r\n        })\r\n        .then(() => {\r\n            dispatch({ type: 'USER_LOGGED_OUT' })\r\n        })\r\n        .catch((err) => {\r\n            console.log('Logout Error', err)\r\n        })\r\n    }\r\n}\r\n","/*\r\n * File: LogoutWithGoogle.tsx\r\n * Project: frontend\r\n * Version: 1.0.0\r\n * File Created: Tuesday, 19th May 2020 5:18:52 pm\r\n * Author: Eoan O'Dea - eoan@wspace.ie\r\n * ---------------\r\n * File Description: Logout With Google Web only\r\n * Last Modified: Tuesday, 19th May 2020 5:19:18 pm\r\n * Modified By: Eoan O'Dea - eoan@wspace.ie\r\n * ---------------\r\n * Copyright 2020 - WebSpace\r\n */\r\n\r\nimport React, { Component } from \"react\";\r\nimport GoogleLogout from 'react-google-login';\r\nimport { Text, View } from \"react-native\";\r\nimport { connect } from \"react-redux\";\r\nimport {logout} from \"../../../actions/auth\";\r\n\r\n/**\r\n * Get Google Client ID from environment variables\r\n */\r\nimport Constants from \"expo-constants\";\r\nimport { IInitialState } from \"../../../reducers/interfaces\";\r\nconst WEB_GOOGLE_CLIENT_ID = Constants.manifest.extra.WEB_GOOGLE_CLIENT_ID\r\n\r\n/**\r\n * Interface actions \r\n * for the component\r\n */\r\ninterface ILogoutWithGoogleActions {\r\n    logout: (body: object) => void;\r\n}\r\n\r\ninterface ILogoutWithGoogleState {\r\n    error: string;\r\n}\r\n\r\n/**\r\n * Interface Props\r\n * for the component\r\n */\r\ntype IProps = {\r\n    token: string;\r\n};\r\n\r\nclass LogoutWithGoogle extends Component <IProps & ILogoutWithGoogleActions, ILogoutWithGoogleState> {\r\n    state = {\r\n        error: ''\r\n    }\r\n\r\n    /**\r\n     * Handles a response from Google\r\n     */\r\n    responseGoogle = (res: any) => {\r\n        if(res.error) {\r\n            this.setState({ error: res.error });\r\n        } else {\r\n            const {token} = this.props\r\n\r\n            this.props.logout({ token });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <View>\r\n                <GoogleLogout\r\n                    clientId={WEB_GOOGLE_CLIENT_ID}\r\n                    onSuccess={this.responseGoogle}\r\n                    onFailure={this.responseGoogle}\r\n                    buttonText=\"Logout\"\r\n                />\r\n    \r\n                {this.state.error !== ''\r\n                    && <Text>Error: {this.state.error}</Text>\r\n                }\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\n/**\r\n * Return a list of people from our redux state\r\n *\r\n * @param {*} state\r\n */\r\nconst mapStateToProps = (state: IInitialState) => {\r\n  const { token } = state.auth;\r\n\r\n  return {\r\n    token,\r\n  };\r\n};\r\n\r\nexport default connect<IProps, ILogoutWithGoogleActions>(mapStateToProps,{logout})(LogoutWithGoogle)","import React from 'react';\r\nimport { Button, Spinner, ButtonElement, ButtonProps, IconProps, Icon } from '@ui-kitten/components';\r\nimport { View } from 'react-native';\r\n\r\n\r\ninterface ButtonInputProps extends ButtonProps {\r\n  text: string;\r\n  loading: boolean;\r\n  disabled: boolean;\r\n  icon?: string;\r\n}\r\n\r\nexport const ButtonInput = ({ text, loading, icon = \"\", ...ButtonProps }: ButtonInputProps): ButtonElement => {\r\n\r\n  const LoadingIndicator = (props: any) => (\r\n    <View>\r\n      <Spinner size=\"small\" status=\"danger\" />\r\n    </View>\r\n  );\r\n\r\n  const renderIcon = (props: IconProps): React.ReactElement => (\r\n    <Icon {...props} name={icon} />\r\n  )  \r\n\r\n  if(loading) return (\r\n    <Button\r\n    {...ButtonProps}\r\n    accessoryRight={LoadingIndicator}\r\n    disabled={true}\r\n    >{text}</Button>\r\n  )\r\n  if(icon && icon !== \"\") return (\r\n    <Button\r\n      {...ButtonProps}\r\n      accessoryRight={renderIcon}\r\n    >{text}</Button>\r\n  )\r\n\r\n  return (\r\n    <Button\r\n      {...ButtonProps}\r\n    >{text}</Button>\r\n  );\r\n};\r\n\r\n","/*\r\n * File: Signout.tsx\r\n * Project: frontend\r\n * Version: 1.0.0\r\n * File Created: Saturday, 16th May 2020 8:19:18 pm\r\n * Author: Eoan O'Dea - eoan@wspace.ie\r\n * ---------------\r\n * File Description: Handles user signout\r\n * Last Modified: Saturday, 16th May 2020 8:56:18 pm\r\n * Modified By: Eoan O'Dea - eoan@wspace.ie\r\n * ---------------\r\n * Copyright 2020 - WebSpace\r\n */\r\n\r\nimport React from \"react\";\r\nimport { Text, SafeAreaView } from \"react-native\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout, setLoading } from \"../../actions/auth\";\r\nimport LogoutWithGoogle from \"./platformSpecific/LogoutWithGoogle\";\r\nimport { IInitialState } from \"../../reducers/interfaces\";\r\nimport { SignoutScreenScreenProps } from \"../../navigation/auth.navigator\";\r\nimport { ButtonInput } from \"../../components/form-button.component\";\r\n\r\n/**\r\n * Importing styles\r\n * @param theme path\r\n * @param App Module name\r\n */\r\nconst styles = require(\"../../themes\")(\"App\");\r\n\r\n/**\r\n * Interface Props\r\n * for the component\r\n */\r\ntype IProps = {\r\n  name: string;\r\n  token: string;\r\n  authedWithGoogle: boolean;\r\n  isLoading: boolean;\r\n  isHost: boolean;\r\n};\r\n\r\n/**\r\n * Interface actions\r\n * for the component\r\n */\r\ninterface IActions extends SignoutScreenScreenProps {\r\n  logout: (body: object) => void;\r\n  setLoading: () => void;\r\n}\r\n\r\nconst SignoutScreen = (props: IProps & IActions) => {\r\n  /**\r\n   * Logs out the user from their current\r\n   * session\r\n   */\r\n  const submit = () => {\r\n    props.setLoading();\r\n    const { token } = props;\r\n\r\n    props.logout({ token });\r\n  };\r\n\r\n  const { authedWithGoogle, isLoading } = props;\r\n  \r\n  return (\r\n    <SafeAreaView>\r\n      {authedWithGoogle ? (\r\n        <LogoutWithGoogle />\r\n      ) : (\r\n        <ButtonInput\r\n          style={styles.signOutBtn}\r\n          onPress={submit}\r\n          disabled={false}\r\n          loading={isLoading}\r\n          icon=\"log-out-outline\"\r\n          text=\"\"\r\n          size=\"tiny\"\r\n        />\r\n      )}\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\n/**\r\n * Return a list of people from our redux state\r\n *\r\n * @param {*} state\r\n */\r\nconst mapStateToProps = (state: IInitialState): IProps => {\r\n  const { name, token, authedWithGoogle, isLoading } = state.auth;\r\n  const {isHost} = state.game\r\n\r\n  return {\r\n    name,\r\n    token,\r\n    authedWithGoogle,\r\n    isLoading,\r\n    isHost\r\n  };\r\n};\r\n\r\nexport default connect<IProps, IActions>(mapStateToProps, {\r\n  logout,\r\n  setLoading,\r\n})(SignoutScreen);\r\n","import React from 'react';\r\nimport { Icon, IconElement } from '@ui-kitten/components';\r\n\r\nexport const BackIcon = (props): IconElement => (\r\n  <Icon {...props} name='arrow-back'/>\r\n);\r\n\r\nexport const LayoutIcon = (props): IconElement => (\r\n  <Icon {...props} name='layout-outline'/>\r\n);\r\n\r\nexport const PersonIcon = (props): IconElement => (\r\n  <Icon {...props} name='person-outline'/>\r\n);\r\n\r\nexport const MoreVerticalIcon = (props): IconElement => (\r\n  <Icon {...props} name='more-vertical'/>\r\n);\r\n\r\nexport const LogoutIcon = (props): IconElement => (\r\n  <Icon {...props} name='log-out-outline'/>\r\n);\r\n\r\nexport const InfoIcon = (props): IconElement => (\r\n  <Icon {...props} name='info-outline'/>\r\n);\r\n\r\nexport const AlertTriangleIcon = (props): IconElement => (\r\n  <Icon {...props} name='alert-triangle-outline'/>\r\n);\r\n\r\nexport const EyeIcon = (props): IconElement => (\r\n  <Icon {...props} name='eye-outline'/>\r\n);\r\n\r\nexport const EyeOffIcon = (props): IconElement => (\r\n  <Icon {...props} name='eye-off-outline'/>\r\n);\r\n\r\nexport const MenuIcon = (props): IconElement => (\r\n  <Icon {...props} name='menu-outline'/>\r\n);\r\n\r\nexport const HomeIcon = (props): IconElement => (\r\n  <Icon {...props} name='home-outline'/>\r\n);\r\n\r\nexport const DoneAllIcon = (props): IconElement => (\r\n  <Icon {...props} name='done-all-outline'/>\r\n);\r\n\r\nexport const GridIcon = (props): IconElement => (\r\n  <Icon {...props} name='grid-outline'/>\r\n);\r\n\r\nexport const SearchIcon = (props): IconElement => (\r\n  <Icon {...props} name='search-outline'/>\r\n);\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Input, InputElement, InputProps } from '@ui-kitten/components';\r\nimport { useFormikContext } from 'formik';\r\nimport { AlertTriangleIcon } from '../assets/icons';\r\n\r\ninterface FormInputProps extends InputProps {\r\n  id: string;\r\n}\r\n\r\nexport const FormInput = ({ id, ...inputProps }: FormInputProps): InputElement => {\r\n\r\n  const formContext = useFormikContext();\r\n\r\n  // @ts-ignore\r\n  const { [id]: error } = formContext.errors;\r\n\r\n  const fieldProps: Partial<InputProps> = {\r\n    status: error && 'danger',\r\n    captionIcon: error && AlertTriangleIcon,\r\n  };\r\n\r\n  return (\r\n    <Input\r\n      {...inputProps}\r\n      {...fieldProps}\r\n      caption={error}\r\n      onChangeText={formContext.handleChange(id)}\r\n    />\r\n  );\r\n};\r\n\r\n","/*\r\n * File: LoginWithGoogle.tsx\r\n * Project: frontend\r\n * Version: 1.0.0\r\n * File Created: Tuesday, 19th May 2020 5:18:52 pm\r\n * Author: Eoan O'Dea - eoan@wspace.ie\r\n * ---------------\r\n * File Description: Login With Google Web only\r\n * Last Modified: Tuesday, 19th May 2020 5:19:18 pm\r\n * Modified By: Eoan O'Dea - eoan@wspace.ie\r\n * ---------------\r\n * Copyright 2020 - WebSpace\r\n */\r\n\r\n\r\n\r\n\r\nimport React, { Component } from \"react\";\r\nimport GoogleLogin from 'react-google-login';\r\nimport { Text, View } from \"react-native\";\r\nimport { connect } from \"react-redux\";\r\nimport {loginWithThirdParty} from \"../../../actions/auth\";\r\n\r\nconst styles = require(\"../../../themes\")(\"Form\");\r\n\r\n/**\r\n * Get Google Client ID from environment variables\r\n */\r\nimport Constants from \"expo-constants\";\r\nconst WEB_GOOGLE_CLIENT_ID = Constants.manifest.extra.WEB_GOOGLE_CLIENT_ID\r\n\r\n\r\n/**\r\n * Interface actions \r\n * for the component\r\n */\r\ninterface ILoginWithGoogleActions {\r\n    loginWithThirdParty: (token: object) => void;\r\n}\r\n\r\ninterface ILoginWithGoogleState {\r\n    error: string;\r\n}\r\n\r\nclass LoginWithGoogle extends Component <ILoginWithGoogleActions, ILoginWithGoogleState> {\r\n    state = {\r\n        error: ''\r\n    }\r\n\r\n    /**\r\n     * Handles a response from Google\r\n     */\r\n    responseGoogle = (res: any) => {\r\n        if(res.error) {\r\n            this.setState({ error: res.error });\r\n        } else {\r\n            this.props.loginWithThirdParty({ token: res.tokenId, provider: 'google' });    \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <View>\r\n                <GoogleLogin\r\n                    style={styles.thirdPartyButtonContainer}\r\n                    clientId={WEB_GOOGLE_CLIENT_ID}\r\n                    onSuccess={this.responseGoogle}\r\n                    onFailure={this.responseGoogle}\r\n                    cookiePolicy={'single_host_origin'}\r\n                />\r\n                {this.state.error !== ''\r\n                    && <Text>Error: {this.state.error}</Text>\r\n                }\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect<ILoginWithGoogleActions>(null, {loginWithThirdParty})(LoginWithGoogle)","import React, { Component } from \"react\";\r\nimport { View, Text, Platform } from \"react-native\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginWithThirdParty } from \"../../../actions/auth\";\r\nimport * as AppleAuthentication from 'expo-apple-authentication';\r\n\r\n\r\n/**\r\n * Importing styles\r\n * @param theme path\r\n * @param App Module name\r\n */\r\nconst styles = require(\"../../../themes\")(\"Form\");\r\n\r\n/**\r\n * Interface actions \r\n * for the component\r\n */\r\ninterface ILoginWithAppleActions {\r\n  loginWithThirdParty: (token: object) => void;\r\n}\r\n\r\n/**\r\n * Interface for the component\r\n * state\r\n */\r\ninterface ILoginWithAppleState {\r\n  error: string;\r\n}\r\n\r\nclass LoginWithApple extends Component <ILoginWithAppleActions, ILoginWithAppleState> {\r\n    state = {\r\n      error: ''\r\n    }\r\n\r\n    /**\r\n     * Login with Apple function\r\n     * Asynconously logs the user in on an \r\n     * iOS device\r\n     */\r\n    signInWithAppleMobile = async() => {\r\n\r\n      try {\r\n          const result: any = await AppleAuthentication.signInAsync({\r\n            requestedScopes: [\r\n              AppleAuthentication.AppleAuthenticationScope.FULL_NAME,\r\n              AppleAuthentication.AppleAuthenticationScope.EMAIL,\r\n            ],\r\n          })\r\n          \r\n          const fullName = result.fullName.givenName + \" \" + result.fullName.familyName\r\n          \r\n          const user = {\r\n            email: result.email,\r\n            name: fullName,\r\n            identityToken: result.identityToken\r\n          }\r\n       \r\n          this.props.loginWithThirdParty({ token: result.authorizationCode, type: Platform.OS, provider: 'apple', user });    \r\n        } catch(err) {\r\n          console.log('error!', err)\r\n        \r\n          this.setState({ error: err.message });\r\n        }\r\n      }\r\n\r\n      render() {\r\n          return (\r\n            <View style={styles.thirdPartyButtonContainer}>\r\n              <AppleAuthentication.AppleAuthenticationButton\r\n                buttonType={AppleAuthentication.AppleAuthenticationButtonType.SIGN_IN}\r\n                buttonStyle={AppleAuthentication.AppleAuthenticationButtonStyle.BLACK}\r\n                cornerRadius={5}\r\n                style={{ width: 200, height: 44 }}\r\n                onPress={this.signInWithAppleMobile}\r\n              />\r\n\r\n                {this.state.error !== ''\r\n                    && <Text style={{textAlign: 'center'}}>Error: {this.state.error}</Text>\r\n                }\r\n            </View>\r\n          )\r\n      }\r\n}\r\n\r\nexport default connect<ILoginWithAppleActions>(null, {loginWithThirdParty})(LoginWithApple)\r\n\r\n","import * as Yup from 'yup';\r\n\r\nexport class SignInData {\r\n\r\n  constructor(\r\n    readonly email: string,\r\n    readonly password: string) {\r\n\r\n  }\r\n\r\n  static empty(): SignInData {\r\n    return new SignInData(\r\n      '',\r\n      '',\r\n    );\r\n  }\r\n}\r\n\r\nexport const SignInSchema = Yup.object().shape({\r\n  email: Yup.string().min(1, \"Email cannot be blank\").email('Invalid email').required('Email is required'),\r\n  password: Yup.string().min(8, 'Password must be at least 8 characters').required('Password is required'),\r\n});\r\n\r\n","/*\r\n * File: modal-header.component.tsx\r\n * Project: frontend\r\n * Version: 1.0.0\r\n * File Created: Saturday, 6th June 2020 9:19:42 pm\r\n * Author: Eoan O'Dea - eoan@wspace.ie\r\n * ---------------\r\n * File Description: Component to handle the header of components with close buttons\r\n * Last Modified: Saturday, 6th June 2020 9:41:26 pm\r\n * Modified By: Eoan O'Dea - eoan@wspace.ie\r\n * ---------------\r\n * Copyright 2020 - WebSpace\r\n */\r\n\r\n\r\n\r\nimport React from \"react\";\r\nimport {\r\n  Button,\r\n  ButtonElement,\r\n  ButtonProps,\r\n  IconProps,\r\n  Icon,\r\n  Text,\r\n  Spinner,\r\n} from \"@ui-kitten/components\";\r\nimport { View } from \"react-native\";\r\n\r\n/**\r\n * Importing styles\r\n * @param theme path\r\n * @param App Module name\r\n */\r\nconst styles = require(\"../themes\")(\"Header\");\r\n\r\ninterface ModalHeaderProps extends ButtonProps {\r\n  text: string;\r\n  icon: string;\r\n  buttonText?: string;\r\n  loading?: boolean;\r\n  isLeaderboard?: boolean;\r\n}\r\n\r\nexport const ModalHeader = ({\r\n  text,\r\n  icon,\r\n  buttonText,\r\n  loading = false,\r\n  ...ButtonProps\r\n}: ModalHeaderProps): ButtonElement => {\r\n\r\n  \r\n  const buttonIcon = (props: IconProps) => {\r\n    if(!loading) return <Icon {...props} name={icon} size=\"large\" />\r\n\r\n    return (\r\n      <View>\r\n          <Spinner size=\"small\" status=\"danger\" />\r\n      </View>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Button\r\n        {...ButtonProps}\r\n        accessoryRight={buttonIcon}\r\n        style={styles.button}\r\n        size=\"tiny\"\r\n      >{buttonText}</Button>\r\n      \r\n      <Text style={styles.title} category=\"h1\">\r\n        {text}\r\n      </Text>\r\n    </View>\r\n  );\r\n};\r\n","/*\r\n * File: Login.tsx\r\n * Project: frontend\r\n * Version: 1.0.0\r\n * File Created: Thursday, 14th May 2020 4:22:47 pm\r\n * Author: Eoan O'Dea - eoan@wspace.ie\r\n * ---------------\r\n * File Description: Handles user login input & validation\r\n * Last Modified: Saturday, 16th May 2020 8:55:33 pm\r\n * Modified By: Eoan O'Dea - eoan@wspace.ie\r\n * ---------------\r\n * Copyright 2020 - WebSpace\r\n */\r\n\r\nimport React from \"react\";\r\nimport { View, Platform } from \"react-native\";\r\nimport { connect } from \"react-redux\";\r\nimport { Formik, FormikProps } from \"formik\";\r\nimport { Button, Layout, Text, Icon, IconProps } from \"@ui-kitten/components\";\r\nimport { TouchableWithoutFeedback } from \"react-native-gesture-handler\";\r\nimport * as actions from \"../../actions/auth\";\r\nimport { FormInput } from \"../../components/form-input.component\";\r\nimport { IInitialState } from \"../../reducers/interfaces\";\r\nimport LoginWithGoogle from \"./platformSpecific/LoginWithGoogle\";\r\nimport LoginWithApple from \"./platformSpecific/LoginWithApple.ios\";\r\nimport { SignInData, SignInSchema } from \"../../data/sign-in.model\";\r\nimport { EyeIcon, EyeOffIcon } from \"../../assets/icons\";\r\nimport { AppRoute } from \"../../navigation/app-routes\";\r\nimport { SignInScreenProps } from \"../../navigation/auth.navigator\";\r\nimport { ButtonInput } from \"../../components/form-button.component\";\r\nimport { ModalHeader } from \"../../components/modal-header.component\";\r\n\r\n/**\r\n * Importing styles\r\n * @param theme path\r\n * @param App Module name\r\n */\r\nconst styles = require(\"../../themes\")(\"Form\");\r\n\r\n/**\r\n * Interface actions\r\n * for the component\r\n */\r\ninterface ILoginActions extends SignInScreenProps {\r\n  setLoading: () => void;\r\n  formUpdate: ({ prop, value }: any) => void;\r\n  login: (body: object) => void;\r\n  loginWithThirdParty: (token: object) => void;\r\n}\r\n\r\n/**\r\n * Interface Props\r\n * for the component\r\n */\r\ninterface ILoginProps {\r\n  email: string;\r\n  password: string;\r\n  error: string;\r\n  isLoading: boolean;\r\n  token: string;\r\n}\r\n\r\nconst LoginScreen = (props: ILoginProps & ILoginActions) => {\r\n  const [passwordVisible, setPasswordVisible] = React.useState<boolean>(false);\r\n\r\n  const onPasswordIconPress = (): void => {\r\n    setPasswordVisible(!passwordVisible);\r\n  };\r\n\r\n  /**\r\n   * If the inputs pass validation,\r\n   * submit the request to the server\r\n   */\r\n  const submit = (values: any) => {\r\n    props.setLoading();\r\n    const { email, password } = values;\r\n\r\n    props.login({ email, password });\r\n  };\r\n\r\n  const renderPasswordIcon = (props: any): React.ReactElement => {\r\n    const IconComponent = passwordVisible ? EyeIcon : EyeOffIcon;\r\n\r\n    return (\r\n      <TouchableWithoutFeedback onPress={onPasswordIconPress}>\r\n        <IconComponent {...props} />\r\n      </TouchableWithoutFeedback>\r\n    );\r\n  };\r\n\r\n\r\n  const { email, password, error, isLoading } = props;\r\n\r\n  const renderForm = (props: FormikProps<SignInData>): React.ReactFragment => {\r\n    const loading = isLoading || props.isSubmitting;\r\n\r\n    if(isLoading === false && props.isSubmitting === true) props.setSubmitting(false)\r\n    return (\r\n      <React.Fragment>\r\n        <FormInput\r\n          id=\"email\"\r\n          style={styles.formControl}\r\n          size='large'\r\n          placeholder=\"Email\"\r\n          keyboardType=\"email-address\"\r\n          autoCapitalize=\"none\"\r\n          value={props.values.email}\r\n\r\n        />\r\n        <FormInput\r\n          id=\"password\"\r\n          style={styles.formControl}\r\n          size='large'\r\n          placeholder=\"Password\"\r\n          secureTextEntry={!passwordVisible}\r\n          accessoryRight={renderPasswordIcon}\r\n          autoCapitalize=\"none\"\r\n          value={props.values.password}\r\n        />\r\n\r\n        {error !== \"\" && <Text>{error}</Text>}\r\n\r\n        <View style={styles.resetPasswordContainer}>\r\n          <Button appearance=\"ghost\" status=\"control\">\r\n            Forgot password?\r\n          </Button>\r\n        </View>\r\n\r\n        <ButtonInput\r\n          style={styles.submitButton}\r\n          disabled={!props.isValid && !props.isValidating}\r\n          onPress={() => props.handleSubmit()}\r\n          loading={loading}\r\n          text=\"SIGN IN\"\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Layout style={styles.formContainer}>\r\n      <ModalHeader\r\n        style={styles.homeBtn}\r\n        text=\"\"\r\n        icon=\"close-outline\"\r\n        status=\"danger\"\r\n        onPress={() => props.navigation.navigate(AppRoute.HOME)}\r\n      />\r\n\r\n      <View style={styles.formContainer}>\r\n        <Formik\r\n          initialValues={{ email, password }}\r\n          validationSchema={SignInSchema}\r\n          onSubmit={(values) => submit(values)}\r\n        >\r\n          {renderForm}\r\n        </Formik>\r\n        \r\n        {Platform.OS === \"ios\" && <LoginWithApple />}\r\n\r\n        <View style = {styles.customHrTag} />\r\n\r\n        <LoginWithGoogle />\r\n\r\n        <Button\r\n          style={styles.noAccountButton}\r\n          onPress={() => props.navigation.navigate(AppRoute.SIGN_UP)}\r\n        >\r\n          SIGN UP\r\n        </Button>\r\n      </View>\r\n    </Layout>\r\n  );\r\n};\r\n\r\n/**\r\n * Return a list of people from our redux state\r\n *\r\n * @param {*} state\r\n */\r\nconst mapStateToProps = (state: IInitialState): ILoginProps => {\r\n  const { email, password, error, isLoading, token } = state.auth;\r\n\r\n  return {\r\n    email,\r\n    password,\r\n    error,\r\n    isLoading,\r\n    token,\r\n  };\r\n};\r\n\r\nexport default connect<ILoginProps, ILoginActions, {}>(\r\n  mapStateToProps,\r\n  actions\r\n)(LoginScreen);\r\n","import * as Yup from 'yup';\r\n\r\nexport class SignUpData {\r\n\r\n  constructor(\r\n    readonly email: string,\r\n    readonly password: string) {\r\n\r\n  }\r\n\r\n  static empty(): SignUpData {\r\n    return new SignUpData(\r\n      '',\r\n      '',\r\n    );\r\n  }\r\n}\r\n\r\nexport const SignUpSchema = Yup.object().shape({\r\n  name: Yup.string().min(4, \"Name must be at least 4 characters\").required(),\r\n  email: Yup.string().min(1, \"Email cannot be blank\").email('Invalid email').required('Email is required'),\r\n  password: Yup.string().min(8, 'Password must be at least 8 characters').required('Password is required'),\r\n  password_confirm: Yup.string().oneOf([Yup.ref('password')], 'Password must match'),\r\n});\r\n\r\n","/*\r\n * File: Register.tsx\r\n * Project: frontend\r\n * Version: 1.0.0\r\n * File Created: Thursday, 14th May 2020 3:08:31 pm\r\n * Author: Eoan O'Dea - eoan@wspace.ie\r\n * ---------------\r\n * File Description: Handles user registration input & validation\r\n * Last Modified: Saturday, 16th May 2020 8:56:06 pm\r\n * Modified By: Eoan O'Dea - eoan@wspace.ie\r\n * ---------------\r\n * Copyright 2020 - WebSpace\r\n */\r\n\r\nimport React from \"react\";\r\nimport { View } from \"react-native\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../actions/auth\";\r\nimport { Button, Layout } from \"@ui-kitten/components\";\r\nimport { Formik, FormikProps } from \"formik\";\r\nimport { SignUpSchema, SignUpData } from \"../../data/sign-up.model\";\r\nimport { FormInput } from \"../../components/form-input.component\";\r\nimport { EyeIcon, EyeOffIcon } from \"../../assets/icons\";\r\nimport { TouchableWithoutFeedback } from \"react-native-gesture-handler\";\r\nimport { AppRoute } from \"../../navigation/app-routes\";\r\nimport { RegisterScreenProps } from \"../../navigation/auth.navigator\";\r\nimport { ButtonInput } from \"../../components/form-button.component\";\r\nimport { Text } from \"react-native\";\r\nimport { ModalHeader } from \"../../components/modal-header.component\";\r\n\r\n/**\r\n * Importing styles\r\n * @param theme path\r\n * @param App Module name\r\n */\r\nconst styles = require(\"../../themes\")(\"Form\");\r\n\r\n/**\r\n * Interface Props\r\n * for the component\r\n */\r\ntype IProps = {\r\n  actionSuccess: boolean;\r\n  canSubmit: boolean;\r\n  name: string;\r\n  email: string;\r\n  password: string;\r\n  confirm_password: string;\r\n  error: string;\r\n  isLoading: boolean;\r\n};\r\n\r\n/**\r\n * Interface actions\r\n * for the component\r\n */\r\ninterface IActions extends RegisterScreenProps {\r\n  setLoading: () => void;\r\n  formUpdate: ({ prop, value }: any) => void;\r\n  create: (body: object) => void;\r\n}\r\n\r\nconst RegisterScreen = (props: IProps & IActions) => {\r\n  const [passwordVisible, setPasswordVisible] = React.useState<boolean>(false);\r\n\r\n  const onPasswordIconPress = (): void => {\r\n    setPasswordVisible(!passwordVisible);\r\n  };\r\n\r\n  const navigateSignIn = (): void => {\r\n    props.navigation.navigate(AppRoute.SIGN_IN);\r\n  };\r\n\r\n  /**\r\n   * If the inputs pass validation,\r\n   * submit the request to the server\r\n   */\r\n  const submit = (values: any) => {\r\n    props.setLoading();\r\n    const { name, email, password } = values;\r\n\r\n    props.create({ name, email, password });\r\n  };\r\n\r\n  const renderPasswordIcon = (props: any): React.ReactElement => {\r\n    const IconComponent = passwordVisible ? EyeIcon : EyeOffIcon;\r\n\r\n    return (\r\n      <TouchableWithoutFeedback onPress={onPasswordIconPress}>\r\n        <IconComponent {...props} />\r\n      </TouchableWithoutFeedback>\r\n    );\r\n  };\r\n\r\n  const { name, email, password, confirm_password, error, isLoading } = props;\r\n\r\n  const renderForm = (props: FormikProps<SignUpData>): React.ReactFragment => {\r\n    const loading = isLoading || props.isSubmitting;\r\n    \r\n    if(isLoading === false && props.isSubmitting === true) props.setSubmitting(false)\r\n    return (\r\n      <React.Fragment>\r\n        <FormInput\r\n          id=\"name\"\r\n          style={styles.formControlReg}\r\n          size=\"large\"\r\n          placeholder=\"Username\"\r\n          autoCorrect={false}\r\n          autoCapitalize=\"none\"\r\n        />\r\n        <FormInput\r\n          id=\"email\"\r\n          style={styles.formControlReg}\r\n          size=\"large\"\r\n          placeholder=\"Email\"\r\n          keyboardType=\"email-address\"\r\n          autoCapitalize=\"none\"\r\n        />\r\n        <FormInput\r\n          id=\"password\"\r\n          style={styles.formControlReg}\r\n          size=\"large\"\r\n          placeholder=\"Password\"\r\n          secureTextEntry={!passwordVisible}\r\n          accessoryRight={renderPasswordIcon}\r\n        />\r\n        <FormInput\r\n          id=\"confirm_password\"\r\n          style={styles.formControlReg}\r\n          size=\"large\"\r\n          placeholder=\"Confirm Password\"\r\n          secureTextEntry={!passwordVisible}\r\n          accessoryRight={renderPasswordIcon}\r\n        />\r\n        {error !== \"\" && <Text>{error}</Text>}\r\n\r\n        <ButtonInput\r\n          style={styles.submitButton}\r\n          disabled={!props.isValid && !props.isValidating}\r\n          onPress={() => props.handleSubmit()}\r\n          loading={loading}\r\n          text=\"SIGN UP\"\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  if (props.actionSuccess) navigateSignIn();\r\n  return (\r\n    <Layout style={styles.formContainerReg}>\r\n      <ModalHeader\r\n        text=\"\"\r\n        icon=\"close-outline\"\r\n        status=\"info\"\r\n        onPress={() => props.navigation.navigate(AppRoute.HOME)}\r\n      />\r\n\r\n      <View style={styles.formContainerReg}>\r\n        <Formik\r\n          initialValues={{ name, email, password, confirm_password }}\r\n          validationSchema={SignUpSchema}\r\n          onSubmit={(values) => submit(values)}\r\n        >\r\n          {renderForm}\r\n        </Formik>\r\n\r\n        <View style = {styles.customHrTagReg} />\r\n\r\n        <Button\r\n          style={styles.haveAccountButton}\r\n          onPress={() => props.navigation.navigate(AppRoute.SIGN_IN)}\r\n        >\r\n          Already have an account?\r\n        </Button>\r\n      </View>\r\n    </Layout>\r\n  );\r\n};\r\n\r\n/**\r\n * Return a list of people from our redux state\r\n *\r\n * @param {*} state\r\n */\r\nconst mapStateToProps = (state: any) => {\r\n  const { name, email, password, confirm_password, error, isLoading, actionSuccess } = state.auth;\r\n\r\n  return {\r\n    name,\r\n    email,\r\n    password,\r\n    confirm_password,\r\n    error,\r\n    isLoading,\r\n    actionSuccess\r\n  };\r\n};\r\n\r\nexport default connect<IProps & IActions, {}>(mapStateToProps, actions)(RegisterScreen);\r\n","/**\r\n * Import modules which can be accessed\r\n */\r\nimport SignoutScreen from './sign-out.component'\r\nimport SignInScreen from './sign-in.component'\r\nimport RegisterScreen from './register.component'\r\n\r\n/**\r\n * Export these modules to the rest of the application\r\n */\r\nexport default {\r\n    SignoutScreen,\r\n    SignInScreen,\r\n    RegisterScreen\r\n}\r\n","/*\r\n * File: host.component.tsx\r\n * Project: frontend\r\n * Version: 1.0.0\r\n * File Created: Wednesday, 3rd June 2020 2:52:35 pm\r\n * Author: Eoan O'Dea - eoan@wspace.ie\r\n * ---------------\r\n * File Description: Hosting a game\r\n * Last Modified: Wednesday, 3rd June 2020 2:53:50 pm\r\n * Modified By: Eoan O'Dea - eoan@wspace.ie\r\n * ---------------\r\n * Copyright 2020 - WebSpace\r\n */\r\n\r\nimport React from \"react\";\r\nimport { HostGameScreenProps } from \"../../navigation/game.navigator\";\r\nimport { Layout, Button } from \"@ui-kitten/components\";\r\nimport { Text } from \"react-native\";\r\nimport { AppRoute } from \"../../navigation/app-routes\";\r\n\r\n/**\r\n * Importing styles\r\n * @param theme path\r\n * @param App Module name\r\n */\r\nconst styles = require(\"../../themes\")(\"Game\");\r\n\r\nconst HostScreen = (props: HostGameScreenProps) => {\r\n    return (\r\n        <Layout style={styles.container}>\r\n            <Text style={styles.title}>Host</Text>\r\n            <Button style={styles.submitButton} onPress={() => props.navigation.navigate(AppRoute.HOME)}>Home</Button>\r\n            <Button style={styles.submitButton} onPress={() => props.navigation.navigate(AppRoute.SIGN_OUT)}>Sign out page</Button>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default HostScreen","import * as Yup from 'yup';\r\n\r\nexport class JoinLobbyData {\r\n\r\n  constructor(\r\n    readonly lobbyName: string,\r\n    readonly username: string) {\r\n\r\n  }\r\n\r\n  static empty(): JoinLobbyData {\r\n    return new JoinLobbyData(\r\n      '',\r\n      '',\r\n    );\r\n  }\r\n}\r\n\r\nexport const JoinLobbySchema = Yup.object().shape({\r\n  lobbyName: Yup.string().min(4, \"Lobby code must be 4 characters\").max(5, 'Lobby code cannot be over 5 characters').required('Lobby Code is required'),\r\n  username: Yup.string().min(4, 'Username must be at least 4 characters').required('Username is required'),\r\n});\r\n\r\n","/*\r\n * File: join.component.tsx\r\n * Project: frontend\r\n * Version: 1.0.0\r\n * File Created: Wednesday, 3rd June 2020 2:52:35 pm\r\n * Author: Eoan O'Dea - eoan@wspace.ie\r\n * ---------------\r\n * File Description: Joining a game\r\n * Last Modified: Wednesday, 3rd June 2020 3:14:57 pm\r\n * Modified By: Eoan O'Dea - eoan@wspace.ie\r\n * ---------------\r\n * Copyright 2020 - WebSpace\r\n */\r\n\r\nimport React from \"react\";\r\nimport { View } from \"react-native\";\r\nimport { JoinGameScreenProps } from \"../../navigation/game.navigator\";\r\nimport { Layout, Button, Text } from \"@ui-kitten/components\";\r\nimport { AppRoute } from \"../../navigation/app-routes\";\r\nimport {gameActions} from \"../../actions\";\r\nimport { FormikProps, Formik } from \"formik\";\r\nimport { JoinLobbyData, JoinLobbySchema } from \"../../data/join-lobby.model\";\r\nimport { IInitialState } from \"../../reducers/interfaces\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormInput } from \"../../components/form-input.component\";\r\nimport { ButtonInput } from \"../../components/form-button.component\";\r\nimport { IJoinGame } from \"../../actions/game\";\r\nimport { ModalHeader } from \"../../components/modal-header.component\";\r\n\r\n\r\n\r\n/**\r\n * Importing styles\r\n * @param theme path\r\n * @param App Module name\r\n */\r\nconst styles = require(\"../../themes\")(\"Form\");\r\n\r\n\r\n/**\r\n * Interface actions\r\n * for the component\r\n */\r\ninterface IJoinActions extends JoinGameScreenProps {\r\n    setGameLoading: () => void;\r\n    formUpdate: ({ prop, value }: any) => void;\r\n    joinGame:(body: IJoinGame) => void;\r\n  }\r\ninterface IJoinProps{\r\n    username:string;\r\n    lobbyName:string;\r\n    error: string;\r\n    isLoading: boolean;\r\n}\r\n\r\nconst JoinScreen = (props: IJoinActions & IJoinProps) => {\r\n    const {username,lobbyName,error,isLoading}=props;\r\n    /**\r\n   * If the inputs pass validation,\r\n   * submit the request to the server\r\n   */\r\n  const submit = (values: any) => {\r\n    props.setGameLoading();\r\n    const { lobbyName,username } = values;\r\n\r\n    props.joinGame({lobbyName,username})\r\n};\r\nconst renderForm = (props: FormikProps<JoinLobbyData>): React.ReactFragment => {\r\n    const loading = isLoading || props.isSubmitting;\r\n\r\n    if(isLoading === false && props.isSubmitting === true) props.setSubmitting(false)\r\n    return (\r\n      <React.Fragment>\r\n        <FormInput\r\n          id=\"lobbyName\"\r\n          style={styles.formControl}\r\n          size='large'\r\n          placeholder=\"Enter Join Code\"\r\n          autoCapitalize=\"characters\"\r\n        />\r\n        <FormInput\r\n          id=\"username\"\r\n          style={styles.formControl}\r\n          size='large'\r\n          placeholder=\"Create a Username\"\r\n        />\r\n        \r\n\r\n        {error !== \"\" && <Text>{error}</Text>}\r\n\r\n        \r\n\r\n        <ButtonInput\r\n          style={styles.submitButton}\r\n          disabled={!props.isValid && !props.isValidating}\r\n          onPress={() => props.handleSubmit()}\r\n          loading={loading}\r\n          text=\"JOIN\"\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n    return (\r\n        <Layout style={styles.formContainer}>\r\n          <ModalHeader\r\n              text=\"\"\r\n              icon=\"close-outline\"\r\n              status=\"danger\"\r\n              onPress={() => props.navigation.navigate(AppRoute.HOME)}\r\n            />\r\n\r\n            <View style={styles.formContainer}>\r\n              <Formik\r\n                  initialValues={{lobbyName,username}}\r\n                  validationSchema={JoinLobbySchema}\r\n                  onSubmit={(values)=>submit(values)}\r\n              >\r\n\r\n                  {renderForm}\r\n              </Formik>\r\n            </View>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: IInitialState): IJoinProps => {\r\n    const { lobbyName, username,error,isLoading } = state.game;\r\n  \r\n    return {\r\n      lobbyName,\r\n      username,\r\n      error,\r\n      isLoading\r\n    };\r\n  };\r\n  \r\n  export default connect<IJoinProps, IJoinActions, {}>(\r\n    mapStateToProps,\r\n    gameActions\r\n  )(JoinScreen);","/*\r\n * File: modal-header.component.tsx\r\n * Project: frontend\r\n * Version: 1.0.0\r\n * File Created: Saturday, 6th June 2020 9:19:42 pm\r\n * Author: Eoan O'Dea - eoan@wspace.ie\r\n * ---------------\r\n * File Description: Component to handle the header of components with close buttons\r\n * Last Modified: Saturday, 6th June 2020 9:41:26 pm\r\n * Modified By: Eoan O'Dea - eoan@wspace.ie\r\n * ---------------\r\n * Copyright 2020 - WebSpace\r\n */\r\n\r\nimport React from \"react\";\r\nimport {\r\n  Button,\r\n  ButtonElement,\r\n  ButtonProps,\r\n  IconProps,\r\n  Icon,\r\n  Text,\r\n  Spinner,\r\n} from \"@ui-kitten/components\";\r\nimport { View } from \"react-native\";\r\n\r\n/**\r\n * Importing styles\r\n * @param theme path\r\n * @param App Module name\r\n */\r\nconst styles = require(\"../themes\")(\"Header\");\r\n\r\ninterface ModalHeaderProps extends ButtonProps {\r\n  text: string;\r\n  icon: string;\r\n  buttonText?: string;\r\n  loading?: boolean;\r\n  isLeaderboard?: boolean;\r\n  lobbyCode: string;\r\n}\r\n\r\nexport const ModalHeaderLobby = ({\r\n  text,\r\n  icon,\r\n  buttonText,\r\n  loading = false,\r\n  lobbyCode,\r\n  isLeaderboard = false,\r\n  ...ButtonProps\r\n}: ModalHeaderProps): ButtonElement => {\r\n  const spinnerIcon = () => (\r\n    <View>\r\n      <Spinner size=\"small\" status=\"danger\" />\r\n    </View>\r\n  );\r\n\r\n  const buttonIcon = (props: IconProps) => {\r\n    if (!loading) return <Icon {...props} name={icon} size=\"large\" />;\r\n\r\n    return spinnerIcon();\r\n  };\r\n\r\n  const renderTitleAndCode = () => {\r\n    /**\r\n     * If it is a leaderboard screen, render only the title\r\n     */\r\n    if (isLeaderboard)\r\n      return (\r\n        <Text style={[styles.title, styles.leaderboardTitle]} category=\"h1\">\r\n          {text}\r\n        </Text>\r\n      );\r\n\r\n    /**\r\n     * If not, render the title and the lobby code\r\n     */\r\n    return (\r\n      <React.Fragment>\r\n        <Text style={styles.title} category=\"h1\">\r\n          {lobbyCode !== \"\" ? text : \"Loading lobby...\"}\r\n        </Text>\r\n        <Text style={styles.codeTitle}>{lobbyCode}</Text>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Button\r\n        {...ButtonProps}\r\n        accessoryRight={buttonIcon}\r\n        style={styles.button}\r\n        size=\"tiny\"\r\n      >\r\n        {buttonText}\r\n      </Button>\r\n      {renderTitleAndCode()}\r\n    </View>\r\n  );\r\n};\r\n","/*\r\n * File: loading.component.tsx\r\n * Project: frontend\r\n * Version: 1.0.0\r\n * File Created: Wednesday, 10th June 2020 5:35:40 pm\r\n * Author: Eoan O'Dea - eoan@wspace.ie\r\n * ---------------\r\n * File Description: Component which displays loading spinner\r\n * Last Modified: Wednesday, 10th June 2020 5:36:37 pm\r\n * Modified By: Eoan O'Dea - eoan@wspace.ie\r\n * ---------------\r\n * Copyright 2020 - WebSpace\r\n */\r\n\r\nimport React from \"react\";\r\nimport { Spinner, Text, Layout } from \"@ui-kitten/components\";\r\nimport { View } from \"react-native\";\r\n\r\n\r\n/**\r\n * Importing styles\r\n * @param theme path\r\n * @param App Module name\r\n */\r\nconst styles = require(\"../themes\")(\"Game\");\r\n\r\ninterface IProps {\r\n    text?: string;\r\n}\r\n\r\nconst LoadingComponent = ({text = \"\"}: IProps) => (\r\n    <Layout style={styles.gameLoadingSpinner}>\r\n        <View style={styles.loadingSpinner} >\r\n            <Spinner size=\"giant\" status=\"info\" />\r\n        </View>\r\n        <Text style={styles.title}>{text}</Text>\r\n    </Layout>\r\n)\r\n\r\nexport default LoadingComponent","/*\r\n * File: lobby.component.tsx\r\n * Project: frontend\r\n * Version: 1.0.0\r\n * File Created: Wednesday, 3rd June 2020 2:52:35 pm\r\n * Author: Eoan O'Dea - eoan@wspace.ie\r\n * ---------------\r\n * File Description: In game lobby for both host and players\r\n * Last Modified: Wednesday, 3rd June 2020 3:00:55 pm\r\n * Modified By: Eoan O'Dea - eoan@wspace.ie\r\n * ---------------\r\n * Copyright 2020 - WebSpace\r\n */\r\n\r\nimport React from \"react\";\r\nimport { Icon, ListItem, List, IconProps, Button, Layout, Text } from \"@ui-kitten/components\";\r\nimport { IPlayer, IInitialState } from \"../../reducers/interfaces\";\r\nimport { connect } from \"react-redux\";\r\nimport { gameActions } from \"../../actions\";\r\nimport { LobbyScreenProps } from \"../../navigation/game.navigator\";\r\nimport { ButtonInput } from \"../../components/form-button.component\";\r\nimport { AppRoute } from \"../../navigation/app-routes\";\r\nimport * as GameSockClient from '@rossmacd/gamesock-client'\r\nimport { ModalHeaderLobby } from \"../../components/modal-header-lobby.component\";\r\nimport LoadingComponent from \"../../components/loading.component\";\r\n\r\n\r\n/**\r\n * Importing styles\r\n * @param theme path\r\n * @param App Module name\r\n */\r\nconst styles = require(\"../../themes\")(\"Game\");\r\n\r\ninterface IActions extends LobbyScreenProps {\r\n  setGameLoading: () => void;\r\n  leaveGame: () => void;\r\n  startHostGame: (lobbyName: string) => void;\r\n}\r\n\r\n/**\r\n * Interface for props being\r\n * passed to to the lobby component\r\n */\r\ninterface IProps {\r\n  players: IPlayer[];\r\n  isLoading: boolean;\r\n  isHost: boolean;\r\n  lobbyName: string;\r\n  roundOver: boolean;\r\n  roundOptions: GameSockClient.RoundOptions | undefined; \r\n  numOfRounds: number;\r\n  timer: number\r\n}\r\n\r\nconst LobbyScreen = (props: IProps & IActions) => {\r\n  const renderItemIcon = (props: IconProps) => (\r\n    <Icon {...props} name=\"person\" />\r\n  );\r\n\r\n  const renderListItemPoints = (score: number) => (\r\n    <Text>{score} points</Text>\r\n  )\r\n\r\n  const renderItem = ({ item }: any) => {\r\n    if(props.roundOver) return <ListItem style={styles.listItem} title={item.name} accessoryLeft={renderItemIcon} accessoryRight={() => renderListItemPoints(item.score)} />\r\n\r\n\r\n    return <ListItem style={styles.listItem} title={item.name} accessoryLeft={renderItemIcon} />\r\n  }\r\n\r\n  const endGame = () => {\r\n    props.setGameLoading();\r\n    props.leaveGame();\r\n    props.navigation.navigate(AppRoute.HOME);\r\n  };\r\n\r\n  const startGame = () => {\r\n    props.setGameLoading();\r\n    GameSockClient.startGame(props.lobbyName)\r\n    props.navigation.navigate(AppRoute.GAME);\r\n  };\r\n\r\n  const gameIsFinished = props.roundOptions\r\n  ? (props.roundOptions.roundNum < props.numOfRounds) \r\n  : false\r\n\r\n  const renderModalTitle = () => {\r\n    if(!gameIsFinished && props.roundOver) {\r\n      if(props.timer <= 0) return 'Starting next round...'\r\n      return 'Next round starts in'\r\n    }\r\n    if(gameIsFinished) return 'LEADERBOARD'\r\n    return 'Send this code to your friends:'\r\n  }\r\n\r\n  const renderModalCode = () => {\r\n    if(!gameIsFinished && props.roundOver) {\r\n      return props.timer <= 0 ? '0' : `${props.timer}` \r\n    }\r\n    return props.lobbyName\r\n  }\r\n\r\n  let players: IPlayer[] = props.players;\r\n  if (players.length < 4)\r\n    players = [\r\n      ...players,\r\n      ...new Array(3).fill({ name: \"Waiting for player...\" }),\r\n    ];\r\n  if(props.roundOver) {\r\n    players.sort((a, b) => b.score - a.score)\r\n  }\r\n\r\n\r\n\r\n  const readyToPlay = props.players.length > 3;\r\n  if(props.lobbyName === \"\") return <LoadingComponent text=\"Loading Lobby...\" />\r\n  return (\r\n    <Layout style={styles.container}>\r\n      <ModalHeaderLobby\r\n        text={renderModalTitle()}\r\n        lobbyCode={renderModalCode()}\r\n        buttonText={props.isHost ? \"End Game\" : \"Leave Lobby\"}\r\n        loading={false}\r\n        disabled={props.isLoading}\r\n        isLeaderboard={props.roundOver}\r\n        icon=\"close-outline\"\r\n        status=\"danger\"\r\n        onPress={() => endGame()}\r\n      />\r\n\r\n      <List\r\n        style={styles.listContainer}\r\n        data={players}\r\n        renderItem={renderItem}\r\n      />\r\n\r\n      {props.isHost ? (\r\n        <ButtonInput\r\n          style={styles.submitButton}\r\n          status='success'\r\n          onPress={startGame}\r\n          disabled={(props.isLoading || !readyToPlay) || (!props.roundOver ? gameIsFinished : false)}\r\n          loading={props.isLoading}\r\n          text={\r\n            readyToPlay\r\n              ? props.roundOver ? `${gameIsFinished ? 'START NEW GAME' : `GET READY FOR ROUND ${props.numOfRounds}`}` : 'PLAY TIME!'\r\n              : `WAITING FOR ${4 - props.players.length} PLAYER${\r\n                    4 - props.players.length > 1 ? \"S\" : \"\"\r\n                }`\r\n          }\r\n        />\r\n      ) : (\r\n        <ButtonInput\r\n          style={styles.submitButtonJoined}\r\n          status='success'\r\n          size='small'\r\n          disabled={(props.isLoading || !readyToPlay) || (!props.roundOver ? gameIsFinished : false)}\r\n          loading={props.isLoading}\r\n          text={\r\n            readyToPlay\r\n              ? props.roundOver ? `${gameIsFinished ? 'WAITING FOR HOST...' : `GET READY FOR ROUND ${props.numOfRounds}`}` : 'WAITING FOR HOST...'\r\n              : `WAITING FOR ${4 - props.players.length} PLAYER${\r\n                4 - props.players.length > 1 ? \"S\" : \"\"\r\n                }`\r\n          }\r\n        />\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\n/**\r\n * Return a list of people from our redux state\r\n *\r\n * @param {*} state\r\n */\r\nconst mapStateToProps = (state: IInitialState): IProps => {\r\n  const { players, isLoading, isHost, lobbyName, roundOver, roundOptions, numOfRounds, timer } = state.game;\r\n\r\n  return {\r\n    players,\r\n    isLoading,\r\n    isHost,\r\n    lobbyName,\r\n    roundOver,roundOptions, numOfRounds,\r\n    timer\r\n  };\r\n};\r\n\r\nexport default connect<IProps, IActions>(\r\n  mapStateToProps,\r\n  gameActions\r\n)(LobbyScreen);\r\n","/*\r\n * File: picked-players.component.tsx\r\n * Project: frontend\r\n * Version: 1.0.0\r\n * File Created: Friday, 5th June 2020 11:13:02 am\r\n * Author: Eoan O'Dea - eoan@wspace.ie\r\n * ---------------\r\n * File Description: Component for picked players during a game\r\n * Last Modified: Friday, 5th June 2020 11:13:07 am\r\n * Modified By: Eoan O'Dea - eoan@wspace.ie\r\n * ---------------\r\n * Copyright 2020 - WebSpace\r\n */\r\n\r\nimport { IPlayer } from \"../reducers/interfaces\";\r\nimport { Layout, Card, Text, Button } from \"@ui-kitten/components\";\r\nimport React from \"react\";\r\nimport { View } from \"react-native\";\r\nimport { Player, Question } from \"@rossmacd/gamesock-client\";\r\n\r\n/**\r\n * Importing styles\r\n * @param theme path\r\n * @param App Module name\r\n */\r\nconst styles = require(\"../themes\")(\"Game\");\r\n\r\n/**\r\n * Interface actions\r\n * for the component\r\n */\r\ninterface IActions {\r\n  answerQuestion?: (questionIndex: number, playerId: number) => void;\r\n}\r\n\r\n/**\r\n * Interface for props being\r\n * passed to to the picked players component\r\n */\r\ninterface IProps {\r\n  players: [Player, Player] | undefined;\r\n  question?: Question;\r\n  questionIndex?: number;\r\n  user: Player;\r\n  canAnswer?: boolean;\r\n}\r\n\r\nconst PickedPlayers = (props: IProps & IActions) => {\r\n  const canSelectAnswer = props.players?.some(\r\n    (player) => player.id === props.user.id\r\n  );\r\n\r\n  /**\r\n   * When a player selects an answer\r\n   *\r\n   * @param {number} i\r\n   */\r\n  const onSelectPlayer = (i: number) => {\r\n    if (canSelectAnswer && props.canAnswer && props.answerQuestion) {\r\n      props.answerQuestion(props.questionIndex!, i);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Renders the text title for ingame picked players\r\n   */\r\n  const renderTextTitle = () => {\r\n    if (props.question?.question)\r\n      return (\r\n        <React.Fragment>\r\n          <Text style={styles.titleNotChosen}>\r\n            {canSelectAnswer\r\n                ? props.canAnswer\r\n                ? \"\"\r\n                : \"Waiting for next question...\"\r\n                : \"Waiting for players to answer...\"}\r\n          </Text>\r\n          \r\n          <Text style={styles.question}>{props.question.question}</Text>\r\n        </React.Fragment>\r\n      );\r\n\r\n    return (\r\n      // <Text style={styles.title}>Picked Players</Text>\r\n      <Text style={styles.titleChosenYellow}>CHOSEN <Text style={styles.titleChosenRed}>VICTIMS</Text></Text>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Layout style={styles.container}>\r\n      {renderTextTitle()}\r\n\r\n      <View style={styles.pickedPlayerContainer}>\r\n        {props.players?.map((player, i) => {\r\n          const isPlayer = player.id === props.user.id;\r\n\r\n          if (canSelectAnswer)\r\n            return (\r\n              <View style={styles.pickedPlayer} key={i}>\r\n\r\n                <Button\r\n                  disabled={!props.canAnswer}\r\n                  style={[\r\n                    styles.pickedPlayerCard,\r\n                    i === 0 ? styles.cardPink : styles.cardPurple,\r\n                  ]}\r\n                  size=\"giant\"\r\n                  onPress={() => onSelectPlayer(i)}\r\n                >\r\n                  {player.name}\r\n                </Button>\r\n\r\n                <Text\r\n                  style={[\r\n                    styles.belowCardText,\r\n                    i === 0 ? styles.alignLeft : styles.alignRight,\r\n                  ]}\r\n                  appearance=\"hint\"\r\n                >\r\n                  {player.name} {isPlayer ? \"(You)\" : \"\"}\r\n                </Text>\r\n              </View>\r\n            );\r\n\r\n          return (\r\n            <View style={styles.pickedPlayer} key={i}>\r\n\r\n              <Card\r\n                style={[\r\n                  styles.pickedPlayerCard,\r\n                  i === 0 ? styles.cardPink : styles.cardPurple,\r\n                ]}\r\n                onPress={() => onSelectPlayer(i)}\r\n              >\r\n                <Text style={styles.title}>{player.name}</Text>\r\n              </Card>\r\n\r\n              <Text\r\n                style={[\r\n                  styles.belowCardText,\r\n                  i === 0 ? styles.alignLeft : styles.alignRight,\r\n                ]}\r\n                appearance=\"hint\"\r\n              >\r\n                {player.name} {isPlayer ? \"(You)\" : \"\"}\r\n              </Text>\r\n            </View>\r\n          );\r\n        })}\r\n      </View>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default PickedPlayers;\r\n","import * as Yup from 'yup';\r\n\r\nexport class QuestionInputData {\r\n\r\n  constructor(\r\n    readonly questionInput: string) {\r\n\r\n  }\r\n\r\n  static empty(): QuestionInputData {\r\n    return new QuestionInputData(\r\n      'Who\\'s more likely to',\r\n    );\r\n  }\r\n}\r\n\r\nexport const QuestionSchema = Yup.object().shape({\r\n    questionInput: Yup.string().matches(/^Who's more likely.*$/, { message: 'Question must start with \\\"Whos\\'s more likely\\\"' }).required('Question is required')\r\n});\r\n","/*\r\n * File: shuffle-question.helper.ts\r\n * Project: frontend\r\n * Version: 1.0.0\r\n * File Created: Wednesday, 10th June 2020 4:10:12 pm\r\n * Author: Eoan O'Dea - eoan@wspace.ie\r\n * ---------------\r\n * File Description: Shuffles a question with a random verb and noun\r\n * Last Modified: Wednesday, 10th June 2020 4:10:22 pm\r\n * Modified By: Eoan O'Dea - eoan@wspace.ie\r\n * ---------------\r\n * Copyright 2020 - WebSpace\r\n */\r\n\r\n/**\r\n * Array of Nouns\r\n */\r\nconst objects = [\r\n  \"Christmas ornament\",\r\n  \"bag of popcorn\",\r\n  \"bag of rubber bands\",\r\n  \"balloon\",\r\n  \"banana\",\r\n  \"bangle bracelet\",\r\n  \"bar of soap\",\r\n  \"beaded necklace\",\r\n  \"bed\",\r\n  \"bell\",\r\n  \"blowdryer\",\r\n  \"book of jokes\",\r\n  \"book of matches\",\r\n  \"bottle\",\r\n  \"bottle cap\",\r\n  \"bottle of glue\",\r\n  \"bottle of honey\",\r\n  \"bottle of nail polish\",\r\n  \"bottle of oil\",\r\n  \"bottle of paint\",\r\n  \"bottle of pills\",\r\n  \"bottle of soda\",\r\n  \"bottle of sunscreen\",\r\n  \"bottle of water\",\r\n  \"bouquet of flowers\",\r\n  \"bowl\",\r\n  \"box\",\r\n  \"box of baking soda\",\r\n  \"box of chalk\",\r\n  \"box of crayons\",\r\n  \"box of tissues\",\r\n  \"bread\",\r\n  \"broccoli\",\r\n  \"brush\",\r\n  \"butter knife\",\r\n  \"camera\",\r\n  \"can of beans\",\r\n  \"can of chili\",\r\n  \"can of peas\",\r\n  \"can of whipped cream\",\r\n  \"candle\",\r\n  \"candlestick\",\r\n  \"car\",\r\n  \"cars\",\r\n  \"carton of ice cream\",\r\n  \"cat\",\r\n  \"chain\",\r\n  \"chicken\",\r\n  \"children's book\",\r\n  \"chocolate\",\r\n  \"year tutor hat\",\r\n  \"clock\",\r\n  \"coffee pot\",\r\n  \"computer\",\r\n  \"container of pudding\",\r\n  \"cookie jar\",\r\n  \"cookie tin\",\r\n  \"cow\",\r\n  \"cowboy hat\",\r\n  \"craft book\",\r\n  \"credit card\",\r\n  \"crow\",\r\n  \"crowbar\",\r\n  \"dagger\",\r\n  \"dictionary\",\r\n  \"dog\",\r\n  \"domino set\",\r\n  \"door\",\r\n  \"drawer\",\r\n  \"drill press\",\r\n  \"feather\",\r\n  \"few batteries\",\r\n  \"fish\",\r\n  \"fishing hook\",\r\n  \"flag\",\r\n  \"flashlight\",\r\n  \"flyswatter\",\r\n  \"football\",\r\n  \"fork\",\r\n  \"fridge\",\r\n  \"frying pan\",\r\n  \"garden spade\",\r\n  \"giraffe\",\r\n  \"glass\",\r\n  \"glow stick\",\r\n  \"grocery list\",\r\n  \"hair brush\",\r\n  \"hair clip\",\r\n  \"hammer\",\r\n  \"hamster\",\r\n  \"hand bag\",\r\n  \"handful of change\",\r\n  \"hanger\",\r\n  \"harmonica\",\r\n  \"helmet\",\r\n  \"house\",\r\n  \"ipod\",\r\n  \"ipod charger\",\r\n  \"jar of jam\",\r\n  \"jar of peanut butter\",\r\n  \"jar of pickles\",\r\n  \"jigsaw puzzle\",\r\n  \"key\",\r\n  \"keyboard\",\r\n  \"keychain\",\r\n  \"kitchen knife\",\r\n  \"knife\",\r\n  \"lamp shade\",\r\n  \"laser pointer\",\r\n  \"lemon\",\r\n  \"letter opener\",\r\n  \"light bulb\",\r\n  \"lighter\",\r\n  \"lime\",\r\n  \"lion\",\r\n  \"magazine\",\r\n  \"magnet\",\r\n  \"marble\",\r\n  \"martini glass\",\r\n  \"microphone\",\r\n  \"milk\",\r\n  \"mirror\",\r\n  \"mobile phone\",\r\n  \"model car\",\r\n  \"money\",\r\n  \"mop\",\r\n  \"mouse pad\",\r\n  \"nail clippers\",\r\n  \"necktie\",\r\n  \"needle\",\r\n  \"notebook\",\r\n  \"notepad\",\r\n  \"novel\",\r\n  \"pack of cards\",\r\n  \"package of crisp and crunchy edibles\",\r\n  \"bag of spuddys\",\r\n  \"packet of seeds\",\r\n  \"paintbrush\",\r\n  \"pair of binoculars\",\r\n  \"pair of dice\",\r\n  \"pair of earrings\",\r\n  \"pair of glasses\",\r\n  \"pair of handcuffs\",\r\n  \"pair of knitting needles\",\r\n  \"pair of rubber gloves\",\r\n  \"pair of safety goggles\",\r\n  \"pair of scissors\",\r\n  \"pair of socks\",\r\n  \"pair of sunglasses\",\r\n  \"pair of water goggles\",\r\n  \"panda\",\r\n  \"pants\",\r\n  \"paper\",\r\n  \"pasta strainer\",\r\n  \"pearl necklace\",\r\n  \"pen\",\r\n  \"pencil holder\",\r\n  \"pepper shaker\",\r\n  \"perfume\",\r\n  \"phone\",\r\n  \"photo album\",\r\n  \"picture frame\",\r\n  \"piece of gum\",\r\n  \"pillow\",\r\n  \"pinecone\",\r\n  \"plastic fork\",\r\n  \"plush octopus\",\r\n  \"pocketknife\",\r\n  \"pocketwatch\",\r\n  \"pool stick\",\r\n  \"postage stamp\",\r\n  \"purse\",\r\n  \"purse/bag\",\r\n  \"quartz crystal\",\r\n  \"rabbit\",\r\n  \"radio\",\r\n  \"rat\",\r\n  \"remote\",\r\n  \"rhino\",\r\n  \"rock\",\r\n  \"roll of duct tape\",\r\n  \"roll of masking tape\",\r\n  \"roll of stickers\",\r\n  \"roll of toilet paper\",\r\n  \"rolling pin\",\r\n  \"rope\",\r\n  \"rubber band\",\r\n  \"rubber duck\",\r\n  \"rusty nail\",\r\n  \"safety pin\",\r\n  \"sailboat\",\r\n  \"salt shaker\",\r\n  \"sandal\",\r\n  \"sandglass\",\r\n  \"scarf\",\r\n  \"scotch tape\",\r\n  \"screw\",\r\n  \"screwdriver\",\r\n  \"seat belt\",\r\n  \"shark\",\r\n  \"sharpie\",\r\n  \"sheep\",\r\n  \"sheet of paper\",\r\n  \"shirt\",\r\n  \"shirt button\",\r\n  \"shoe lace\",\r\n  \"shoes\",\r\n  \"shopping bag\",\r\n  \"shovel\",\r\n  \"sidewalk\",\r\n  \"sketch pad\",\r\n  \"slipper\",\r\n  \"snail shell\",\r\n  \"snowglobe\",\r\n  \"soccer ball\",\r\n  \"socks\",\r\n  \"spatula\",\r\n  \"spice bottle\",\r\n  \"sponge\",\r\n  \"spoon\",\r\n  \"squirrel\",\r\n  \"squirt gun\",\r\n  \"steak knife\",\r\n  \"stick of incense\",\r\n  \"sticker book\",\r\n  \"sticky note\",\r\n  \"stockings\",\r\n  \"stop sign\",\r\n  \"straw\",\r\n  \"sun glasses\",\r\n  \"sword\",\r\n  \"tea cup\",\r\n  \"tea pot\",\r\n  \"television\",\r\n  \"tennis ball\",\r\n  \"tennis racket\",\r\n  \"thermometer\",\r\n  \"thimble\",\r\n  \"thread\",\r\n  \"tiger\",\r\n  \"tire swing\",\r\n  \"tissue box\",\r\n  \"toe ring\",\r\n  \"toilet\",\r\n  \"toilet paper tube\",\r\n  \"tomato\",\r\n  \"tooth pick\",\r\n  \"toothbrush\",\r\n  \"toothpaste\",\r\n  \"toothpick\",\r\n  \"towel\",\r\n  \"toy car\",\r\n  \"toy plane\",\r\n  \"toy soldier\",\r\n  \"toy top\",\r\n  \"trash bag\",\r\n  \"tree\",\r\n  \"trucks\",\r\n  \"tube of lip balm\",\r\n  \"tube of lipstick\",\r\n  \"turtle\",\r\n  \"tv\",\r\n  \"vase\",\r\n  \"wallet\",\r\n  \"washcloth\",\r\n  \"washing machine\",\r\n  \"watch\",\r\n  \"water bottle\",\r\n  \"wedding ring\",\r\n  \"whale\",\r\n  \"whistle\",\r\n  \"window\",\r\n  \"wine glass\",\r\n  \"wireless control\",\r\n  \"wooden spoon\",\r\n  \"word search\",\r\n  \"wrench\",\r\n  \"wristwatch\",\r\n  \"zebra\",\r\n  \"zipper\",\r\n];\r\n\r\n/**\r\n * Array of Verbs\r\n */\r\nconst verbs = [\r\n  \"accept\",\r\n  \"add\",\r\n  \"admire\",\r\n  \"admit\",\r\n  \"advise\",\r\n  \"afford\",\r\n  \"agree\",\r\n  \"alert\",\r\n  \"allow\",\r\n  \"ask\",\r\n  \"attach\",\r\n  \"attack\",\r\n  \"attempt\",\r\n  \"attend\",\r\n  \"attract\",\r\n  \"avoid\",\r\n  \"back\",\r\n  \"bake\",\r\n  \"balance\",\r\n  \"ban\",\r\n  \"bang\",\r\n  \"bare\",\r\n  \"bat\",\r\n  \"bathe\",\r\n  \"battle\",\r\n  \"beam\",\r\n  \"beg\",\r\n  \"behave\",\r\n  \"belong\",\r\n  \"bleach\",\r\n  \"bless\",\r\n  \"blind\",\r\n  \"blink\",\r\n  \"blot\",\r\n  \"blush\",\r\n  \"boast\",\r\n  \"boil\",\r\n  \"bolt\",\r\n  \"bomb\",\r\n  \"book\",\r\n  \"bore\",\r\n  \"change\",\r\n  \"charge\",\r\n  \"chase\",\r\n  \"cheat\",\r\n  \"check\",\r\n  \"cheer\",\r\n  \"chew\",\r\n  \"choke\",\r\n  \"chop\",\r\n  \"claim\",\r\n  \"clap\",\r\n  \"clean\",\r\n  \"coil\",\r\n  \"collect\",\r\n  \"colour\",\r\n  \"comb\",\r\n  \"command\",\r\n  \"communicate\",\r\n  \"compare\",\r\n  \"compete\",\r\n  \"complain\",\r\n  \"complete\",\r\n  \"concentrate\",\r\n  \"concern\",\r\n  \"confess\",\r\n  \"confuse\",\r\n  \"connect\",\r\n  \"decay\",\r\n  \"deceive\",\r\n  \"decide\",\r\n  \"decorate\",\r\n  \"delay\",\r\n  \"delight\",\r\n  \"deliver\",\r\n  \"depend\",\r\n  \"describe\",\r\n  \"desert\",\r\n  \"dust\",\r\n  \"fear\",\r\n  \"fence\",\r\n  \"fetch\",\r\n  \"file\",\r\n  \"fill\",\r\n  \"film\",\r\n  \"fire\",\r\n  \"fit\",\r\n  \"fix\",\r\n  \"flap\",\r\n  \"flash\",\r\n  \"float\",\r\n  \"flood\",\r\n  \"flow\",\r\n  \"flower\",\r\n  \"fold\",\r\n  \"follow\",\r\n  \"fool\",\r\n  \"glue\",\r\n  \"grab\",\r\n  \"grate\",\r\n  \"grease\",\r\n  \"harass\",\r\n  \"harm\",\r\n  \"hate\",\r\n  \"haunt\",\r\n  \"head\",\r\n  \"heal\",\r\n  \"heap\",\r\n  \"heat\",\r\n  \"help\",\r\n  \"hook\",\r\n  \"hop\",\r\n  \"hope\",\r\n  \"hover\",\r\n  \"hug\",\r\n  \"hum\",\r\n  \"hunt\",\r\n  \"hurry\",\r\n  \"identify\",\r\n  \"ignore\",\r\n  \"imagine\",\r\n  \"impress\",\r\n  \"improve\",\r\n  \"include\",\r\n  \"increase\",\r\n  \"interest\",\r\n  \"interfere\",\r\n  \"interrupt\",\r\n  \"introduce\",\r\n  \"invent\",\r\n  \"invite\",\r\n  \"irritate\",\r\n  \"learn\",\r\n  \"level\",\r\n  \"license\",\r\n  \"lick\",\r\n  \"lie\",\r\n  \"lighten\",\r\n  \"like\",\r\n  \"list\",\r\n  \"manage\",\r\n  \"march\",\r\n  \"mark\",\r\n  \"marry\",\r\n  \"match\",\r\n  \"mate\",\r\n  \"matter\",\r\n  \"measure\",\r\n  \"meddle\",\r\n  \"melt\",\r\n  \"memorise\",\r\n  \"mend\",\r\n  \"mess up\",\r\n  \"milk\",\r\n  \"mine\",\r\n  \"miss\",\r\n  \"mix\",\r\n  \"mug\",\r\n  \"multiply\",\r\n  \"murder\",\r\n  \"nail\",\r\n  \"name\",\r\n  \"need\",\r\n  \"nest\",\r\n  \"nod\",\r\n  \"note\",\r\n  \"notice\",\r\n  \"number\",\r\n  \"obey\",\r\n  \"object\",\r\n  \"peck\",\r\n  \"pedal\",\r\n  \"peel\",\r\n  \"peep\",\r\n  \"perform\",\r\n  \"permit\",\r\n  \"phone\",\r\n  \"pick\",\r\n  \"pinch\",\r\n  \"pine\",\r\n  \"place\",\r\n  \"plan\",\r\n  \"plant\",\r\n  \"play\",\r\n  \"please\",\r\n  \"pour\",\r\n  \"practise\",\r\n  \"pray\",\r\n  \"preach\",\r\n  \"precede\",\r\n  \"prefer\",\r\n  \"prepare\",\r\n  \"present\",\r\n  \"preserve\",\r\n  \"press\",\r\n  \"pretend\",\r\n  \"prevent\",\r\n  \"prick\",\r\n  \"print\",\r\n  \"produce\",\r\n  \"program\",\r\n  \"promise\",\r\n  \"protect\",\r\n  \"provide\",\r\n  \"pull\",\r\n  \"pump\",\r\n  \"punch\",\r\n  \"race\",\r\n  \"radiate\",\r\n  \"rain\",\r\n  \"release\",\r\n  \"rely\",\r\n  \"remain\",\r\n  \"remember\",\r\n  \"remind\",\r\n  \"remove\",\r\n  \"repair\",\r\n  \"repeat\",\r\n  \"replace\",\r\n  \"reply\",\r\n  \"report\",\r\n  \"reproduce\",\r\n  \"request\",\r\n  \"rescue\",\r\n  \"retire\",\r\n  \"return\",\r\n  \"rhyme\",\r\n  \"rinse\",\r\n  \"risk\",\r\n  \"rob\",\r\n  \"rock\",\r\n  \"roll\",\r\n  \"rot\",\r\n  \"rub\",\r\n  \"satisfy\",\r\n  \"save\",\r\n  \"saw\",\r\n  \"scare\",\r\n  \"scatter\",\r\n  \"scold\",\r\n  \"scorch\",\r\n  \"scrape\",\r\n  \"scratch\",\r\n  \"scream\",\r\n  \"screw\",\r\n  \"scribble\",\r\n  \"scrub\",\r\n  \"seal\",\r\n  \"smell\",\r\n  \"smile\",\r\n  \"smoke\",\r\n  \"snatch\",\r\n  \"sneeze\",\r\n  \"sniff\",\r\n  \"snore\",\r\n  \"snow\",\r\n  \"soak\",\r\n  \"soothe\",\r\n  \"sound\",\r\n  \"spare\",\r\n  \"spark\",\r\n  \"sparkle\",\r\n  \"spell\",\r\n  \"spill\",\r\n  \"spoil\",\r\n  \"spot\",\r\n  \"spray\",\r\n  \"sprout\",\r\n  \"squash\",\r\n  \"squeak\",\r\n  \"squeal\",\r\n  \"squeeze\",\r\n  \"stain\",\r\n  \"stamp\",\r\n  \"stare\",\r\n  \"start\",\r\n  \"support\",\r\n  \"suppose\",\r\n  \"surprise\",\r\n  \"surround\",\r\n  \"suspect\",\r\n  \"suspend\",\r\n  \"switch\",\r\n  \"talk\",\r\n  \"tame\",\r\n  \"tap\",\r\n  \"taste\",\r\n  \"tease\",\r\n  \"transport\",\r\n  \"trap\",\r\n  \"travel\",\r\n  \"treat\",\r\n  \"tremble\",\r\n  \"trick\",\r\n  \"trip\",\r\n  \"trot\",\r\n  \"trouble\",\r\n  \"trust\",\r\n  \"try\",\r\n  \"tug\",\r\n  \"whistle\",\r\n  \"wack'm\",\r\n  \"wink\",\r\n  \"wipe\",\r\n  \"wish\",\r\n  \"wobble\",\r\n  \"wonder\",\r\n  \"work\",\r\n  \"worry\",\r\n  \"wrap\",\r\n  \"wreck\",\r\n  \"wrestle\",\r\n  \"wriggle\",\r\n  \"x-ray\",\r\n  \"zoom\",\r\n];\r\n\r\n/**\r\n * Generate a random question using the array of verbs and nouns\r\n */\r\nconst shuffleQuestion = () => {\r\n  const randFromAr = (array: any[]) =>\r\n    array[Math.floor(Math.random() * array.length)];\r\n  const randomQuestion = () => {\r\n    return `Who's more likely to ${randFromAr(verbs)} a ${randFromAr(\r\n      objects\r\n    )}?`;\r\n  };\r\n\r\n  return randomQuestion();\r\n};\r\n\r\nexport default shuffleQuestion\r\n","/*\r\n * File: question-input.component.tsx\r\n * Project: frontend\r\n * Version: 1.0.0\r\n * File Created: Friday, 5th June 2020 11:13:02 am\r\n * Author: Ross MacDonald\r\n * ---------------\r\n * File Description: Component filling out questions in game\r\n * Last Modified: Friday, 5th June 2020 11:13:07 am\r\n * Modified By: Eoan O'Dea - eoan@wspace.ie\r\n * ---------------\r\n * Copyright 2020 - WebSpace\r\n */\r\n\r\nimport { Layout, Button, IconProps, Icon, Text } from \"@ui-kitten/components\";\r\nimport React from \"react\";\r\nimport { Formik, FormikProps } from \"formik\";\r\nimport { QuestionSchema, QuestionInputData } from \"../data/question-input.model\";\r\nimport { FormInput } from \"./form-input.component\";\r\nimport { IInitialState, IPlayer } from \"../reducers/interfaces\";\r\nimport { gameActions } from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { ButtonInput } from \"./form-button.component\";\r\nimport { View, KeyboardAvoidingView } from \"react-native\";\r\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\r\nimport { Question, RoundOptions } from \"@rossmacd/gamesock-client\";\r\nimport shuffleQuestion from \"../helpers/shuffle-question.helper\";\r\n\r\n/**\r\n * Importing styles\r\n * @param theme path\r\n * @param Form Module name\r\n */\r\nconst styles = require(\"../themes\")(\"Game\");\r\n\r\n/**\r\n * Interface actions\r\n * for the component\r\n */\r\ninterface IActions {\r\n  setGameLoading: () => void;\r\n  inputQuestion: ({ question }: Question) => void;\r\n}\r\n\r\n/**\r\n * Interface Props\r\n * for the component\r\n */\r\ninterface IProps {\r\n  isLoading: boolean;\r\n  questionInput: string;\r\n  questions: Question[];\r\n  user: IPlayer;\r\n  roundOptions: RoundOptions;\r\n}\r\n\r\nconst QuesionInput = (props: IProps & IActions) => {\r\n  const submit = (values: { questionInput: string }) => {\r\n    console.log(\"submitting!!!\");\r\n    props.setGameLoading();\r\n\r\n    const question: Question = {\r\n      playerId: props.user.id,\r\n      question: values.questionInput,\r\n    };\r\n\r\n    props.inputQuestion(question);\r\n  };\r\n\r\n  const renderShuffleIcon = (props: IconProps): React.ReactElement => (\r\n    <Icon {...props} name=\"shuffle-2-outline\" />\r\n  );\r\n\r\n  const { isLoading, questionInput, roundOptions, questions } = props;\r\n\r\n  const renderForm = (\r\n    props: FormikProps<QuestionInputData>\r\n  ): React.ReactFragment => {\r\n    const loading = isLoading || props.isSubmitting;\r\n\r\n    if (isLoading === false && props.isSubmitting === true)\r\n      props.setSubmitting(false);\r\n    if (roundOptions.numQuestions <= questions.length)\r\n      return (\r\n        <Text style={styles.inputTitle}>Waiting for other players...</Text>\r\n      );\r\n    return (\r\n      <View style={styles.questionInputContainer}>\r\n        {/* // <KeyboardAwareScrollView\r\n            //     style={{ backgroundColor: '#4c69a5' }}\r\n            //     resetScrollToCoords={{ x: 0, y: 0 }}\r\n            //     contentContainerStyle={styles.questionInputContainer}\r\n            //     // scrollEnabled={false}\r\n            // > */}\r\n        {/* // <KeyboardAvoidingView behavior='padding' style={styles.questionInputContainer}> */}\r\n\r\n        <Button\r\n          accessoryLeft={renderShuffleIcon}\r\n          onPress={() => {\r\n            props.setValues({ questionInput: shuffleQuestion() });\r\n          }}\r\n          status=\"danger\"\r\n          disabled={loading}\r\n          style={styles.questionInputButton}\r\n        />\r\n        <FormInput\r\n          id=\"questionInput\"\r\n          style={[styles.questionInput]}\r\n          size=\"large\"\r\n          placeholder=\"Insert your question\"\r\n          value={props.values.questionInput}\r\n        />\r\n        <ButtonInput\r\n          icon=\"checkmark-outline\"\r\n          disabled={loading}\r\n          loading={loading}\r\n          text=\"\"\r\n          onPress={() => props.handleSubmit()}\r\n          status=\"success\"\r\n          style={styles.questionInputButton}\r\n        />\r\n\r\n        {/* // </KeyboardAvoidingView> */}\r\n        {/* </KeyboardAwareScrollView> */}\r\n      </View>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Layout style={styles.inputContainer}>\r\n      <Text style={{color: \"#D7D98B\"}}>\r\n        No. of your <Text style={{color: '#AD0D4B'}}>Questions</Text>: {props.questions.length} /{\" \"}\r\n        {props.roundOptions.numQuestions}\r\n      </Text>\r\n      <Formik\r\n        initialValues={{ questionInput: questionInput }}\r\n        validationSchema={QuestionSchema}\r\n        onSubmit={(values, actions) => {\r\n          submit(values);\r\n          actions.setValues({ questionInput: questionInput });\r\n        }}\r\n      >\r\n        {renderForm}\r\n      </Formik>\r\n    </Layout>\r\n  );\r\n};\r\n\r\n/**\r\n * Return a list of people from our redux state\r\n *\r\n * @param {*} state\r\n */\r\nconst mapStateToProps = (state: IInitialState): IProps => {\r\n  const {\r\n    isLoading,\r\n    questionInput,\r\n    questions,\r\n    user,\r\n    roundOptions,\r\n  } = state.game;\r\n\r\n  return {\r\n    isLoading,\r\n    questionInput,\r\n    questions,\r\n    user,\r\n    roundOptions,\r\n  };\r\n};\r\n\r\nexport default connect<IProps, IActions, {}>(\r\n  mapStateToProps,\r\n  gameActions\r\n)(QuesionInput);\r\n","/*\r\n * File: game.component.tsx\r\n * Project: frontend\r\n * Version: 1.0.0\r\n * File Created: Friday, 5th June 2020 11:54:27 am\r\n * Author: Eoan O'Dea - eoan@wspace.ie\r\n * ---------------\r\n * File Description: In game controller during a game\r\n * Last Modified: Friday, 5th June 2020 11:54:36 am\r\n * Modified By: Eoan O'Dea - eoan@wspace.ie\r\n * ---------------\r\n * Copyright 2020 - WebSpace\r\n */\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Layout, Text, Spinner } from \"@ui-kitten/components\";\r\nimport PickedPlayers from \"../../components/picked-players.component\";\r\nimport { IPlayer, IInitialState } from \"../../reducers/interfaces\";\r\nimport { connect } from \"react-redux\";\r\nimport QuestionInput from \"../../components/question-input.component\";\r\nimport { gameActions } from \"../../actions\";\r\nimport { ModalHeader } from \"../../components/modal-header.component\";\r\nimport { GameScreenProps } from \"../../navigation/game.navigator\";\r\nimport { AppRoute } from \"../../navigation/app-routes\";\r\nimport { View } from \"react-native\";\r\nimport {\r\n  onRequestQuestions,\r\n  Question,\r\n  RoundOptions,\r\n} from \"@rossmacd/gamesock-client\";\r\nimport Timer from \"../../components/timer.component\";\r\nimport shuffleQuestion from \"../../helpers/shuffle-question.helper\";\r\nimport LoadingComponent from \"../../components/loading.component\";\r\nimport { ModalHeaderLobby } from \"../../components/modal-header-lobby.component\";\r\n\r\n/**\r\n * Importing styles\r\n * @param theme path\r\n * @param App Module name\r\n */\r\nconst styles = require(\"../../themes\")(\"Game\");\r\n\r\n/**\r\n * Interface for Actions being\r\n * passed to the game screen component\r\n */\r\ninterface IActions extends GameScreenProps {\r\n  setGameLoading: () => void;\r\n  leaveGame: () => void;\r\n  answerQuestion: (\r\n    lobbyName: string,\r\n    questionIndex: number,\r\n    playerId: number\r\n  ) => void;\r\n  setPhase: (phase: string) => void;\r\n  endGame: () => void;\r\n}\r\n\r\n/**\r\n * Interface for props being\r\n * passed to to the game screen component\r\n */\r\ninterface IProps {\r\n  lobbyName: string;\r\n  phase: string;\r\n  currentQuestionId: number;\r\n  questions: Question[];\r\n  roundOptions: RoundOptions | undefined;\r\n  user: IPlayer;\r\n  canAnswer: boolean;\r\n  displayAnswer: boolean;\r\n  timer: number;\r\n}\r\n\r\nconst GameScreen = (props: IProps & IActions) => {\r\n  const [serverHasQuestions, setServerHasQuestions] = useState<boolean>(false);\r\n  const [notEnoughQuestions, setNotEnoughQuestions] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    setNotEnoughQuestions((val) => false);\r\n\r\n    onRequestQuestions(() => {\r\n      console.log(\"requesting questions\");\r\n      setServerHasQuestions((oldBool) => {\r\n        return true;\r\n      });\r\n\r\n      const { questions } = props;\r\n      \r\n      if (questions.length < props.roundOptions!.numQuestions) {\r\n        setNotEnoughQuestions((val) => true);\r\n        for (let i = props.roundOptions!.numQuestions - questions.length; i--;) {\r\n          questions.push({\r\n            playerId: props.user.id,\r\n            question: shuffleQuestion(),\r\n          });\r\n        }\r\n      }\r\n      return questions.map((question) => question.question);\r\n    });\r\n  });\r\n\r\n  const endGame = () => {\r\n    props.setGameLoading();\r\n    props.leaveGame();\r\n    props.navigation.navigate(AppRoute.HOME);\r\n  };\r\n\r\n  const answerQuestion = (questionIndex: number, playerId: number) => {\r\n    props.answerQuestion(props.lobbyName, questionIndex, playerId);\r\n  };\r\n\r\n  const gamePhaseController = () => {\r\n    const userIsInHotseat = props.roundOptions?.hotseatPlayers.some(\r\n      (player) => player.id === props.user.id\r\n    );\r\n\r\n    switch (props.phase) {\r\n      case \"Question Gathering\":\r\n        return (\r\n          <React.Fragment>\r\n            {/* <Timer serverHasQuestions={serverHasQuestions} /> */}\r\n            <PickedPlayers\r\n              user={props.user}\r\n              players={props.roundOptions?.hotseatPlayers}\r\n            />\r\n            \r\n            {notEnoughQuestions ? (\r\n              <Text style={styles.title}>\r\n                Can't think of questions? That's okay, we'll help you out!\r\n              </Text>\r\n            ) : (\r\n              <></>\r\n            )}\r\n\r\n            {!userIsInHotseat ? (\r\n              <QuestionInput />\r\n            ) : (\r\n              // Text for chosen players for when they're waiting for questions:\r\n              <Text style={styles.titleNotChosen}>\r\n                Waiting to \"destroy\" your friendship...\r\n              </Text>\r\n            )}\r\n          </React.Fragment>\r\n        );\r\n\r\n      case \"Hotseat\":\r\n        if (\r\n          props.displayAnswer &&\r\n          props.questions &&\r\n          props.questions.length > 0\r\n        ) {\r\n          return (\r\n            <React.Fragment>\r\n              <Text>\r\n                {props.questions[props.currentQuestionId].question}\r\n              </Text>\r\n              \r\n              {props.questions[props.currentQuestionId].answers.map(\r\n                (answer: number, i: number) => {\r\n                  if (answer !== null)\r\n                    return (\r\n                      <Text \r\n                        key={i}\r\n                        style={[\r\n                          styles.pleadTheFifth, \r\n                          i === 0 ? styles.pleadAlignLeft : styles.pleadAlignRight\r\n                        ]}\r\n                      >\r\n                        {\r\n                        `${props.roundOptions?.hotseatPlayers[i].name} \r\n                        selected \r\n                        ${answer === i \r\n                          ? \"themselves\" \r\n                          : props.roundOptions?.hotseatPlayers[i === 0 ? 1 : 0].name}`\r\n                      }\r\n                      </Text>\r\n                    );\r\n\r\n                  return (\r\n                    // Text for when chosen players didn't choose a player:\r\n                    <Text\r\n                      key={i}\r\n                      style={[\r\n                        styles.pleadTheFifth, \r\n                        i === 0 ? styles.pleadAlignLeft : styles.pleadAlignRight\r\n                      ]}\r\n                    >\r\n                      {`${props.roundOptions?.hotseatPlayers[i].name} pleaded the 5th`}\r\n                    </Text>\r\n                  );\r\n                }\r\n              )}\r\n            </React.Fragment>\r\n          );\r\n        }\r\n\r\n        return (\r\n          <PickedPlayers\r\n            user={props.user}\r\n            players={props.roundOptions?.hotseatPlayers}\r\n            question={props.questions[props.currentQuestionId]}\r\n            questionIndex={props.currentQuestionId}\r\n            answerQuestion={answerQuestion}\r\n            canAnswer={props.canAnswer}\r\n          />\r\n        );\r\n\r\n      case \"Disconnected\":\r\n        return <Text>Disconnected 😢</Text>;\r\n\r\n      default:\r\n        return <LoadingComponent />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout style={styles.container}>\r\n      <ModalHeaderLobby\r\n        text={props.phase}\r\n        lobbyCode={props.timer !== 0 ? `${props.timer}` : \"\"}\r\n        icon=\"close-outline\"\r\n        status=\"danger\"\r\n        onPress={() => endGame()}\r\n      />\r\n\r\n      {gamePhaseController()}\r\n    </Layout>\r\n  );\r\n};\r\n\r\n/**\r\n * Return a list of people from our redux state\r\n *\r\n * @param {*} state\r\n */\r\nconst mapStateToProps = (state: IInitialState): IProps => {\r\n  const {\r\n    timer,\r\n    user,\r\n    phase,\r\n    currentQuestionId,\r\n    questions,\r\n    roundOptions,\r\n    lobbyName,\r\n    canAnswer,\r\n    displayAnswer,\r\n  } = state.game;\r\n\r\n  return {\r\n    timer,\r\n    user,\r\n    phase,\r\n    currentQuestionId,\r\n    questions,\r\n    roundOptions,\r\n    lobbyName,\r\n    canAnswer,\r\n    displayAnswer,\r\n  };\r\n};\r\n\r\nexport default connect<IProps, IActions>(\r\n  mapStateToProps,\r\n  gameActions\r\n)(GameScreen);\r\n","/**\r\n * Import modules which can be accessed\r\n */\r\nimport HostScreen from './host.component'\r\nimport JoinScreen from './join.component'\r\nimport LobbyScreen from './lobby.component'\r\nimport GameScreen from './game.component'\r\n\r\n/**\r\n * Export these modules to the rest of the application\r\n */\r\nexport default {\r\n    HostScreen,\r\n    JoinScreen,\r\n    LobbyScreen,\r\n    GameScreen\r\n}\r\n","import React from \"react\";\r\nimport { RouteProp } from \"@react-navigation/core\";\r\nimport {\r\n  createStackNavigator,\r\n  StackNavigationProp,\r\n} from \"@react-navigation/stack\";\r\nimport { AppRoute } from \"./app-routes\";\r\nimport { AppNavigatorParams } from \"./app.navigator\";\r\nimport auth from \"../scenes/auth\";\r\nimport { connect } from \"react-redux\";\r\nimport { IInitialState } from \"../reducers/interfaces\";\r\nimport game from \"../scenes/game\";\r\nimport * as actions from \"../actions/game\";\r\n\r\ntype AuthNavigatorParams = AppNavigatorParams & {\r\n  [AppRoute.SIGN_IN]: undefined;\r\n  [AppRoute.SIGN_UP]: undefined;\r\n  [AppRoute.SIGN_OUT]: undefined;\r\n  [AppRoute.HOST]: undefined;\r\n};\r\n\r\nexport interface SignInScreenProps {\r\n  navigation: StackNavigationProp<AuthNavigatorParams, AppRoute.SIGN_IN>;\r\n  route: RouteProp<AuthNavigatorParams, AppRoute.SIGN_IN>;\r\n}\r\n\r\nexport interface RegisterScreenProps {\r\n  navigation: StackNavigationProp<AuthNavigatorParams, AppRoute.SIGN_UP>;\r\n  route: RouteProp<AuthNavigatorParams, AppRoute.SIGN_UP>;\r\n}\r\n\r\nexport interface SignoutScreenScreenProps {\r\n  navigation: StackNavigationProp<AuthNavigatorParams, AppRoute.SIGN_OUT>;\r\n  route: RouteProp<AuthNavigatorParams, AppRoute.SIGN_OUT>;\r\n}\r\n\r\ninterface IGameActions {\r\n  initGameSock: () => void;\r\n}\r\n\r\nexport interface IAuthProps {\r\n  token: string;\r\n  init: boolean;\r\n}\r\n\r\nconst Stack = createStackNavigator<AuthNavigatorParams>();\r\n\r\nconst Auth = (props: IAuthProps & IGameActions): React.ReactElement => {\r\n  if (!props.init) props.initGameSock();\r\n  return (\r\n    <Stack.Navigator\r\n      headerMode=\"none\"\r\n      screenOptions={{ animationEnabled: true }}\r\n    >\r\n      {!props.token || props.token == \"\" ? (\r\n        <>\r\n          <Stack.Screen name={AppRoute.SIGN_IN} component={auth.SignInScreen} />\r\n          <Stack.Screen\r\n            name={AppRoute.SIGN_UP}\r\n            component={auth.RegisterScreen}\r\n          />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Stack.Screen name={AppRoute.HOST} component={game.LobbyScreen} />\r\n        </>\r\n      )}\r\n    </Stack.Navigator>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: IInitialState): IAuthProps => {\r\n  const { token } = state.auth;\r\n  const { init } = state.game;\r\n\r\n  return { token, init };\r\n};\r\n\r\nconst AuthNavigator = connect(mapStateToProps, actions)(Auth);\r\n\r\nexport { AuthNavigator };\r\n","/*\r\n * File: Home.tsx\r\n * Project: frontend\r\n * Version: 1.0.0\r\n * File Created: Monday, 11th May 2020 11:36:00 am\r\n * Author: Eoan O'Dea - eoan@wspace.ie\r\n * ---------------\r\n * File Description: A simple static page to demonstrate some features of react native\r\n * Last Modified: Saturday, 16th May 2020 8:57:16 pm\r\n * Modified By: Eoan O'Dea - eoan@wspace.ie\r\n * ---------------\r\n * Copyright 2020 - WebSpace\r\n */\r\n\r\nimport React from \"react\";\r\nimport { View } from \"react-native\";\r\nimport { Button, Layout, Text, Icon, IconProps } from \"@ui-kitten/components\";\r\nimport { AppRoute } from \"../../navigation/app-routes\";\r\nimport { IInitialState } from \"../../reducers/interfaces\";\r\nimport { connect } from \"react-redux\";\r\nimport { gameActions } from \"../../actions\";\r\nimport { HomeScreenProps } from \"../../navigation/main.navigator\";\r\nimport { IHostGame } from \"../../actions/game\";\r\nimport SignoutScreen from \"../auth/sign-out.component\";\r\n\r\n/**\r\n * Importing styles\r\n * @param theme path\r\n * @param App Module name\r\n */\r\nconst styles = require(\"../../themes\")(\"App\");\r\n\r\ninterface IActions extends HomeScreenProps {\r\n  hostGameAction: (body: IHostGame) => void;\r\n}\r\n\r\ninterface IProps {\r\n  name: string;\r\n  token: string;\r\n  isHost: boolean;\r\n}\r\n\r\n/**\r\n * Rendering the view\r\n */\r\nconst Home = (props: IProps & IActions) => {\r\n  /**\r\n   * If the user is logged in, start a new game as a host\r\n   *\r\n   * if not redirect them to auth\r\n   */\r\n  const hostOrLogin = () => {\r\n    if (props.token && props.token !== \"\") {\r\n      props.hostGameAction({ username: props.name, token: props.token });\r\n      props.navigation.navigate(AppRoute.GAME);\r\n    } else props.navigation.navigate(AppRoute.AUTH);\r\n  };\r\n\r\n  const settingsIcon = (props: IconProps) => (\r\n    <Icon {...props} name=\"settings-2-outline\" />\r\n  )\r\n\r\n  const renderSignoutAndCogContainer = () => {\r\n    if(props.token && props.token !== \"\") return (\r\n      <View style={styles.signOutAndCogContainer}>\r\n        <SignoutScreen />\r\n        <Button\r\n            style={styles.settingsCog}\r\n            onPress={() => props.navigation.navigate(AppRoute.DEVINFO)}\r\n            appearance='ghost' \r\n            accessoryRight={settingsIcon}\r\n        ></Button>\r\n      </View>\r\n    )\r\n\r\n    return (\r\n      <View style={styles.signOutAndCogContainer}>\r\n        <Button\r\n            style={styles.settingsCog}\r\n            onPress={() => props.navigation.navigate(AppRoute.DEVINFO)}\r\n            appearance='ghost' \r\n            accessoryRight={settingsIcon}\r\n        ></Button>\r\n      </View>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Layout style={styles.container}>\r\n      {renderSignoutAndCogContainer()}\r\n      <Text style={styles.title}>\r\n        WHO IS \r\n      </Text>\r\n      <Text style={styles.titleRed}>MORE LIKELY</Text>\r\n      <Text style={styles.title}>\r\n        TO\r\n      </Text>\r\n\r\n      <View>\r\n        <Button\r\n          style={styles.formButton}\r\n          onPress={() => hostOrLogin()}\r\n        >\r\n          HOST\r\n        </Button>\r\n\r\n        <Button\r\n          style={styles.formButton}\r\n          onPress={() => props.navigation.navigate(AppRoute.GAME)}\r\n        >\r\n          JOIN\r\n        </Button>\r\n      </View>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: IInitialState): IProps => {\r\n  const { token, name } = state.auth;\r\n  const { isHost } = state.game;\r\n\r\n  return { token, name, isHost };\r\n};\r\n\r\nexport default connect(mapStateToProps, gameActions)(Home);\r\n","/*\r\n * File: devinfo.component.tsx\r\n * Project: frontend\r\n * Version: 1.0.0\r\n * File Created: Saturday, 6th June 2020 9:13:05 pm\r\n * Author: Eoan O'Dea - eoan@wspace.ie\r\n * ---------------\r\n * File Description: Displaying info for developers\r\n * Last Modified: Saturday, 6th June 2020 9:13:09 pm\r\n * Modified By: Eoan O'Dea - eoan@wspace.ie\r\n * ---------------\r\n * Copyright 2020 - WebSpace\r\n */\r\n\r\nimport React from \"react\";\r\nimport {\r\n  Layout,\r\n  List,\r\n  Text,\r\n  ListItem,\r\n  IconProps,\r\n  Icon,\r\n} from \"@ui-kitten/components\";\r\nimport Constants from \"expo-constants\";\r\nimport { Platform, View } from \"react-native\";\r\nimport { ModalHeader } from \"../../components/modal-header.component\";\r\nimport { AppRoute } from \"../../navigation/app-routes\";\r\nimport { DevInfoScreenProps } from \"../../navigation/main.navigator\";\r\n\r\n/**\r\n * Importing styles\r\n * @param theme path\r\n * @param App Module name\r\n */\r\nconst styles = require(\"../../themes\")(\"Game\");\r\n\r\nconst data = [\r\n  { field: \"Server URL\", value: Constants.manifest.extra.SERVER_URL },\r\n  { field: \"Build Mode\", value: __DEV__ ? \"Development\" : \"Production\" },\r\n  { field: \"Version\", value: Constants.manifest.version },\r\n  { field: \"Platform\", value: Platform.OS },\r\n];\r\n\r\nconst DevInfoScreen = (props: DevInfoScreenProps) => {\r\n  const renderItemIcon = (props: IconProps) => (\r\n    <Icon {...props} name=\"settings-2-outline\" />\r\n  );\r\n\r\n  const renderData = ({ item }: any) => (\r\n    <ListItem\r\n      title={`${item.field}: ${item.value}`}\r\n      accessoryLeft={renderItemIcon}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <Layout style={styles.container}>\r\n      <ModalHeader\r\n        text=\"Developer Information\"\r\n        icon=\"close-outline\"\r\n        status=\"danger\"\r\n        onPress={() => props.navigation.navigate(AppRoute.HOME)}\r\n      />\r\n      <List style={styles.listContainer} data={data} renderItem={renderData} />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default DevInfoScreen;\r\n","/**\r\n * Import modules which can be accessed\r\n */\r\nimport Home from './home.component'\r\nimport DevInfoScreen from './devinfo.component'\r\n\r\n/**\r\n * Export these modules to the rest of the application\r\n */\r\nexport default {\r\n    Home,\r\n    DevInfoScreen\r\n}\r\n","import React from 'react';\r\nimport { RouteProp } from '@react-navigation/core';\r\nimport { createStackNavigator, StackNavigationProp } from '@react-navigation/stack';\r\nimport { AppRoute } from './app-routes';\r\nimport { AppNavigatorParams } from './app.navigator';\r\nimport main from '../scenes/main';\r\n\r\ntype MainNavigatorParams = AppNavigatorParams & {\r\n  [AppRoute.HOME]: undefined;\r\n  [AppRoute.DEVINFO]: undefined;\r\n}\r\n\r\nexport interface HomeScreenProps {\r\n  navigation: StackNavigationProp<MainNavigatorParams, AppRoute.HOME>;\r\n  route: RouteProp<MainNavigatorParams, AppRoute.HOME>;\r\n}\r\n\r\nexport interface DevInfoScreenProps {\r\n  navigation: StackNavigationProp<MainNavigatorParams, AppRoute.HOME>;\r\n  route: RouteProp<MainNavigatorParams, AppRoute.HOME>;\r\n}\r\n\r\nconst Stack = createStackNavigator<MainNavigatorParams>();\r\n\r\nexport const MainNavigator = (props: MainNavigatorParams): React.ReactElement => (\r\n  <Stack.Navigator {...props} headerMode='none' screenOptions={{animationEnabled: true}}>\r\n    <Stack.Screen name={AppRoute.HOME} component={main.Home}/>\r\n    <Stack.Screen name={AppRoute.DEVINFO} component={main.DevInfoScreen}/>\r\n  </Stack.Navigator>\r\n);\r\n","import React from 'react';\r\nimport { RouteProp } from '@react-navigation/core';\r\nimport { createStackNavigator, StackNavigationProp } from '@react-navigation/stack';\r\nimport { AppRoute } from './app-routes';\r\nimport { AppNavigatorParams } from './app.navigator';\r\nimport game from '../scenes/game'\r\nimport { IInitialState } from '../reducers/interfaces';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from \"../actions/game\";\r\n\r\ntype GameNavigatorParams = AppNavigatorParams & {\r\n  [AppRoute.HOST]: undefined;\r\n  [AppRoute.JOIN]: undefined;\r\n  [AppRoute.LOBBY]: undefined;\r\n  [AppRoute.LOBBY]: undefined;\r\n}\r\n\r\nexport interface HostGameScreenProps {\r\n  navigation: StackNavigationProp<GameNavigatorParams, AppRoute.HOST>;\r\n  route: RouteProp<GameNavigatorParams, AppRoute.HOST>;\r\n}\r\n\r\nexport interface JoinGameScreenProps {\r\n    navigation: StackNavigationProp<GameNavigatorParams, AppRoute.JOIN>;\r\n    route: RouteProp<GameNavigatorParams, AppRoute.JOIN>;\r\n}\r\n\r\nexport interface LobbyScreenProps {\r\n  navigation: StackNavigationProp<GameNavigatorParams, AppRoute.LOBBY>;\r\n  route: RouteProp<GameNavigatorParams, AppRoute.LOBBY>;\r\n}\r\n\r\nexport interface GameScreenProps {\r\n  navigation: StackNavigationProp<GameNavigatorParams, AppRoute.GAME>;\r\n  route: RouteProp<GameNavigatorParams, AppRoute.GAME>;\r\n}\r\n\r\nconst Stack = createStackNavigator<GameNavigatorParams>();\r\n\r\ninterface IGameActions {\r\n  initGameSock: () => void;\r\n}\r\n\r\ninterface IGameProps {\r\n  inLobby: boolean;\r\n  inGame: boolean;\r\n  init: boolean;\r\n}\r\n\r\nexport const Game = (props: IGameProps & IGameActions): React.ReactElement => {\r\n  if(!props.init) props.initGameSock()\r\n  return (\r\n  <Stack.Navigator headerMode='none' screenOptions={{animationEnabled: true}}>\r\n    {\r\n      !props.inLobby\r\n      ? (\r\n        <Stack.Screen name={AppRoute.JOIN} component={game.JoinScreen}/>\r\n      )\r\n      : (\r\n        !props.inGame\r\n        ? <Stack.Screen name={AppRoute.LOBBY} component={game.LobbyScreen}/>\r\n        : <Stack.Screen name={AppRoute.GAME} component={game.GameScreen}/>\r\n      )\r\n    }\r\n  </Stack.Navigator>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: IInitialState): IGameProps => {\r\n  const { inLobby, inGame, init } = state.game;\r\n\r\n  return { inLobby, inGame, init };\r\n};\r\n\r\nconst GameNavigator = connect(mapStateToProps, actions)(Game);\r\n\r\nexport { GameNavigator };\r\n","import React from 'react';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { AuthNavigator } from './auth.navigator';\r\nimport { MainNavigator } from './main.navigator';\r\nimport { AppRoute } from './app-routes';\r\nimport { GameNavigator } from './game.navigator';\r\n\r\ntype StackNavigatorProps = React.ComponentProps<typeof Stack.Navigator>;\r\n\r\nexport type AppNavigatorParams = {\r\n  [AppRoute.AUTH]: undefined;\r\n  [AppRoute.HOME]: undefined;\r\n  [AppRoute.GAME]: undefined;\r\n}\r\n\r\nconst Stack = createStackNavigator<AppNavigatorParams>();\r\n\r\nexport const AppNavigator = (props: Partial<StackNavigatorProps>): React.ReactElement => (\r\n  <Stack.Navigator {...props} mode=\"modal\" headerMode='none' screenOptions={{animationEnabled: true}}>\r\n    <Stack.Screen name={AppRoute.HOME} component={MainNavigator}/>\r\n    <Stack.Screen name={AppRoute.AUTH} component={AuthNavigator}/>\r\n    <Stack.Screen name={AppRoute.GAME} component={GameNavigator}/>\r\n  </Stack.Navigator>\r\n);\r\n","/*\r\n * File: App.tsx\r\n * Project: frontend\r\n * Version: 1.0.0\r\n * File Created: Saturday, 26th October 1985 9:15:00 am\r\n * Author: Eoan O'Dea - eoan@wspace.ie\r\n * ---------------\r\n * File Description: Primary entrypoint for the application\r\n * Last Modified: Saturday, 16th May 2020 9:00:50 pm\r\n * Modified By: Eoan O'Dea - eoan@wspace.ie\r\n * ---------------\r\n * Copyright 2020 - WebSpace\r\n */\r\n\r\nimport React from \"react\";\r\n\r\n/**\r\n * Redux dependencies\r\n */\r\nimport thunk from \"redux-thunk\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reducers from \"./src/reducers\";\r\n\r\n/**\r\n * Navigation dependencies & modules\r\n */\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { AppNavigator } from \"./src/navigation/app.navigator\";\r\n\r\n/**\r\n * UI & Component Library dependencies\r\n */\r\nimport { ApplicationProvider, IconRegistry } from '@ui-kitten/components';\r\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\r\nimport { EvaIconsPack } from '@ui-kitten/eva-icons';\r\nimport * as eva from '@eva-design/eva';\r\n\r\n/**\r\n * Custom UI Component theming\r\n */\r\nimport { default as theme } from './src/assets/custom-theme.json';\r\n\r\n/**\r\n * Initialise redux store\r\n * Along with the redux dev tools\r\n */\r\nconst store = createStore(\r\n  reducers,\r\n  compose(\r\n    //@ts-ignore\r\n    applyMiddleware(thunk), window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : (f) => f\r\n  )\r\n);\r\n\r\n/**\r\n * Entry point for the application\r\n */\r\nexport default function App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <IconRegistry icons={EvaIconsPack} />\r\n      <ApplicationProvider {...eva} theme={{...eva.dark, ...theme}}>\r\n          <SafeAreaProvider>\r\n            <NavigationContainer>\r\n              <AppNavigator />\r\n            </NavigationContainer>\r\n          </SafeAreaProvider>\r\n      </ApplicationProvider>\r\n    </Provider>\r\n  );\r\n}\r\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","/*\r\n * File: index.ts\r\n * Project: frontend\r\n * Version: 1.0.0\r\n * File Created: Monday, 11th May 2020 11:36:00 am\r\n * Author: Eoan O'Dea - eoan@wspace.ie\r\n * ---------------\r\n * File Description: Primary theme controller for the application\r\n * Last Modified: Saturday, 16th May 2020 8:59:09 pm\r\n * Modified By: Eoan O'Dea - eoan@wspace.ie\r\n * ---------------\r\n * Copyright 2020 - WebSpace\r\n */\r\n\r\n/**\r\n * The name of the theme (folder)\r\n */\r\nconst theme = \"light\"\r\n\r\n/**\r\n * Aquire the styles from that theme\r\n */\r\nconst styles = require(`./${theme}`).default;\r\n\r\n/**\r\n * Export the theme to the rest of the application\r\n */\r\nmodule.exports = (fileName: string | number) => styles[fileName] || {};\r\n","var map = {\n\t\"./\": 39,\n\t\"./index\": 39,\n\t\"./index.ts\": 39,\n\t\"./light\": 158,\n\t\"./light/\": 158,\n\t\"./light/App\": 168,\n\t\"./light/App.ts\": 168,\n\t\"./light/Form\": 169,\n\t\"./light/Form.ts\": 169,\n\t\"./light/Game\": 170,\n\t\"./light/Game.ts\": 170,\n\t\"./light/Header\": 171,\n\t\"./light/Header.ts\": 171,\n\t\"./light/index\": 158,\n\t\"./light/index.ts\": 158\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 480;"],"sourceRoot":""}